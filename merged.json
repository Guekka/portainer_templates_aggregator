{
    "version": "2",
    "templates": [
        {
            "categories": [
                "Other"
            ],
            "description": "AdGuard Home is a network-wide software for blocking ads & tracking. After you set it up, it\u2019ll cover ALL your home devices, and you don\u2019t need any client-side software for that. With the rise of Internet-Of-Things and connected devices, it becomes more and more important to be able to control your whole network.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "label": "CONTEXT_PATH",
                    "name": "CONTEXT_PATH",
                    "set": "adguard home"
                }
            ],
            "image": "adguard/adguardhome:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/adguard.png",
            "name": "adguard",
            "platform": "linux",
            "ports": [
                "53:53/tcp",
                "53:53/udp",
                "67:67/udp",
                "68:68/tcp",
                "68:68/udp",
                "80:80/tcp",
                "443:443/tcp",
                "853:853/tcp",
                "3000:3000/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Adguard",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Adguard/Workdir",
                    "container": "/opt/adguardhome/work"
                },
                {
                    "bind": "/portainer/Files/AppData/Adguard/Conf",
                    "container": "/opt/adguardhome/conf"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Adminer",
            "name": "Adminer",
            "description": "Managment of MySQL",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://www.adminer.org/' target='_blank' rel='noopener'>Adminer.org</a>",
            "categories": [
                "SelfHosted",
                "Database",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/adminer.png",
            "repository": {
                "stackfile": "composes-files/adminer.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "adminer"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                }
            ]
        },
        {
            "categories": [
                "Music"
            ],
            "description": "Airsonic is a free, web-based media streamer, providing ubiqutious access to your music. Use it to share your music with friends, or to listen to your own music while at work. You can stream to multiple players simultaneously, for instance to one player in your kitchen and another in your living room.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "label": "CONTEXT_PATH",
                    "name": "CONTEXT_PATH",
                    "set": "airsonic"
                },
                {
                    "label": "JAVA_OPTS",
                    "name": "JAVA_OPTS",
                    "set": "-Xms256m -Xmx512m"
                }
            ],
            "image": "linuxserver/airsonic:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/airsonic-logo.png",
            "name": "airsonic",
            "platform": "linux",
            "ports": [
                "4040:4040/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Airsonic",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Music",
                    "container": "/music"
                },
                {
                    "bind": "/portainer/Files/AppData/Airsonic/Playlists",
                    "container": "/playlists"
                },
                {
                    "bind": "/portainer/Podcasts",
                    "container": "/podcasts"
                },
                {
                    "bind": "/portainer/Files/AppData/Airsonic/Media",
                    "container": "/media"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/Airsonic/",
                    "container": "/config"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Ampache",
            "name": "Ampache",
            "description": "web based audio/video streaming application and file manager allowing you to access your music & videos from anywhere, using almost any internet enabled device.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://github.com/ampache/ampache-docker' target='_blank' rel='noopener'>Github.com</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://ampache.org/img/logo/ampache-logo.png",
            "repository": {
                "stackfile": "composes-files/ampache.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "ampache"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                }
            ]
        },
        {
            "type": 3,
            "title": "Apprise API",
            "name": "Apprise API",
            "description": "Send notifications to more then 70+ services.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://github.com/caronc/apprise-api' target='_blank' rel='noopener'>Github.com</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/apprise.png",
            "repository": {
                "stackfile": "composes-files/apprise-api.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "apprise-api"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "C# application with primary purpose of farming Steam cards from multiple accounts simultaneously.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "justarchi/archisteamfarm:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/ASF.png",
            "name": "ArchiSteamFarm",
            "note": "<a href='https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Template/template.json' target='_blank'>Source</a>\nRequires an ASF.json with headless enabled, IPCPassword set and an IPC.config described by the wiki in order to work. Please generate the former <a href='https://justarchinet.github.io/ASF-WebConfigGenerator'>here</a> and copy the latter from <a href='https://github.com/JustArchiNET/ArchiSteamFarm/wiki/Docker#ipc'>here</a>.",
            "platform": "linux",
            "ports": [
                "1242:1242/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "ArchiSteamFarm",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/ArchiSteamFarm/Config",
                    "container": "/app/config"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/ArchiSteamFarm/Plugins",
                    "container": "/app/plugins/customplugins"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/ArchiSteamFarm/Logs",
                    "container": "/app/logs"
                }
            ]
        },
        {
            "type": 3,
            "title": "Audacity",
            "name": "Audacity",
            "description": "Audacity is an easy-to-use, multi-track audio editor and recorder. Developed by a group of volunteers as open source.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://www.audacityteam.org/ ' target='_blank' rel='noopener'>audacityTeam.org</a></br></br>Default user/pass: <code>abc</code> / <code>abc</code>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/audacity.png",
            "repository": {
                "stackfile": "composes-files/audacity.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "audacity"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "TZ",
                    "label": "Time zone ",
                    "description": "Exemple: Europe/Paris",
                    "default": "Europe/Paris"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools",
                "Authentication"
            ],
            "description": "An open-source authentication and authorization server providing 2-factor authentication and single sign-on (SSO) for your applications via a web portal.",
            "env": [
                {
                    "label": "TZ",
                    "name": "TZ"
                }
            ],
            "image": "authelia/authelia:latest",
            "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/authelia.png",
            "name": "authelia",
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>\nRequires a configuration.yml file in order to work. Documentation is Available <a href='https://docs.authelia.com/deployment/deployment-ha'>here</a>.",
            "platform": "linux",
            "ports": [
                "9091:9091/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Authelia",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Authelia",
                    "container": "/etc/authelia/"
                }
            ]
        },
        {
            "type": 3,
            "title": "Autoheal",
            "name": "Autoheal",
            "description": "Restart your container when unhealthy",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://github.com/willfarrell/docker-autoheal' target='_blank' rel='noopener'>Github.com</a>",
            "categories": [
                "SelfHosted",
                "Docker",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/autoheal.png",
            "repository": {
                "stackfile": "composes-files/autoheal.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "autoheal"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                }
            ]
        },
        {
            "type": 3,
            "title": "Babybuddy",
            "name": "Babybuddy",
            "description": "Babybuddy is a buddy for babies! Helps caregivers track sleep, feedings, diaper changes, tummy time and more to learn about and predict baby's needs without (as much) guess work.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://github.com/babybuddy/babybuddy' target='_blank' rel='noopener'>Github.com</a></br></br>Default user/pass: <code>admin</code> / <code>admin</code>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/babybuddy.png",
            "repository": {
                "stackfile": "composes-files/babybuddy.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "babybuddy"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "TZ",
                    "label": "Time zone ",
                    "description": "Exemple: Europe/Paris",
                    "default": "Europe/Paris"
                }
            ]
        },
        {
            "type": 1,
            "name": "baserow",
            "title": "Baserow",
            "description": " Open source no-code database and Airtable alternative ",
            "logo": "https://mediadepot.github.io/templates/img/baserow.png",
            "image": "baserow/baserow:1.22.3",
            "categories": [
                "Downloaders:",
                "Tools:"
            ],
            "ports": [
                "80/tcp"
            ],
            "volumes": [
                {
                    "container": "/baserow/data",
                    "bind": "/opt/mediadepot/apps/baserow"
                }
            ],
            "env": [
                {
                    "name": "BASEROW_PUBLIC_URL",
                    "label": "BASEROW_PUBLIC_URL",
                    "preset": false
                }
            ],
            "labels": [
                {
                    "name": "traefik.enable",
                    "value": "true"
                },
                {
                    "name": "traefik.http.services.baserow.loadbalancer.server.port",
                    "value": "80"
                },
                {
                    "name": "traefik.http.routers.baserow.entrypoints",
                    "value": "websecure"
                },
                {
                    "name": "traefik.http.routers.baserow.tls.certresolver",
                    "value": "mydnschallenge"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mediadepot/templates/master/portainer.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Bazarr",
            "name": "Bazarr",
            "description": "Bazarr is a companion application to Sonarr and Radarr that manages and downloads subtitles based on your requirements.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://www.bazarr.media/' target='_blank' rel='noopener'>Bazarr.media</a>",
            "categories": [
                "SelfHosted",
                "Mediacenter",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/bazarr.png",
            "repository": {
                "stackfile": "composes-files/bazarr.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "bazarr"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "TZ",
                    "label": "Time zone ",
                    "description": "Exemple: Europe/Paris",
                    "default": "Europe/Paris"
                },
                {
                    "name": "FOLDER_MOVIES",
                    "label": "Your movies folder",
                    "description": "Exemple: /data/movies"
                },
                {
                    "name": "FOLDER_SERIES",
                    "label": "Your series folder",
                    "description": "Exemple: /data/series"
                }
            ]
        },
        {
            "categories": [
                "Music"
            ],
            "description": "The purpose of beets is to get your music collection right once and for all. It catalogs your collection, automatically improving its metadata as it goes using the MusicBrainz database. Then it provides a bouquet of tools for manipulating and accessing your music.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/beets:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/beets-icon.png",
            "name": "beets",
            "platform": "linux",
            "ports": [
                "8337:8337/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Beets",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Beets",
                    "container": "/config"
                },
                {
                    "bind": "/portainer/Downloads",
                    "container": "/downloads"
                },
                {
                    "bind": "/portainer/Music",
                    "container": "/music"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "This is a Bitwarden server API implementation written in Rust compatible with upstream Bitwarden clients*, perfect for self-hosted deployment where running the official resource-heavy service might not be ideal..",
            "image": "bitwardenrs/server:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/bitwarden.png",
            "name": "bitwardenrs",
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>\nThis project is not associated with the Bitwarden project nor 8bit Solutions LLC.",
            "platform": "linux",
            "ports": [
                ":80/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Bitwarden RS",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Bitwarden-rs",
                    "container": "/config"
                }
            ]
        },
        {
            "categories": [
                "Books",
                "Other"
            ],
            "description": "Booksonic is a server and an app for streaming your audiobooks to any pc or android phone. Most of the functionality is also availiable on other platforms that have apps for subsonic",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "default": "booksonic",
                    "label": "CONTEXT_PATH",
                    "name": "CONTEXT_PATH"
                }
            ],
            "image": "linuxserver/booksonic:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/booksonic.png",
            "name": "booksonic",
            "platform": "linux",
            "ports": [
                "4040:4040/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Booksonic",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Books",
                    "container": "/books"
                },
                {
                    "bind": "/portainer/Files/Podcasts",
                    "container": "/podcast"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/Booksonic",
                    "container": "/config"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Bookstack",
            "name": "Bookstack",
            "description": "Wiki selfhosted",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://www.bookstackapp.com/' target='_blank' rel='noopener'>Bookstackapp.com</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/bookstack.png",
            "repository": {
                "stackfile": "composes-files/bookstack.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "bookstack"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "DB_USER",
                    "label": "Database user ",
                    "description": "No spaces or points",
                    "default": "bookstack"
                },
                {
                    "name": "DB_PASSWORD",
                    "label": "Database user password"
                },
                {
                    "name": "DB_ROOT",
                    "label": "Database root password"
                },
                {
                    "name": "TIME_ZONE",
                    "label": "Time zone ",
                    "description": "Example : Europe/Paris",
                    "default": "Europe/Paris"
                }
            ]
        },
        {
            "categories": [
                "Cloud",
                "Books"
            ],
            "description": "COPS links to your Calibre library database and allows downloading and emailing of books directly from a web browser and provides a OPDS feed to connect to your devices.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/cops:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/cops-icon.png",
            "name": "cops",
            "platform": "linux",
            "ports": [
                "80/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "COPS",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Books",
                    "container": "/books"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/Cops",
                    "container": "/config"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "title": "Caddy",
            "description": "HTTP/2 web server with automatic HTTPS",
            "categories": [
                "webserver"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/caddy.png",
            "image": "abiosoft/caddy:latest",
            "ports": [
                "80/tcp",
                "443/tcp",
                "2015/tcp"
            ],
            "volumes": [
                {
                    "container": "/root/.caddy"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Calibre-Web",
            "name": "Calibre-Web",
            "description": "Web library",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://github.com/janeczku/calibre-web' target='_blank' rel='noopener'>Github.com</a>",
            "categories": [
                "SelfHosted",
                "Library",
                "Drack0rr"
            ],
            "platform": "linux",
            "logo": "https://developer.asustor.com/uploadIcons/0020_999_1573465183_calibre-web_256.png",
            "repository": {
                "stackfile": "composes-files/calibre-web.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "calibre-web"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "TIME_ZONE",
                    "label": "Time zone ",
                    "description": "Example : Europe/Paris",
                    "default": "Europe/Paris"
                }
            ]
        },
        {
            "categories": [
                "Downloaders"
            ],
            "description": "Cardigann, a server for adding extra indexers to Sonarr, SickRage and CouchPotato via Torznab and TorrentPotato proxies. Behind the scenes Cardigann logs in and runs searches and then transforms the results into a compatible format.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/cardigann:latest",
            "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/cardigann.png",
            "name": "cardigann",
            "platform": "linux",
            "ports": [
                "5060:5060/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Cardigann",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Cardigann",
                    "container": "/config"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/portainer-2.0/Template/template.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "name": "changedetection",
            "title": "ChangeDetection",
            "description": "changedetection.io - The best and simplest self-hosted open source website change detection monitoring and notification service. An alternative to Visualping, Watchtower",
            "logo": "https://mediadepot.github.io/templates/img/changedetection.jpg",
            "image": "ghcr.io/dgtlmoon/changedetection.io:latest",
            "categories": [
                "Documents:",
                "Network:Other",
                "Tools:"
            ],
            "ports": [
                "5000/tcp"
            ],
            "volumes": [
                {
                    "container": "/datastore",
                    "bind": "/opt/mediadepot/apps/changedetection"
                }
            ],
            "env": [],
            "labels": [
                {
                    "name": "traefik.enable",
                    "value": "true"
                },
                {
                    "name": "traefik.http.services.changedetection.loadbalancer.server.port",
                    "value": "5000"
                },
                {
                    "name": "traefik.http.routers.changedetection.entrypoints",
                    "value": "websecure"
                },
                {
                    "name": "traefik.http.routers.changedetection.tls.certresolver",
                    "value": "mydnschallenge"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mediadepot/templates/master/portainer.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Checkmk",
            "name": "Checkmk",
            "description": "Checkmk provides powerful monitoring of networks, servers, clouds, containers and applications. Fast. Effective.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://checkmk.com/' target='_blank' rel='noopener'>checkmk.com</a>",
            "categories": [
                "SelfHosted",
                "Monitoring",
                "LinIT"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/checkmk.png",
            "repository": {
                "stackfile": "composes-files/checkmk.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "checkmk"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                }
            ]
        },
        {
            "type": 3,
            "title": "Chevereto",
            "name": "Chevereto",
            "description": "Chevereto is an image hosting software that allows you to create a beautiful and full-featured image hosting website on your own server.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://github.com/rodber/chevereto-free' target='_blank' rel='noopener'>Github.com</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/chevereto.png",
            "repository": {
                "stackfile": "composes-files/chevereto.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "chevereto"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "TZ",
                    "label": "Time zone ",
                    "description": "Exemple: Europe/Paris",
                    "default": "Europe/Paris"
                },
                {
                    "name": "FOLDER_DATA",
                    "label": "Your data folder",
                    "description": "Exemple: /data/pictures"
                },
                {
                    "name": "DB_USER",
                    "label": "Database user ",
                    "description": "No spaces or points",
                    "default": "chevereto"
                },
                {
                    "name": "DB_PASSWORD",
                    "label": "Database user password"
                },
                {
                    "name": "DB_ROOT",
                    "label": "Database root password"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "ave recipes in seconds with plain text formatting and create beatiful recipe pages with automated ease.",
            "image": "gregyankovoy/chowdown:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/chowdown.png",
            "name": "Chowdown",
            "platform": "linux",
            "ports": [
                "4000:4000/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Chowdown",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Chowdown",
                    "container": "/config"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "name": "cloudcmd",
            "title": "Cloud Commander",
            "description": "Cloud Commander a file manager for the web with console and editor.",
            "logo": "https://mediadepot.github.io/templates/img/cloudcmd-logo.png",
            "image": "coderaiser/cloudcmd",
            "categories": [
                "Documents:",
                "Network:Other",
                "Tools:"
            ],
            "ports": [
                "8000/tcp"
            ],
            "volumes": [
                {
                    "container": "/media/host/opt/mediadepot",
                    "bind": "/opt/mediadepot/apps"
                },
                {
                    "container": "/media/host/media/storage",
                    "bind": "/media/storage"
                },
                {
                    "container": "/media/host/media/temp",
                    "bind": "/media/temp"
                }
            ],
            "env": [],
            "labels": [
                {
                    "name": "traefik.enable",
                    "value": "true"
                },
                {
                    "name": "traefik.http.services.cloudcmd.loadbalancer.server.port",
                    "value": "8000"
                },
                {
                    "name": "traefik.http.routers.cloudcmd.entrypoints",
                    "value": "websecure"
                },
                {
                    "name": "traefik.http.routers.cloudcmd.tls.certresolver",
                    "value": "mydnschallenge"
                },
                {
                    "name": "traefik.http.routers.cloudcmd.middlewares",
                    "value": "authme"
                },
                {
                    "name": "traefik.http.middlewares.authme.forwardauth.address",
                    "value": "http://authelia:9091/api/verify?rd=https://login.${DEPOT_DOMAIN_NAME}/"
                },
                {
                    "name": "traefik.http.middlewares.authme.forwardauth.trustforwardheader",
                    "value": "true"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mediadepot/templates/master/portainer.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "DNS",
                "Cloud",
                "Other",
                "Tools"
            ],
            "description": "This small Alpine Linux based Docker image will allow you to use the free CloudFlare DNS Service as a Dynamic DNS Provider (DDNS).",
            "note": "<a href='https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/templates.json' target='_blank'>Source</a>\nFollow the steps at https://github.com/oznu/docker-cloudflare-ddns#creating-a-cloudflare-api-token to generate a proper API Token for Cloudflare.",
            "env": [
                {
                    "label": "API_KEY",
                    "name": "API_KEY",
                    "set": "",
                    "description": "Your CloudFlare scoped API token. Follow the steps in the information section above to generate an API Token."
                },
                {
                    "label": "ZONE",
                    "name": "ZONE",
                    "set": "",
                    "description": "The DNS zone that DDNS updates should be applied to. Example: example.com"
                },
                {
                    "label": "SUBDOMAIN",
                    "name": "SUBDOMAIN",
                    "description": "A subdomain of the ZONE to write DNS changes to. If this is not supplied the root zone will be used. Example: dynamic"
                },
                {
                    "label": "RRTYPE",
                    "name": "RRTYPE",
                    "select": [
                        {
                            "text": "A",
                            "value": "A",
                            "default": true
                        },
                        {
                            "text": "AAAA",
                            "value": "AAAA"
                        }
                    ],
                    "description": "Set to AAAA to use set IPv6 records instead of IPv4 records."
                },
                {
                    "label": "PROXIED",
                    "name": "PROXIED",
                    "select": [
                        {
                            "text": "false",
                            "value": "false",
                            "default": true
                        },
                        {
                            "text": "true",
                            "value": "true"
                        }
                    ],
                    "description": "Set to true to make traffic go through the CloudFlare CDN."
                },
                {
                    "label": "DELETE_ON_STOP",
                    "name": "DELETE_ON_STOP",
                    "select": [
                        {
                            "text": "false",
                            "value": "false",
                            "default": true
                        },
                        {
                            "text": "true",
                            "value": "true"
                        }
                    ],
                    "description": "Set to true to have the DNS record deleted when the container is stopped."
                },
                {
                    "label": "DNS_SERVER",
                    "name": "DNS_SERVER",
                    "description": "Set to the IP address of the DNS server you would like to use. Defaults to 1.1.1.1 otherwise."
                },
                {
                    "label": "CUSTOM_LOOKUP_CMD",
                    "name": "CUSTOM_LOOKUP_CMD",
                    "description": "Set to any shell command to run them and have the IP pulled from the standard output. Leave unset to use default IP address detection methods."
                },
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "oznu/cloudflare-ddns:latest",
            "logo": "https://unpkg.com/simple-icons@latest/icons/cloudflare.svg",
            "name": "cloudflare-ddns",
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "title": "Cloudflare DDNS",
            "type": 1
        },
        {
            "type": 2,
            "title": "CockroachDB",
            "description": "CockroachDB cluster",
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>\nDeploys an insecure CockroachDB cluster, please refer to <a href=\"https://www.cockroachlabs.com/docs/stable/orchestrate-cockroachdb-with-docker-swarm.html\" target=\"_blank\">CockroachDB documentation</a> for production deployments.",
            "categories": [
                "database"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/cockroachdb.png",
            "repository": {
                "url": "https://github.com/mikestraney/portainer-templates",
                "stackfile": "stacks/cockroachdb/docker-stack.yml"
            }
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "Code-server is VS Code running on a remote server, accessible through the browser.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "GUID"
                },
                {
                    "label": "TZ",
                    "name": "TZ"
                },
                {
                    "label": "PASSWORD",
                    "name": "PASSWORD"
                },
                {
                    "label": "SUDO_PASSWORD",
                    "name": "SUDO_PASSWORD"
                },
                {
                    "default": "example.my.domain",
                    "label": "PROXY_DOMAIN",
                    "name": "PROXY_DOMAIN"
                }
            ],
            "image": "linuxserver/code-server:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/code-server.png",
            "name": "code-server",
            "platform": "linux",
            "ports": [
                "8443:8443/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Code Server",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Code-Server",
                    "container": "/config"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Productivity"
            ],
            "description": "Codiad is a web-based IDE framework with a small footprint and minimal requirements.\n  ",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/codiad:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/codiad-icon.png",
            "name": "codiad",
            "platform": "linux",
            "ports": [
                "80/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Codiad",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Codiad",
                    "container": "/config"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "title": "CommandBox",
            "description": "ColdFusion (CFML) CLI",
            "categories": [
                "development"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ortussolutions-commandbox.png",
            "image": "ortussolutions/commandbox:latest",
            "env": [
                {
                    "name": "CFENGINE",
                    "set": "lucee@4.5"
                }
            ],
            "ports": [
                "8080/tcp",
                "8443/tcp"
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "title": "ContentBox",
            "description": "Open-source modular CMS",
            "categories": [
                "CMS"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ortussolutions-contentbox.png",
            "image": "ortussolutions/contentbox:latest",
            "env": [
                {
                    "name": "express",
                    "set": "true"
                },
                {
                    "name": "install",
                    "set": "true"
                },
                {
                    "name": "CFENGINE",
                    "set": "lucee@4.5"
                }
            ],
            "ports": [
                "8080/tcp",
                "8443/tcp"
            ],
            "volumes": [
                {
                    "container": "/data/contentbox/db"
                },
                {
                    "container": "/app/includes/shared/media"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Downloaders",
                "Video"
            ],
            "description": "CouchPotato (CP) is an automatic NZB and torrent downloader. You can keep a \"movies I want\"-list and it will search for NZBs/torrents of these movies every X hours. Once a movie is found, it will send it to SABnzbd or download the torrent to a specified directory.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/couchpotato:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/couchpotato-icon.png",
            "name": "couchpotato",
            "platform": "linux",
            "ports": [
                "5050:5050/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "CouchPotato",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Couchpotato",
                    "container": "/config"
                },
                {
                    "bind": "/portainer/Downloads",
                    "container": "/downloads"
                },
                {
                    "bind": "/portainer/Movies",
                    "container": "/movies"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "title": "CrateDB",
            "description": "An open-source distributed SQL database",
            "categories": [
                "database"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/cratedb.png",
            "image": "crate:latest",
            "ports": [
                "4200/tcp",
                "4300/tcp"
            ],
            "volumes": [
                {
                    "container": "/data"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Music"
            ],
            "description": "DAAP (iTunes) media server with support for AirPlay devices, Apple Remote (and compatibles), MPD and internet radio.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/daapd:latest",
            "logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/daapd-icon.png",
            "name": "daapd",
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "title": "Daapd",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Daapd",
                    "container": "/config"
                },
                {
                    "bind": "/portainer/Music",
                    "container": "/music"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "Another application bookmark dashboard, with fun features.",
            "image": "rmountjoy/dashmachine:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/dashmachine_logo.png",
            "name": "dashmachine",
            "platform": "linux",
            "ports": [
                "5000:5000/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "DashMachine",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Dashmachine",
                    "container": "/dashmachine/dashmachine/user_data"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Dashy",
            "name": "Dashy",
            "description": "Personnal dashboard",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://dashy.to/' target='_blank' rel='noopener'>Dashy.to</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/dashy.png",
            "repository": {
                "stackfile": "composes-files/dashy.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "dashy"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                }
            ]
        },
        {
            "type": 1,
            "title": "Datadog agent",
            "description": "Collect events and metrics",
            "categories": [
                "Monitoring"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/datadog_agent.png",
            "image": "datadog/agent:latest",
            "env": [
                {
                    "name": "DD_API_KEY",
                    "label": "Datadog API key"
                }
            ],
            "volumes": [
                {
                    "container": "/var/run/docker.sock",
                    "bind": "/var/run/docker.sock",
                    "readonly": true
                },
                {
                    "container": "/host/sys/fs/cgroup",
                    "bind": "/sys/fs/cgroup",
                    "readonly": true
                },
                {
                    "container": "/host/proc",
                    "bind": "/proc",
                    "readonly": true
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "FTP",
                "Other",
                "Tools"
            ],
            "description": "davos is an FTP automation tool that periodically scans given host locations for new files. It can be configured for various purposes, including listening for specific files to appear in the host location, ready for it to download and then move, if required. It also supports completion notifications as well as downstream API calls, to further the workflow.\r\n\r\n/config : AppData Location\r\n/download : File Download Location",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/davos:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/davos.png",
            "name": "davos",
            "platform": "linux",
            "ports": [
                "8080/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Davos",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Davos",
                    "container": "/config"
                },
                {
                    "bind": "/portainer/Downloads",
                    "container": "/downloads"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Deemix",
            "name": "Deemix",
            "description": "Download music from deezer easily",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://deemix.app/' target='_blank' rel='noopener'>deemix.app</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://deemix.app/img/logo.png",
            "repository": {
                "stackfile": "composes-files/deemix.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "deemix"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                }
            ]
        },
        {
            "type": 3,
            "title": "Deluge",
            "name": "Deluge",
            "description": "Webinterface for download torrents.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://deluge-torrent.org/ ' target='_blank' rel='noopener'>Deluge-Torrent.org</a></br></br>Port to open: <code>6881</code>",
            "categories": [
                "SelfHosted",
                "Mediacenter",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/deluge.png",
            "repository": {
                "stackfile": "composes-files/deluge.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "deluge"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "TZ",
                    "label": "Time zone ",
                    "description": "Exemple: Europe/Paris",
                    "default": "Europe/Paris"
                },
                {
                    "name": "FOLDER_DOWNLOAD",
                    "label": "Your download folder",
                    "description": "Exemple: /data/download"
                },
                {
                    "name": "FOLDER_SERIES",
                    "label": "Your series folder",
                    "description": "Exemple: /data/series"
                },
                {
                    "name": "FOLDER_MOVIES",
                    "label": "Your movies folder",
                    "description": "Exemple: /data/movies"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "VPN",
                "Tools"
            ],
            "description": "This container contains OpenVPN and Deluge with a configuration where Deluge is running only when OpenVPN has an active tunnel. It bundles configuration files for many popular VPN providers to make the setup easier.",
            "env": [
                {
                    "default": "1001",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1001",
                    "label": "PGID",
                    "name": "PUID"
                },
                {
                    "default": "MULLVAD",
                    "description": "see https://github.com/sgtsquiggs/docker-deluge-openvpn",
                    "label": "OPENVPN_PROVIDER",
                    "name": "OPENVPN_PROVIDER"
                },
                {
                    "label": "OPENVPN_USERNAME",
                    "name": "OPENVPN_USERNAME"
                },
                {
                    "label": "OPENVPN_PASSWORD",
                    "name": "OPENVPN_PASSWORD"
                }
            ],
            "image": "sgtsquiggs/deluge-openvpn:latest",
            "name": "deluge-openvpn",
            "platform": "linux",
            "ports": [
                "8112:8112/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Deluge openvpn",
            "type": 1,
            "volumes": [
                {
                    "bind": "/etc/localtime",
                    "container": "/etc/localtime"
                },
                {
                    "bind": "/portainer/Downloads",
                    "container": "/downloads"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/DelugeOpenVPN/config",
                    "container": "/config"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/portainer-2.0/Template/template.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Dillinger",
            "name": "Dillinger",
            "description": "Write your markdown with HTML live edit",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://github.com/joemccann/dillinger' target='_blank' rel='noopener'>Github.com</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/dillinger.png",
            "repository": {
                "stackfile": "composes-files/dillinger.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "dillinger"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                }
            ]
        },
        {
            "categories": [
                "Docker",
                "Tools",
                "Other"
            ],
            "description": "Docker image registry",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "registry:latest",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/registry.png",
            "name": "docker-registry",
            "platform": "linux",
            "ports": [
                "5000:5000/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Docker Registry",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/DockerRegistry",
                    "container": "/var/lib/registry"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "title": "Dokku",
            "description": "Dokku setup as a container",
            "categories": [
                "PaaS"
            ],
            "platform": "linux",
            "logo": "",
            "image": "dokku/dokku",
            "ports": [
                "22/tcp",
                "80/tcp",
                "443/tcp"
            ],
            "volumes": [
                {
                    "container": "/mnt/dokku",
                    "bind": "/var/lib/dokku"
                },
                {
                    "container": "/var/run/docker.sock",
                    "bind": "/var/run/docker.sock"
                }
            ],
            "env": [
                {
                    "name": "DOKKU_HOSTNAME",
                    "label": "Dokku hostname",
                    "description": "Global hostname to be registered by Dokku"
                },
                {
                    "name": "DOKKU_HOST_ROOT",
                    "label": "Dokku host root",
                    "default": "/var/lib/dokku/home/dokku",
                    "description": "Image build cache path. Generally set to <data dir> + '/home/dokku'"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/portainer/templates/master/templates-2.0.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "HomeAutomation",
                "Management"
            ],
            "description": "Domoticz is a Home Automation System that lets you monitor and configure various devices like: Lights, Switches, various sensors/meters like Temperature, Rain, Wind, UV, Electra, Gas, Water and much more. Notifications/Alerts can be sent to any mobile device",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/domoticz:latest",
            "logo": "https://github.com/domoticz/domoticz/raw/master/www/images/logo.png",
            "name": "domoticz",
            "platform": "linux",
            "ports": [
                "1443:1443/tcp",
                "6144:6144/tcp",
                "8080:8080/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Domoticz",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Domoticz",
                    "container": "/config"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Other",
                "Tools",
                "Maintenance"
            ],
            "description": "Dozzle is a simple, lightweight application that provides you with a web based interface to monitor your Docker container logs live. It doesn\u2019t store log information, it is for live monitoring of your container logs only.",
            "image": "amir20/dozzle:latest",
            "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/dozzle.png",
            "name": "dozzle",
            "platform": "linux",
            "ports": [
                "8080:8080/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Dozzle",
            "type": 1,
            "volumes": [
                {
                    "bind": "/var/run/docker.sock",
                    "container": "/var/run/docker.sock"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Security"
            ],
            "description": "Dradis Framework: Collaboration and reporting for IT Security teams http://dradisframework.org",
            "image": "raesene/dradis:latest",
            "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/dradis-logo.png",
            "name": "dradis",
            "platform": "linux",
            "ports": [
                "3000:3000/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Dradis",
            "type": 1,
            "note": "<a href='https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/portainer-2.0/Template/template.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "name": "droppy",
            "title": "Droppy",
            "description": "Droppy is a self-hosted file storage server",
            "logo": "https://mediadepot.github.io/templates/img/filebrowser-icon.png",
            "image": "silverwind/droppy:latest",
            "categories": [
                "Tools:",
                "Network:Web",
                "Network:Other",
                "Tools:"
            ],
            "ports": [
                "8989/tcp"
            ],
            "volumes": [
                {
                    "container": "/files/tvshows",
                    "bind": "/media/storage/tvshows"
                },
                {
                    "container": "/files/movies",
                    "bind": "/media/storage/movies"
                },
                {
                    "container": "/files/music",
                    "bind": "/media/storage/music"
                },
                {
                    "container": "/files/photos",
                    "bind": "/media/storage/photos"
                },
                {
                    "container": "/files/ebooks",
                    "bind": "/media/storage/ebooks"
                },
                {
                    "container": "/files/documents",
                    "bind": "/media/storage/documents"
                },
                {
                    "container": "/files/software",
                    "bind": "/media/storage/software"
                },
                {
                    "container": "/files/downloads",
                    "bind": "/media/storage/downloads"
                },
                {
                    "container": "/files/blackhole",
                    "bind": "/media/temp/blackhole"
                },
                {
                    "container": "/files/processing",
                    "bind": "/media/temp/processing"
                },
                {
                    "container": "/config",
                    "bind": "/opt/mediadepot/apps/droppy"
                }
            ],
            "env": [
                {
                    "name": "GID",
                    "label": "GID",
                    "default": "15000",
                    "preset": true
                },
                {
                    "name": "UID",
                    "label": "UID",
                    "default": "15000",
                    "preset": true
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "America/Los_Angeles"
                }
            ],
            "labels": [
                {
                    "name": "traefik.enable",
                    "value": "true"
                },
                {
                    "name": "traefik.http.services.droppy.loadbalancer.server.port",
                    "value": "8989"
                },
                {
                    "name": "traefik.http.routers.droppy.entrypoints",
                    "value": "websecure"
                },
                {
                    "name": "traefik.http.routers.droppy.tls.certresolver",
                    "value": "mydnschallenge"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mediadepot/templates/master/portainer.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "title": "Drupal",
            "description": "Open-source content management framework",
            "categories": [
                "CMS"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/drupal.png",
            "image": "drupal:latest",
            "ports": [
                "80/tcp"
            ],
            "volumes": [
                {
                    "container": "/var/www/html"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "DNS",
                "Tools"
            ],
            "description": "Duck DNS is a free service which will point a DNS (sub domains of duckdns.org) to an IP of your choice. The service is completely free, and doesn't require reactivation or forum posts to maintain its existence.\r\n\r\nFirst, go to duckdns site, register your subdomain and retrieve your token\r\nThen run the docker create command above with your subdomain(s) and token\r\nIt will update your IP with the DuckDNS service every 5 minutes\r\n\r\n",
            "env": [
                {
                    "label": "SUBDOMAINS",
                    "name": "SUBDOMAINS",
                    "set": ""
                },
                {
                    "label": "TOKEN",
                    "name": "TOKEN",
                    "set": ""
                },
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/duckdns:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/duckdns.png",
            "name": "duckdns",
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "title": "Duck DNS",
            "type": 1,
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "name": "duplicacy",
            "title": "Duplicacy",
            "description": "Duplicacy backs up your files to many cloud storages with client-side encryption and the highest level of deduplication",
            "logo": "https://mediadepot.github.io/templates/img/duplicacy-icon.png",
            "image": "mediadepot/duplicacy:latest",
            "categories": [
                "Utility:Backup"
            ],
            "ports": [
                "3875/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/opt/mediadepot/apps/duplicacy/config"
                },
                {
                    "container": "/logs",
                    "bind": "/opt/mediadepot/apps/duplicacy/logs"
                },
                {
                    "container": "/cache",
                    "bind": "/opt/mediadepot/apps/duplicacy/cache"
                },
                {
                    "container": "/source/apps",
                    "bind": "/opt/mediadepot/apps/"
                },
                {
                    "container": "/source/storage",
                    "bind": "/media/storage/"
                }
            ],
            "env": [
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "America/Los_Angeles"
                }
            ],
            "labels": [
                {
                    "name": "traefik.enable",
                    "value": "true"
                },
                {
                    "name": "traefik.http.services.duplicacy.loadbalancer.server.port",
                    "value": "3875"
                },
                {
                    "name": "traefik.http.routers.duplicacy.entrypoints",
                    "value": "websecure"
                },
                {
                    "name": "traefik.http.routers.duplicacy.tls.certresolver",
                    "value": "mydnschallenge"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mediadepot/templates/master/portainer.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Duplicati",
            "name": "Duplicati",
            "description": "Duplicati works with standard protocols like FTP, SSH, WebDAV as well as popular services like Microsoft OneDrive, Amazon Cloud Drive & S3, Google Drive, box.com, Mega, hubiC and many others.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://www.duplicati.com/' target='_blank' rel='noopener'>Duplicati.com</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/duplicati.png",
            "repository": {
                "stackfile": "composes-files/duplicaty.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "duplicati"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "TZ",
                    "label": "Time zone ",
                    "description": "Exemple: Europe/Paris",
                    "default": "Europe/Paris"
                },
                {
                    "name": "BACKUPS_LOCATION",
                    "label": "Destination of your backups",
                    "description": "Example: /apps/backups"
                },
                {
                    "name": "SOURCE_LOCATION",
                    "label": "Folder to backup"
                }
            ]
        },
        {
            "categories": [
                "Video",
                "Other"
            ],
            "description": "An app to emulate the HDHomeRun API which allows Plex Media Server's DVR feature to connect to EETV Boxes.",
            "env": [
                {
                    "default": "localhost",
                    "description": "Specify the host domain/IP to use e.g. 192.168.1.50",
                    "label": "PROXY_HOST",
                    "name": "PROXY_HOST"
                },
                {
                    "default": "5004",
                    "description": "Specify the port to use e.g. 5004",
                    "label": "PROXY_PORT",
                    "name": "PROXY_PORT"
                },
                {
                    "default": "192.168.1.52",
                    "description": "Specify the IP of the EETV Box e.g. 192.168.1.50",
                    "label": "EETV_IP",
                    "name": "EETV_IP"
                },
                {
                    "default": "",
                    "description": "Specify the AppKey for the EETV Box. Leave blank to use default AppKey",
                    "label": "EETV_APP_KEY",
                    "name": "EETV_APP_KEY"
                },
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "olivercullimore/eetv-plex-proxy:latest",
            "name": "eetv-plex-proxy",
            "platform": "linux",
            "ports": [
                "5004:5004/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "EETV Plex Proxy",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/EETVPlexProxy",
                    "container": "/config"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "title": "EdgeConnector 840D",
            "description": "Access Siemens SINUMERIK 840D sl/pl controllers and provide data via OPC UA and MQTT",
            "categories": [
                "edge"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/softing.png",
            "image": "softingindustrial/edgeconnector-840d",
            "ports": [
                "443/tcp",
                "8099/tcp",
                "4897/tcp"
            ],
            "note": "<a href='https://raw.githubusercontent.com/portainer/templates/master/templates-2.0.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "title": "EdgeConnector Aggregator",
            "description": "Offers a powerful OPC UA aggregation service which provides data via OPC UA, as well as MQTT",
            "categories": [
                "edge"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/softing.png",
            "image": "softingindustrial/edgeaggregator",
            "ports": [
                "443/tcp",
                "8099/tcp",
                "4897/tcp"
            ],
            "env": [
                {
                    "name": "TZ",
                    "label": "TZ"
                }
            ],
            "volumes": [
                {
                    "container": "/config"
                },
                {
                    "container": "/mqtt"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/portainer/templates/master/templates-2.0.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "title": "EdgeConnector FANUC CNC",
            "description": "Connect FANUC CNCs and provide the data via OPC UA and MQTT",
            "categories": [
                "edge"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/softing.png",
            "image": "softingindustrial/edgeconnector-fanuc-cnc",
            "ports": [
                "443/tcp",
                "8099/tcp",
                "4897/tcp"
            ],
            "env": [
                {
                    "name": "TZ",
                    "label": "TZ"
                }
            ],
            "volumes": [
                {
                    "container": "/config"
                },
                {
                    "container": "/mqtt"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/portainer/templates/master/templates-2.0.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "title": "EdgeConnector Modbus",
            "description": "Connect Modbus TCP Sensors/PLCs and provide the data via OPC UA and MQTT",
            "categories": [
                "edge"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/softing.png",
            "image": "softingindustrial/edgeconnector-modbus:latest",
            "ports": [
                "443/tcp",
                "8099/tcp",
                "4897/tcp"
            ],
            "note": "<a href='https://raw.githubusercontent.com/portainer/templates/master/templates-2.0.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "title": "EdgeConnector Siemens",
            "description": "Connect Siemens SIMATIC S7-300/400/1200/1500 PLCs and provide the data via OPC UA and MQTT",
            "categories": [
                "edge"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/softing.png",
            "image": "softingindustrial/edgeconnector-siemens",
            "ports": [
                "443/tcp",
                "8099/tcp",
                "4897/tcp"
            ],
            "note": "<a href='https://raw.githubusercontent.com/portainer/templates/master/templates-2.0.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "title": "Elasticsearch",
            "description": "Open-source search and analytics engine",
            "categories": [
                "database"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/elasticsearch.png",
            "image": "elasticsearch:latest",
            "ports": [
                "9200/tcp",
                "9300/tcp"
            ],
            "volumes": [
                {
                    "container": "/usr/share/elasticsearch/data"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Emby",
            "name": "Emby",
            "description": "Media player like Plex.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://emby.media/' target='_blank' rel='noopener'>Emby.media</a>",
            "categories": [
                "SelfHosted",
                "Mediacenter",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/emby.png",
            "repository": {
                "stackfile": "composes-files/emby.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "emby"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "TZ",
                    "label": "Time zone ",
                    "description": "Exemple: Europe/Paris",
                    "default": "Europe/Paris"
                },
                {
                    "name": "FOLDER_SERIES",
                    "label": "Your series folder",
                    "description": "Exemple: /data/series"
                },
                {
                    "name": "FOLDER_MOVIES",
                    "label": "Your movies folder",
                    "description": "Exemple: /data/movies"
                }
            ]
        },
        {
            "type": 3,
            "title": "EmbyStat",
            "name": "EmbyStat",
            "description": "Get all statistics of your Emby server",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://emby.media/' target='_blank' rel='noopener'>Emby.media</a>",
            "categories": [
                "SelfHosted",
                "Mediacenter",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/embystat.png",
            "repository": {
                "stackfile": "composes-files/embystat.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "embystat"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "TZ",
                    "label": "Time zone ",
                    "description": "Exemple: Europe/Paris",
                    "default": "Europe/Paris"
                }
            ]
        },
        {
            "type": 3,
            "title": "Etherpad",
            "name": "Etherpad",
            "description": "Online editor providing collaborative editing in really real-time",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://etherpad.org/' target='_blank' rel='noopener'>etherpad.org</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/etherpad.png",
            "repository": {
                "stackfile": "composes-files/etherpad.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "etherpad"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "DB_USER",
                    "label": "Database user ",
                    "description": "No spaces or points",
                    "default": "etherpad"
                },
                {
                    "name": "DB_PASSWORD",
                    "label": "Database user password"
                },
                {
                    "name": "ADMIN_PASSWORD",
                    "label": "Administration password"
                }
            ]
        },
        {
            "type": 3,
            "title": "FDO",
            "description": "FDO",
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/intel.png",
            "repository": {
                "url": "https://github.com/portainer/templates",
                "stackfile": "stacks/fdo/docker-stack.yml"
            },
            "env": [
                {
                    "name": "owner_api_user",
                    "label": "API Username"
                },
                {
                    "name": "owner_api_password",
                    "label": "API Password"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/portainer/templates/master/templates-2.0.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Ferdi",
            "name": "Ferdi",
            "description": "Centralize your apps in one app",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://getferdi.com/' target='_blank' rel='noopener'>GetFerdi.com</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/ferdi.png",
            "repository": {
                "stackfile": "composes-files/ferdi.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "ferdi"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "IS_CREATION_ENABLED",
                    "label": "Enable creation ",
                    "description": "True / False",
                    "default": "True"
                },
                {
                    "name": "IS_DASHBOARD_ENABLED",
                    "label": "Enable dashboard ",
                    "description": "True / False",
                    "default": "True"
                },
                {
                    "name": "IS_REGISTRATION_ENABLED",
                    "label": "Enable registration ",
                    "description": "True / False",
                    "default": "True"
                },
                {
                    "name": "CONNECT_WITH_FRANZ",
                    "label": "Connect with Franz ",
                    "description": "True / False",
                    "default": "False"
                }
            ]
        },
        {
            "type": 3,
            "title": "FileBrowser",
            "name": "FileBrowser",
            "description": "File manager with web interface",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://github.com/filebrowser/filebrowser' target='_blank' rel='noopener'>Github.com</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/filebrowser.png",
            "repository": {
                "stackfile": "composes-files/filebrowser.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "filebrowser"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "FOLDER",
                    "label": "Folder of yours files",
                    "description": "Example: /data/movies"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                }
            ]
        },
        {
            "type": 3,
            "title": "Filebot",
            "name": "Filebot",
            "description": "The ultimate TV and Movie Renamer",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://www.filebot.net/' target='_blank' rel='noopener'>filebot.net</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/filebot.svg",
            "repository": {
                "stackfile": "composes-files/filebot.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "filebot"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "FOLDER",
                    "label": "Folder of yours files",
                    "description": "Example: /data/movies"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                }
            ]
        },
        {
            "type": 3,
            "name": "filerun",
            "title": "Filerun",
            "description": "access your files anywhere through self-hosted secure cloud storage, file backup and sharing for your photos, videos, files and more.",
            "logo": "https://mediadepot.github.io/templates/img/filerun-logo.png",
            "categories": [
                "Documents:",
                "Network:Other",
                "Tools:"
            ],
            "env": [],
            "repository": {
                "url": "https://github.com/mediadepot/templates",
                "stackfile": "stacks/filerun/docker-compose.yml"
            },
            "note": "<a href='https://raw.githubusercontent.com/mediadepot/templates/master/portainer.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "A Docker container for Firefox.",
            "env": [
                {
                    "default": "5800",
                    "label": "WEB_PORT",
                    "name": "WEB_PORT"
                },
                {
                    "default": "5900",
                    "label": "VNC_PORT",
                    "name": "VNC_PORT"
                },
                {
                    "default": "1",
                    "label": "Keep App Running",
                    "name": "KEEP_APP_RUNNING"
                },
                {
                    "default": "1280",
                    "label": "Display Width",
                    "name": "DISPLAY_WIDTH"
                },
                {
                    "default": "768",
                    "label": "Display Height",
                    "name": "DISPLAY_HEIGHT"
                },
                {
                    "default": "0",
                    "label": "Secure Connection",
                    "name": "SECURE_CONNECTION"
                },
                {
                    "label": "VNC Password",
                    "name": "VNC_PASSWORD",
                    "description": "Note: Password is limited to 8 characters"
                },
                {
                    "default": "1000",
                    "label": "User ID",
                    "name": "USER_ID"
                },
                {
                    "default": "1000",
                    "label": "Group ID",
                    "name": "GROUP_ID"
                },
                {
                    "default": "Europe/London",
                    "label": "Timezone",
                    "name": "TZ"
                },
                {
                    "default": "2g",
                    "label": "Shared Memory Size",
                    "name": "SHM_SIZE"
                },
                {
                    "default": "-nocursor",
                    "label": "X11VNC Extra Options",
                    "name": "X11VNC_EXTRA_OPTS"
                },
                {
                    "default": "jlesage/firefox:latest",
                    "label": "Docker Image",
                    "name": "DOCKER_IMAGE"
                },
                {
                    "default": "/portainer/Files/AppData/Config/Firefox",
                    "label": "Volume Path",
                    "name": "VOLUME_PATH"
                }
            ],
            "logo": "https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/images/firefox.png",
            "name": "firefox",
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/firefox.yml",
                "url": "https://github.com/OliverCullimore/portainer-templates"
            },
            "title": "Firefox",
            "type": 3,
            "note": "<a href='https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "A Docker container for Firefox V2.",
            "env": [
                {
                    "default": "5800",
                    "label": "WEB_PORT",
                    "name": "WEB_PORT"
                },
                {
                    "default": "5900",
                    "label": "VNC_PORT",
                    "name": "VNC_PORT"
                },
                {
                    "default": "1",
                    "label": "Keep App Running",
                    "name": "KEEP_APP_RUNNING"
                },
                {
                    "default": "1280",
                    "label": "Display Width",
                    "name": "DISPLAY_WIDTH"
                },
                {
                    "default": "768",
                    "label": "Display Height",
                    "name": "DISPLAY_HEIGHT"
                },
                {
                    "default": "0",
                    "label": "Secure Connection",
                    "name": "SECURE_CONNECTION"
                },
                {
                    "label": "VNC Password",
                    "name": "VNC_PASSWORD",
                    "description": "Note: Password is limited to 8 characters"
                },
                {
                    "default": "1000",
                    "label": "User ID",
                    "name": "USER_ID"
                },
                {
                    "default": "1000",
                    "label": "Group ID",
                    "name": "GROUP_ID"
                },
                {
                    "default": "Europe/London",
                    "label": "Timezone",
                    "name": "TZ"
                },
                {
                    "default": "2g",
                    "label": "Shared Memory Size",
                    "name": "SHM_SIZE"
                },
                {
                    "default": "-nocursor",
                    "label": "X11VNC Extra Options",
                    "name": "X11VNC_EXTRA_OPTS"
                },
                {
                    "default": "0",
                    "label": "Kiosk Mode",
                    "name": "KIOSK_MODE"
                },
                {
                    "default": "olivercullimore/docker-firefox:master",
                    "label": "Docker Image",
                    "name": "DOCKER_IMAGE"
                },
                {
                    "default": "/portainer/Files/AppData/Config/FirefoxV2",
                    "label": "Volume Path",
                    "name": "VOLUME_PATH"
                }
            ],
            "logo": "https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/images/firefox.png",
            "name": "firefoxv2",
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/firefox.yml",
                "url": "https://github.com/OliverCullimore/portainer-templates"
            },
            "title": "FirefoxV2",
            "type": 3,
            "note": "<a href='https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Flaresolverr",
            "name": "Flaresolverr",
            "description": "FlareSolverr is a proxy server to bypass Cloudflare and DDoS-GUARD protection.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://github.com/FlareSolverr/FlareSolverr' target='_blank' rel='noopener'>Github.com</a>",
            "categories": [
                "SelfHosted",
                "plex",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/flaresolverr.png",
            "repository": {
                "stackfile": "composes-files/flaresolverr.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "flaresolverr"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "CAPTCHA_SOLVER",
                    "label": "Captcha solver ",
                    "description": "Check documentation on Github",
                    "default": "none"
                },
                {
                    "name": "TZ",
                    "label": "Time Zone ",
                    "description": "Ex : Europe/Paris",
                    "default": "Europe/Paris"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                }
            ]
        },
        {
            "type": 1,
            "title": "Floating License Server",
            "description": "License Server for Softing edgeConnector products",
            "categories": [
                "edge"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/softing.png",
            "image": "softingindustrial/floating-license-server:latest",
            "ports": [
                "6200/tcp"
            ],
            "interactive": true,
            "volumes": [
                {
                    "container": "/licsrv/licenses"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/portainer/templates/master/templates-2.0.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Focalboard",
            "name": "Focalboard",
            "description": "Open source project management for technical teams",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://www.focalboard.com/' target='_blank' rel='noopener'>Focalboard.com</a></br>You need this <a href='https://github.com/mattermost/focalboard/blob/main/docker/config.json' target='_blank' rel='noopener'>config.json</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://static-00.iconduck.com/assets.00/focalboard-icon-213x256-ztsf7cez.png",
            "repository": {
                "stackfile": "composes-files/focalboard.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "focalboard"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "DB_USER",
                    "label": "Database user ",
                    "description": "No spaces or points",
                    "default": "focalboard"
                },
                {
                    "name": "DB_PASSWORD",
                    "label": "Database user password"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                }
            ]
        },
        {
            "type": 3,
            "title": "FreshRSS",
            "name": "FreshRSS",
            "description": "Freshrss is a free, self-hostable aggregator for rss feeds.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://freshrss.org/' target='_blank' rel='noopener'>FreshRSS.org</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/freshrss.png",
            "repository": {
                "stackfile": "composes-files/freshrss.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "freshrss"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "TZ",
                    "label": "Time zone ",
                    "description": "Exemple: Europe/Paris",
                    "default": "Europe/Paris"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "NOTE: Once you deploy your GoPhish instance, please navigate to the logs section in Portainer and acquire your 'admin' credentials for login. Gophish is an open-source phishing toolkit designed for businesses and penetration testers. It provides the ability to quickly and easily setup and execute phishing engagements and security awareness training.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "gophish/gophish:latest",
            "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/gophish.png",
            "name": "gophish",
            "platform": "linux",
            "ports": [
                "3333:3333/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "GOPHISH",
            "type": 1,
            "note": "<a href='https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "name": "gaps",
            "title": "Gaps",
            "description": "Gaps searches through your Plex Server or local folders for all movies, then queries for known movies in the same collection.",
            "logo": "https://mediadepot.github.io/templates/img/plex-icon.png",
            "image": "housewrecker/gaps:latest",
            "categories": [
                "Tools:",
                "Network:Web",
                "Network:Other",
                "Tools:"
            ],
            "ports": [
                "8484/tcp"
            ],
            "volumes": [],
            "env": [
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "America/Los_Angeles"
                }
            ],
            "labels": [
                {
                    "name": "traefik.enable",
                    "value": "true"
                },
                {
                    "name": "traefik.http.services.gaps.loadbalancer.server.port",
                    "value": "8484"
                },
                {
                    "name": "traefik.http.routers.gaps.entrypoints",
                    "value": "websecure"
                },
                {
                    "name": "traefik.http.routers.gaps.tls.certresolver",
                    "value": "mydnschallenge"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mediadepot/templates/master/portainer.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Web",
                "Books",
                "Tools"
            ],
            "description": "A WebApp Comic Reader for your favorite digital comics. Reach and read your comic library from any web connected device with a modern web browser",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/gazee:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/gazee-logo.png",
            "name": "gazee",
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "title": "Gazee",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Gazee",
                    "container": "/config"
                },
                {
                    "bind": "/portainer/Comics",
                    "container": "/comics"
                },
                {
                    "bind": "/portainer/Files/AppData/Gazee",
                    "container": "/mylar"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "title": "Ghost",
            "description": "Free and open-source blogging platform",
            "categories": [
                "blog"
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>\nAccess the blog management interface under <code>/ghost/</code>.",
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ghost.png",
            "image": "ghost:latest",
            "ports": [
                "2368/tcp"
            ],
            "volumes": [
                {
                    "container": "/var/lib/ghost/content"
                }
            ]
        },
        {
            "categories": [
                "Tools",
                "Other"
            ],
            "description": "GitLab runner",
            "image": "gitlab/gitlab-runner:alpine",
            "logo": "https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/images/gitlab-runner-icon.png",
            "name": "gitlab-runner",
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "title": "GitLab Runner",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/gitlab-runner/config",
                    "container": "/etc/gitlab-runner"
                },
                {
                    "bind": "/var/run/docker.sock",
                    "container": "/var/run/docker.sock"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Web",
                "Tools"
            ],
            "description": "Git with a cup of tea! Painless self-hosted all-in-one software development service, including Git hosting, code review, team collaboration, package registry and CI/CD.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "gitea/gitea:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/gitea.png",
            "name": "gitea",
            "note": "<a href='https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Template/template.json' target='_blank'>Source</a>\nUse SQLite3 for the database unless you have an external one setup.",
            "ports": [
                "3000:3000/tcp",
                "222:22/tcp"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "title": "Gitea",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Gitea",
                    "container": "/data"
                },
                {
                    "bind": " /etc/timezone",
                    "container": "/etc/timezone:ro"
                },
                {
                    "bind": "/etc/localtime",
                    "container": "/etc/localtime:ro"
                }
            ]
        },
        {
            "type": 1,
            "title": "Gitlab CE",
            "description": "Open-source end-to-end software development platform",
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>\nDefault username is <b>root</b>. Check the <a href=\"https://docs.gitlab.com/omnibus/docker/README.html#after-starting-a-container\" target=\"_blank\">Gitlab documentation</a> to get started.",
            "categories": [
                "development",
                "project-management"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/gitlab_ce.png",
            "image": "gitlab/gitlab-ce:latest",
            "ports": [
                "80/tcp",
                "443/tcp",
                "22/tcp"
            ],
            "volumes": [
                {
                    "container": "/etc/gitlab"
                },
                {
                    "container": "/var/log/gitlab"
                },
                {
                    "container": "/var/opt/gitlab"
                }
            ]
        },
        {
            "type": 3,
            "title": "Glpi",
            "name": "Glpi",
            "description": "IT Management",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://glpi-project.org/fr/' target='_blank' rel='noopener'>glpi-project.org</a>",
            "categories": [
                "SelfHosted",
                "IT Management",
                "Drack0rr"
            ],
            "platform": "linux",
            "logo": "https://www.linuxtricks.fr/upload/logo-glpi.png",
            "repository": {
                "stackfile": "composes-files/glpi.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "glpi"
                },
                {
                    "name": "DB_USER",
                    "label": "Database user ",
                    "description": "No spaces or points",
                    "default": "glpi_user"
                },
                {
                    "name": "DB_PASSWORD",
                    "label": "Database user password"
                },
                {
                    "name": "DB_ROOT_PASSWORD",
                    "label": "Database root password"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "TIME_ZONE",
                    "label": "Time zone ",
                    "description": "Example : Europe/Paris",
                    "default": "Europe/Paris"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "A Docker container for Chrome.",
            "env": [
                {
                    "default": "5800",
                    "label": "WEB_PORT",
                    "name": "WEB_PORT"
                },
                {
                    "default": "5900",
                    "label": "VNC_PORT",
                    "name": "VNC_PORT"
                },
                {
                    "default": "1",
                    "label": "Keep App Running",
                    "name": "KEEP_APP_RUNNING"
                },
                {
                    "default": "1280",
                    "label": "Display Width",
                    "name": "DISPLAY_WIDTH"
                },
                {
                    "default": "768",
                    "label": "Display Height",
                    "name": "DISPLAY_HEIGHT"
                },
                {
                    "default": "0",
                    "label": "Secure Connection",
                    "name": "SECURE_CONNECTION"
                },
                {
                    "label": "VNC Password",
                    "name": "VNC_PASSWORD",
                    "description": "Note: Password is limited to 8 characters"
                },
                {
                    "default": "1000",
                    "label": "User ID",
                    "name": "USER_ID"
                },
                {
                    "default": "1000",
                    "label": "Group ID",
                    "name": "GROUP_ID"
                },
                {
                    "default": "Europe/London",
                    "label": "Timezone",
                    "name": "TZ"
                },
                {
                    "default": "2GB",
                    "label": "Shared Memory Size",
                    "name": "SHM_SIZE"
                },
                {
                    "default": "-nocursor",
                    "label": "X11VNC Extra Options",
                    "name": "X11VNC_EXTRA_OPTS"
                }
            ],
            "logo": "https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/images/chrome.png",
            "name": "googlechrome",
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/chrome.yml",
                "url": "https://github.com/OliverCullimore/portainer-templates"
            },
            "title": "Google Chrome",
            "type": 3,
            "note": "<a href='https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Grafana",
            "name": "Grafana",
            "description": "From heatmaps to histograms, graphs to geomaps: fast and furious visualizations any way you want.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://grafana.com/grafana/dashboards/' target='_blank' rel='noopener'>Grafana.com</a>",
            "categories": [
                "SelfHosted",
                "Monitoring",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/grafana.png",
            "repository": {
                "stackfile": "composes-files/grafana.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "grafana"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "PLUGINS",
                    "label": "Plugins to install ",
                    "description": "Example: grafana-singlestat-panel",
                    "default": "alexanderzobnin-zabbix-app,grafana-singlestat-panel"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools",
                "Finance"
            ],
            "description": "Grocy is an ERP system for your kitchen! Cut down on food waste, and manage your chores with this brilliant utulity.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "label": "Timezone",
                    "name": "TZ"
                }
            ],
            "image": "linuxserver/grocy:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/grocy_logo.png",
            "name": "grocy",
            "platform": "linux",
            "ports": [
                "80/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Grocy",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Grocy",
                    "container": "/config"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Guacamole",
            "name": "Guacamole",
            "description": "Guacamole is an HTML5 web application that provides access to desktop environments using remote desktop protocols (such as VNC or RDP).",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://guacamole.apache.org/' target='_blank' rel='noopener'>guacamole.apache.org</a>",
            "categories": [
                "SelfHosted",
                "Drack0rr"
            ],
            "platform": "linux",
            "logo": "https://www.tech2tech.fr/wp-content/uploads/2019/12/guac-tricolor-300x300.png",
            "repository": {
                "stackfile": "composes-files/guacamole.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "guacamole"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "TZ",
                    "label": "Time zone ",
                    "description": "Exemple: Europe/Paris",
                    "default": "Europe/Paris"
                },
                {
                    "name": "GUAC_DB_PASSWORD",
                    "label": "Your database password ",
                    "description": "Exemple: My-Super-Password!",
                    "default": "My-Super-Password!"
                },
                {
                    "name": "TOTP",
                    "label": "Activate 2fa ",
                    "description": "Exemple: false",
                    "default": "false"
                }
            ]
        },
        {
            "categories": [
                "Video",
                "Music",
                "Other"
            ],
            "description": "HTPC Manaager, a front end for many htpc related applications. Hellowlol version.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/htpcmanager:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/htpcmanager-icon.png",
            "name": "htpcmanager",
            "platform": "linux",
            "ports": [
                "8085:8085/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "HTPC Manager",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/HTPCmanager",
                    "container": "/config"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Hastebin",
            "name": "Hastebin",
            "description": "Share your code easily",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://hastebin.com/about.md' target='_blank' rel='noopener'>Hastebin.com</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/hastebin.png",
            "repository": {
                "stackfile": "composes-files/hastebin.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "hastebin"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                }
            ]
        },
        {
            "categories": [
                "Music"
            ],
            "description": null,
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/headphones:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/headphones-icon.png",
            "name": "headphones",
            "platform": "linux",
            "ports": [
                "8181:8181/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Headphones",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Headphones",
                    "container": "/config"
                },
                {
                    "bind": "/portainer/Downloads",
                    "container": "/Downloads"
                },
                {
                    "bind": "/portainer/Music",
                    "container": "/music"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Healthchecks",
            "name": "Healthchecks",
            "description": "Healthchecks is a watchdog for your cron jobs. It's a web server that listens for pings from your cron jobs, plus a web interface.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://github.com/healthchecks/healthchecks' target='_blank' rel='noopener'>Github.com</a>",
            "categories": [
                "SelfHosted",
                "Monitoring",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/healthchecks.jpg",
            "repository": {
                "stackfile": "composes-files/heathchecks.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "healthchecks"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "DEFAULT_FROM_EMAIL",
                    "label": "From email for alerts",
                    "description": "Example: notification@papamica.com"
                },
                {
                    "name": "EMAIL_HOST",
                    "label": "SMTP host",
                    "description": "Example: mail.infomaniak.com"
                },
                {
                    "name": "EMAIL_PORT",
                    "label": "SMTP port",
                    "description": "Example: 25"
                },
                {
                    "name": "EMAIL_HOST_USER",
                    "label": "SMTP user",
                    "description": "Example: notification@papamica.com"
                },
                {
                    "name": "EMAIL_HOST_PASSWORD",
                    "label": "SMTP user password"
                },
                {
                    "name": "EMAIL_USE_TLS",
                    "label": "Use TLS for SMTP",
                    "description": "True/False"
                },
                {
                    "name": "SUPERUSER_EMAIL",
                    "label": "Admin user email",
                    "description": "Example: admin@papamica.com"
                },
                {
                    "name": "SUPERUSER_PASSWORD",
                    "label": "Admin password"
                },
                {
                    "name": "APPRISE_ENABLED",
                    "label": "Use Apprise notification",
                    "description": "True/False"
                }
            ]
        },
        {
            "categories": [
                "Tools",
                "Web",
                "Other"
            ],
            "description": "Heimdall is a way to organise all those links to your most used web sites and web applications in a simple way.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/heimdall:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/heimdall-icon.png",
            "name": "heimdall",
            "platform": "linux",
            "ports": [
                "80/tcp",
                "443/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Heimdall",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Heimdall",
                    "container": "/config"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Home Assistant",
            "name": "Home Assistant",
            "description": "Open source home automation that puts local control and privacy first.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://www.home-assistant.io/' target='_blank' rel='noopener'>Home-Assistant.io</a></br></br>Warning: network mode host used ! </br>Accessible with port: <code>8123</code>",
            "categories": [
                "SelfHosted",
                "Domotic",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/homeassistant.png",
            "repository": {
                "stackfile": "composes-files/homeassistant.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "home-assistant"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                }
            ]
        },
        {
            "type": 1,
            "name": "homepage",
            "title": "Homepage",
            "description": "A modern (fully static, fast), secure (fully proxied), highly customizable application dashboard with integrations for more than 25 services and translations for over 15 languages. Easily configured via YAML files (or discovery via docker labels).",
            "logo": "https://mediadepot.github.io/templates/img/homepage.png",
            "image": "ghcr.io/benphelps/homepage:latest",
            "categories": [
                "Tools:",
                "Network:Web",
                "Network:Other",
                "Status:Stable"
            ],
            "ports": [
                "3000/tcp"
            ],
            "volumes": [
                {
                    "container": "/app/config",
                    "bind": "/opt/mediadepot/apps/homepage"
                },
                {
                    "container": "/etc/localtime",
                    "bind": "/etc/localtime",
                    "readonly": true
                }
            ],
            "env": [
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "15000",
                    "preset": true
                },
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "15000",
                    "preset": true
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "America/Los_Angeles"
                }
            ],
            "labels": [
                {
                    "name": "traefik.enable",
                    "value": "true"
                },
                {
                    "name": "traefik.http.services.homepage.loadbalancer.server.port",
                    "value": "3000"
                },
                {
                    "name": "traefik.http.routers.homepage.entrypoints",
                    "value": "websecure"
                },
                {
                    "name": "traefik.http.routers.homepage.tls.certresolver",
                    "value": "mydnschallenge"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mediadepot/templates/master/portainer.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "title": "Httpd",
            "description": "Open-source HTTP server",
            "categories": [
                "webserver"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/httpd.png",
            "image": "httpd:latest",
            "ports": [
                "80/tcp"
            ],
            "volumes": [
                {
                    "container": "/usr/local/apache2/htdocs/"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "Create agents that monitor and act on your behalf.",
            "image": "huginn/huginn:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/huginn.png",
            "name": "huginn",
            "platform": "linux",
            "ports": [
                "3000:3000/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Huginn",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/huginn",
                    "container": "/var/lib/mysql"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "ImgProxy",
            "name": "ImgProxy",
            "description": "Proxy for images with processing.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://imgproxy.net/' target='_blank' rel='noopener'>ImgProxy.net</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/imgproxy.png",
            "repository": {
                "stackfile": "composes-files/imgproxy.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "imgproxy"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                }
            ]
        },
        {
            "categories": [
                "Database",
                "Tools",
                "Other"
            ],
            "description": "Open-source document-oriented database",
            "env": [
                {
                    "description": "Automatically initializes a database with the name of this environment variable.",
                    "label": "InfluxDB Database Name",
                    "name": "INFLUXDB_DB"
                },
                {
                    "default": "true",
                    "description": "Enables authentication. Either this must be set or auth-enabled = true must be set within the configuration file for any authentication related options below to work.",
                    "label": "InfluxDB HTTP Auth Enabled",
                    "name": "INFLUXDB_HTTP_AUTH_ENABLED"
                },
                {
                    "description": "The name of the admin user to be created. If this is unset, no admin user is created.",
                    "label": "InfluxDB Admin User",
                    "name": "INFLUXDB_ADMIN_USER"
                },
                {
                    "description": "The password for the admin user configured with INFLUXDB_ADMIN_USER. If this is unset, a random password is generated and printed to standard out.",
                    "label": "InfluxDB Admin Password",
                    "name": "INFLUXDB_ADMIN_PASSWORD"
                },
                {
                    "description": "The name of a user to be created with no privileges. If INFLUXDB_DB is set, this user will be granted read and write permissions for that database.",
                    "label": "InfluxDB User",
                    "name": "INFLUXDB_USER"
                },
                {
                    "description": "The password for the user configured with INFLUXDB_USER. If this is unset, a random password is generated and printed to standard out.",
                    "label": "InfluxDB User Password",
                    "name": "INFLUXDB_USER_PASSWORD"
                },
                {
                    "description": "The name of a user to be created with read privileges on INFLUXDB_DB. If INFLUXDB_DB is not set, this user will have no granted permissions.",
                    "label": "InfluxDB Read User",
                    "name": "INFLUXDB_READ_USER"
                },
                {
                    "description": "The password for the user configured with INFLUXDB_READ_USER. If this is unset, a random password is generated and printed to standard out.",
                    "label": "InfluxDB Read User Password",
                    "name": "INFLUXDB_READ_USER_PASSWORD"
                },
                {
                    "description": "The name of a user to be created with write privileges on INFLUXDB_DB. If INFLUXDB_DB is not set, this user will have no granted permissions.",
                    "label": "InfluxDB Write User",
                    "name": "INFLUXDB_WRITE_USER"
                },
                {
                    "description": "The password for the user configured with INFLUXDB_WRITE_USER. If this is unset, a random password is generated and printed to standard out.",
                    "label": "InfluxDB Write User Password",
                    "name": "INFLUXDB_WRITE_USER_PASSWORD"
                },
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "quay.io/influxdb/influxdb:v2.0.3",
            "logo": "https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/images/influxdb.png",
            "name": "influxdb",
            "platform": "linux",
            "ports": [
                "8086:8086/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "InfluxDB",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/InfluxDB",
                    "container": "/var/lib/influxdb"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Cloud",
                "Productivity",
                "Tools",
                "Other",
                "Web"
            ],
            "description": "Invoices, Expenses and Tasks built with Laravel and Flutter.",
            "env": [
                {
                    "default": "invoice.my.domain",
                    "label": "URL",
                    "name": "URL"
                },
                {
                    "label": "APP_KEY",
                    "name": "APP_KEY"
                },
                {
                    "label": "TZ",
                    "name": "TZ"
                },
                {
                    "label": "DATABASE_PASSWORD",
                    "name": "DATABASE_PASSWORD"
                },
                {
                    "label": "MYSQL_ROOT_PASSWORD",
                    "name": "MYSQL_ROOT_PASSWORD"
                },
                {
                    "label": "PORT",
                    "name": "PORT"
                }
            ],
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/invoice_ninja.png",
            "name": "invoice_ninja",
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>\nThe database user is invoice_ninja and the database is ninja_db. Please generate an app key following the documentation <a href='https://github.com/invoiceninja/dockerfiles'>here</a>. ",
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/invoice-ninja/docker-stack.yml",
                "url": "https://github.com/mikestraney/portainer-templates"
            },
            "title": "Invoice Ninja",
            "type": 2
        },
        {
            "type": 2,
            "title": "IronFunctions",
            "description": "Open-source serverless computing platform",
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>\nDeploys the IronFunctions API and UI.",
            "categories": [
                "serverless"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ironfunctions.png",
            "repository": {
                "url": "https://github.com/mikestraney/portainer-templates",
                "stackfile": "stacks/ironfunctions/docker-stack.yml"
            }
        },
        {
            "type": 1,
            "title": "IronFunctions API",
            "description": "Open-source serverless computing platform",
            "categories": [
                "serverless"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ironfunctions.png",
            "image": "iron/functions:latest",
            "ports": [
                "8080/tcp"
            ],
            "volumes": [
                {
                    "container": "/app/data"
                }
            ],
            "privileged": true,
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "title": "IronFunctions UI",
            "description": "Open-source user interface for IronFunctions",
            "categories": [
                "serverless"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ironfunctions.png",
            "image": "iron/functions-ui:latest",
            "ports": [
                "4000/tcp"
            ],
            "volumes": [
                {
                    "container": "/app/data"
                }
            ],
            "env": [
                {
                    "name": "API_URL",
                    "label": "API URL"
                }
            ],
            "privileged": true,
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Jackett",
            "name": "Jackett",
            "description": "Indexer for torrents and usenets.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://github.com/Jackett/Jackett' target='_blank' rel='noopener'>Gitub.com</a>",
            "categories": [
                "SelfHosted",
                "Mediacenter",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/jackett.png",
            "repository": {
                "stackfile": "composes-files/jackett.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "jackett"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "TZ",
                    "label": "Time zone ",
                    "description": "Exemple: Europe/Paris",
                    "default": "Europe/Paris"
                }
            ]
        },
        {
            "type": 3,
            "title": "Jellyfin",
            "name": "Jellyfin",
            "description": "Media player like Plex.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://jellyfin.org/' target='_blank' rel='noopener'>Jellyfin.org</a>",
            "categories": [
                "SelfHosted",
                "Mediacenter",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/jellyfin.png",
            "repository": {
                "stackfile": "composes-files/jellyfin.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "jellyfin"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "TZ",
                    "label": "Time zone ",
                    "description": "Exemple: Europe/Paris",
                    "default": "Europe/Paris"
                },
                {
                    "name": "FOLDER_SERIES",
                    "label": "Your series folder",
                    "description": "Exemple: /data/series"
                },
                {
                    "name": "FOLDER_MOVIES",
                    "label": "Your movies folder",
                    "description": "Exemple: /data/movies"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "Jellyseer is a free and open source software application for managing requests for your media library.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "fallenbagel/jellyseerr:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/jellyseerr.png",
            "name": "Jellyseerr",
            "platform": "linux",
            "ports": [
                "5055:5055/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Jellyseerr",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Jellyseerr",
                    "container": "/app/config"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Template/template.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Jenkins",
            "name": "Jenkins",
            "description": "Jenkins is an open source continuous integration/continuous delivery and deployment (CI/CD) automation software DevOps tool.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://www.jenkins.io/' target='_blank' rel='noopener'>jenkins.io</a>",
            "categories": [
                "SelfHosted",
                "Drack0rr"
            ],
            "platform": "linux",
            "logo": "https://upload.wikimedia.org/wikipedia/commons/thumb/e/e9/Jenkins_logo.svg/1200px-Jenkins_logo.svg.png",
            "repository": {
                "stackfile": "composes-files/jenkins.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "jenkins"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "JENK_USER",
                    "label": "Admin for Jenkins ",
                    "description": "Example: Admin",
                    "default": "admin"
                },
                {
                    "name": "JENK_PASSWORD",
                    "label": "The admin password ",
                    "description": "Example: My-Super-Password!",
                    "default": "My-Super-Password!"
                },
                {
                    "name": "$JENK_MAIL",
                    "label": "The admin mail",
                    "description": "Example: admin@service.com"
                }
            ]
        },
        {
            "categories": [
                "Tools",
                "Other"
            ],
            "description": "Jetbrains TeamCity Agent",
            "env": [
                {
                    "description": "URL of the TeamCity server agent will connect to.",
                    "label": "Server URL",
                    "name": "SERVER_URL",
                    "default": ""
                }
            ],
            "image": "jetbrains/teamcity-agent",
            "logo": "https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/images/teamcity.png",
            "name": "teamcity-agent",
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "title": "Jetbrains TeamCity Agent",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/teamcity-agent/data",
                    "container": "/data/teamcity_agent/conf"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Tools",
                "Other"
            ],
            "description": "Jetbrains TeamCity Agent (Docker in Docker)",
            "env": [
                {
                    "description": "URL of the TeamCity server agent will connect to.",
                    "label": "Server URL",
                    "name": "SERVER_URL",
                    "default": ""
                },
                {
                    "description": "Start Docker within the Docker container.",
                    "label": "Docker in Docker",
                    "name": "DOCKER_IN_DOCKER",
                    "default": "start"
                }
            ],
            "image": "jetbrains/teamcity-agent:2020.2.4-linux-sudo",
            "logo": "https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/images/teamcity.png",
            "name": "teamcity-agent",
            "platform": "linux",
            "privileged": true,
            "restart_policy": "unless-stopped",
            "title": "Jetbrains TeamCity Agent Docker",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/teamcity-agent/data",
                    "container": "/data/teamcity_agent/conf"
                },
                {
                    "container": "/var/lib/docker"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Tools",
                "Other"
            ],
            "description": "Jetbrains TeamCity Server",
            "image": "jetbrains/teamcity-server",
            "logo": "https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/images/teamcity.png",
            "name": "teamcity-server",
            "platform": "linux",
            "ports": [
                "8111:8111/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Jetbrains TeamCity Server",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/teamcity-server/data",
                    "container": "/data/teamcity_server/datadir"
                },
                {
                    "bind": "/portainer/Files/AppData/teamcity-server/logs",
                    "container": "/opt/teamcity/logs"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Tools",
                "Media",
                "Other"
            ],
            "description": "Jetbrains TeamCity Server with 3 Jetbrains TeamCity Agents (Docker in Docker).",
            "env": [
                {
                    "default": "8111",
                    "label": "TeamCity Server Port",
                    "name": "SERVER_PORT"
                },
                {
                    "default": "-Xmx2g -XX:ReservedCodeCacheSize=350m",
                    "label": "TeamCity Server Memory Options",
                    "name": "SERVER_MEM_OPTS"
                },
                {
                    "description": "Start Docker within the Agent Docker container.",
                    "label": "Agent Docker in Docker",
                    "name": "AGENT_DOCKER_IN_DOCKER",
                    "default": "start"
                },
                {
                    "label": "MySQL Root Password",
                    "name": "MYSQL_ROOT_PASSWORD",
                    "set": ""
                },
                {
                    "default": "teamcity",
                    "label": "MYSQL_DATABASE",
                    "name": "MYSQL_DATABASE"
                },
                {
                    "default": "teamcity",
                    "label": "MYSQL_USER",
                    "name": "MYSQL_USER"
                },
                {
                    "label": "MYSQL_PASSWORD",
                    "name": "MYSQL_PASSWORD"
                },
                {
                    "default": "Europe/London",
                    "label": "Timezone",
                    "name": "TZ"
                },
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "logo": "https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/images/teamcity.png",
            "name": "teamcity-stack",
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/teamcity-server-agents.yml",
                "url": "https://github.com/OliverCullimore/portainer-templates"
            },
            "title": "Jetbrains TeamCity Stack",
            "type": 3,
            "note": "<a href='https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Jirafeau",
            "name": "Jirafeau",
            "description": "Jirafeau is a \"one-click-filesharing\": Select your file, upload, share a link. That's it.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://gitlab.com/mojo42/Jirafeau' target='_blank' rel='noopener'>Gitlab.com</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/jirafeau.png",
            "repository": {
                "stackfile": "composes-files/jirafeau.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "jirafeau"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                }
            ]
        },
        {
            "type": 1,
            "title": "Joomla",
            "description": "Another free and open-source CMS",
            "categories": [
                "CMS"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/joomla.png",
            "image": "joomla:latest",
            "env": [
                {
                    "name": "JOOMLA_DB_HOST",
                    "label": "MySQL database host",
                    "type": "container"
                },
                {
                    "name": "JOOMLA_DB_PASSWORD",
                    "label": "Database password"
                }
            ],
            "ports": [
                "80/tcp"
            ],
            "volumes": [
                {
                    "container": "/var/www/html"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Kavita",
            "name": "Kavita",
            "description": "Web library",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://github.com/Kareadita/Kavita' target='_blank' rel='noopener'>Github.com</a>",
            "categories": [
                "SelfHosted",
                "Library",
                "Drack0rr"
            ],
            "platform": "linux",
            "logo": "https://www.kavitareader.com/img/logo.png",
            "repository": {
                "stackfile": "composes-files/kavita.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "kavita"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "TIME_ZONE",
                    "label": "Time zone ",
                    "description": "Example : Europe/Paris",
                    "default": "Europe/Paris"
                }
            ]
        },
        {
            "type": 3,
            "title": "Keycloak",
            "name": "Keycloak",
            "description": " Add authentication to applications and secure services with minimum effort.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://www.keycloak.org/' target='_blank' rel='noopener'>Keycloak.org</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/keycloak.png",
            "repository": {
                "stackfile": "composes-files/keycloak.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "keycloak"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "DB_USER",
                    "label": "Database user ",
                    "description": "No spaces or points",
                    "default": "keycloak"
                },
                {
                    "name": "DB_PASSWORD",
                    "label": "Database user password"
                },
                {
                    "name": "DB_ROOT_PASSWORD",
                    "label": "Database root password"
                },
                {
                    "name": "KC_USER",
                    "label": "User for Keycloak ",
                    "description": "No spaces or points",
                    "default": "admin"
                },
                {
                    "name": "KC_PASSWORD",
                    "label": "Password for Keycloak user"
                }
            ]
        },
        {
            "type": 3,
            "name": "klaxon",
            "title": "Klaxon",
            "description": "Klaxon is a free, quick to set up and easy to use robot that checks websites regularly so you don't have to.",
            "logo": "https://mediadepot.github.io/templates/img/klaxon-logo.png",
            "categories": [
                "Documents:",
                "Network:Other",
                "Tools:"
            ],
            "env": [
                {
                    "name": "SMTP_PROVIDER",
                    "label": "SMTP_PROVIDER",
                    "default": "SENDGRID"
                },
                {
                    "name": "SENDGRID_USERNAME",
                    "label": "SENDGRID_USERNAME",
                    "default": ""
                },
                {
                    "name": "SENDGRID_PASSWORD",
                    "label": "SENDGRID_PASSWORD",
                    "default": ""
                },
                {
                    "name": "ADMIN_EMAILS",
                    "label": "ADMIN_EMAILS",
                    "default": ""
                }
            ],
            "repository": {
                "url": "https://github.com/mediadepot/templates",
                "stackfile": "stacks/klaxon/docker-compose.yml"
            },
            "note": "<a href='https://raw.githubusercontent.com/mediadepot/templates/master/portainer.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Video"
            ],
            "description": "Headless installation of Kodi\u2122 (formerly known as XBMC\u2122), to enable library updates.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/kodi-headless:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/kodi-icon.png",
            "name": "kodi-headless",
            "platform": "linux",
            "ports": [
                "8080/tcp",
                "9777/udp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Kodi Headless",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Kodi",
                    "container": "/config"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Books"
            ],
            "description": "LazyLibrarian is a program to follow authors and grab metadata for all your digital reading needs.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/lazylibrarian:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/lazylibrarian-icon.png",
            "name": "lazylibrarian",
            "platform": "linux",
            "ports": [
                "5299:5299/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "LazyLibrarian",
            "type": 1,
            "volumes": [
                {
                    "container": "/config"
                },
                {
                    "container": "/downloads"
                },
                {
                    "container": "/books"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Tools",
                "Web"
            ],
            "description": "This container sets up an Nginx webserver and reverse proxy with php support and a built-in letsencrypt client that automates free SSL server certificate generation and renewal processes. It also contains fail2ban for intrusion prevention.\r\n  \r\n  Before running this container, make sure that the url and subdomains are properly forwarded to this container's host.\r\n  \r\n  - Port 443 on the internet side of the router should be forwarded to this container's port 443.\r\n  - If you need a dynamic dns provider, you can use the free provider duckdns.org where the url will be yoursubdomain.duckdns.org and the subdomains    can be www,ftp,cloud\r\n  - The container detects changes to url and subdomains, revokes existing certs and generates new ones during start. \r\n  - It also detects changes to the DHLEVEL parameter and replaces the dhparams file.\r\n  \r\n  - If you'd like to password protect your sites, you can use htpasswd. Run the following command on your host to generate the htpasswd file docker exec -it letsencrypt htpasswd -c /config/nginx/.htpasswd &lt;username&gt;",
            "env": [
                {
                    "label": "EMAIL",
                    "name": "EMAIL",
                    "set": "-Xms256m -Xmx512m"
                },
                {
                    "label": "URL",
                    "name": "URL",
                    "set": "-Xms256m -Xmx512m"
                },
                {
                    "label": "SUBDOMAINS",
                    "name": "SUBDOMAINS",
                    "set": "www,"
                },
                {
                    "label": "ONLY_SUBDOMAINS",
                    "name": "ONLY_SUBDOMAINS",
                    "set": "false"
                },
                {
                    "label": "DHLEVEL",
                    "name": "DHLEVEL",
                    "set": "2048"
                },
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "label": "VALIDATION",
                    "name": "VALIDATION",
                    "set": "http"
                },
                {
                    "label": "DNSPLUGIN",
                    "name": "DNSPLUGIN",
                    "set": "http"
                }
            ],
            "image": "linuxserver/swag:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/letsencrypt.png",
            "name": "letsencrypt / SWAG",
            "platform": "linux",
            "ports": [
                "80/tcp",
                "443/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Let's Encrypt / SWAG",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/LetsEncrypt",
                    "container": "/config"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "A Free and Open Source Speedtest for HTML5 and more.",
            "image": "linuxserver/librespeed:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/speedtest.png",
            "name": "librespeed",
            "platform": "linux",
            "ports": [
                "80/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "LibreSpeed",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/LibreSpeed",
                    "container": "/config"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Lidarr",
            "name": "Lidarr",
            "description": "Lidarr is a music collection manager for Usenet and BitTorrent users.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://lidarr.audio/' target='_blank' rel='noopener'>Lidarr.audio</a>",
            "categories": [
                "SelfHosted",
                "Mediacenter",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/lidarr.png",
            "repository": {
                "stackfile": "composes-files/lidarr.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "lidarr"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "TZ",
                    "label": "Time zone ",
                    "description": "Exemple: Europe/Paris",
                    "default": "Europe/Paris"
                },
                {
                    "name": "FOLDER_DOWNLOAD",
                    "label": "Your download folder",
                    "description": "Exemple: /data/download"
                },
                {
                    "name": "FOLDER_MUSIC",
                    "label": "Your musics folder",
                    "description": "Exemple: /data/musics"
                }
            ]
        },
        {
            "type": 3,
            "title": "Limesurvey",
            "name": "Limesurvey",
            "description": "Limesurvey is the number one open-source survey software.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://github.com/LimeSurvey/LimeSurvey' target='_blank' rel='noopener'>Github.com</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/limesurvey.png",
            "repository": {
                "stackfile": "composes-files/limesurvey.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "limesurvey"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "DB_USER",
                    "label": "Database user ",
                    "description": "No spaces or points",
                    "default": "limesurvey"
                },
                {
                    "name": "DB_PASSWORD",
                    "label": "Database user password"
                },
                {
                    "name": "DB_ROOT_ASSWORD",
                    "label": "Database root password"
                },
                {
                    "name": "ADMIN_PASSWORD",
                    "label": "Admin password"
                }
            ]
        },
        {
            "type": 2,
            "title": "LiveSwitch",
            "description": "A basic LiveSwitch stack with gateway, caching, database and media server",
            "categories": [
                "media"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/liveswitch.png",
            "repository": {
                "url": "https://github.com/portainer/templates",
                "stackfile": "stacks/liveswitch/docker-stack.yml"
            },
            "env": [
                {
                    "name": "POSTGRES_PASSWORD",
                    "label": "Postgres password"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/portainer/templates/master/templates-2.0.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "name": "logzio-logs-collector",
            "title": "Logzio Logs Collector",
            "description": "Docker container that uses Filebeat to collect logs from other Docker containers and forward those logs to your Logz.io account.",
            "logo": "https://mediadepot.github.io/templates/img/logzio-icon.png",
            "image": "logzio/docker-collector-logs",
            "categories": [
                "Tools:"
            ],
            "ports": [],
            "privileged": true,
            "volumes": [
                {
                    "container": "/var/run/docker.sock",
                    "bind": "/var/run/docker.sock",
                    "readonly": true
                },
                {
                    "container": "/var/lib/docker/containers",
                    "bind": "/var/lib/docker/containers"
                }
            ],
            "env": [
                {
                    "name": "LOGZIO_TOKEN",
                    "label": "LOGZIO_TOKEN",
                    "default": "REPLACE-LOGZIO-TOKEN-HERE"
                },
                {
                    "name": "LOGZIO_URL",
                    "label": "LOGZIO_URL",
                    "default": "listener.logz.io:5015"
                }
            ],
            "labels": [],
            "note": "<a href='https://raw.githubusercontent.com/mediadepot/templates/master/portainer.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "name": "logzio-metrics-collector",
            "title": "Logzio Metrics Collector",
            "description": "Docker Metrics Collector is a container that runs Metricbeat with the modules you enable at runtime.",
            "logo": "https://mediadepot.github.io/templates/img/logzio-icon.png",
            "image": "logzio/docker-collector-metrics",
            "categories": [
                "Tools:"
            ],
            "ports": [],
            "privileged": true,
            "volumes": [
                {
                    "container": "/var/run/docker.sock",
                    "bind": "/var/run/docker.sock",
                    "readonly": true
                },
                {
                    "container": "/hostfs/sys/fs/cgroup",
                    "bind": "/sys/fs/cgroup",
                    "readonly": true
                },
                {
                    "container": "/hostfs/proc",
                    "bind": "/proc",
                    "readonly": true
                },
                {
                    "container": "/hostfs",
                    "bind": "/",
                    "readonly": true
                }
            ],
            "env": [
                {
                    "name": "LOGZIO_TOKEN",
                    "label": "LOGZIO_TOKEN",
                    "default": "REPLACE-LOGZIO-TOKEN-HERE"
                },
                {
                    "name": "LOGZIO_MODULES",
                    "label": "LOGZIO_MODULES",
                    "default": "system,docker"
                }
            ],
            "labels": [],
            "note": "<a href='https://raw.githubusercontent.com/mediadepot/templates/master/portainer.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Cloud",
                "Web",
                "Management",
                "Photos"
            ],
            "description": "Lychee is a free photo-management tool, which runs on your server or web-space. Installing is a matter of seconds. Upload, manage and share photos like from a native application. Lychee comes with everything you need and all your photos are stored securely.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/lychee:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/lychee-icon.png",
            "name": "lychee",
            "platform": "linux",
            "ports": [
                "80/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Lychee",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Lychee",
                    "container": "/config"
                },
                {
                    "bind": "/portainer/Pictures",
                    "container": "/pictures"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "title": "Magento 2",
            "description": "Open-source e-commerce platform",
            "categories": [
                "CMS"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/magento.png",
            "image": "alankent/gsd:latest",
            "ports": [
                "80/tcp",
                "3000/tcp",
                "3001/tcp"
            ],
            "volumes": [
                {
                    "container": "/var/www/html/"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Web",
                "Tools",
                "Productivity",
                "Other"
            ],
            "description": "MagicMirror\u00b2 is an open source modular smart mirror platform. With a growing list of installable modules, the MagicMirror\u00b2 allows you to convert your hallway or bathroom mirror into your personal assistant.",
            "env": [
                {
                    "default": "Europe/London",
                    "description": "Specify the Timezone",
                    "label": "Timezone",
                    "name": "TZ"
                }
            ],
            "image": "bastilimbach/docker-magicmirror:latest",
            "logo": "https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/images/magicmirror2.png",
            "name": "magicmirror2",
            "platform": "linux",
            "ports": [
                "80:8080/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "MagicMirror\u00b2",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/MagicMirror2/config",
                    "container": "/opt/magic_mirror/config"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/MagicMirror2/modules",
                    "container": "/opt/magic_mirror/modules"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/MagicMirror2/css/custom.css",
                    "container": "/opt/magic_mirror/css/custom.css"
                },
                {
                    "bind": "/etc/localtime",
                    "container": "/etc/localtime:ro"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Manubes Edge Node",
            "description": "High-performance cloud platform for industrial production management. Manubes is a no-code solution that is used to structure, monitor and control production data, systems and processes in the cloud.",
            "categories": [
                "edge"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/inray-manubes.png",
            "repository": {
                "url": "https://github.com/portainer/templates",
                "stackfile": "edge/inray-manubes-edge-node/docker-compose.yml"
            },
            "env": [
                {
                    "name": "MANUBES_SECRET",
                    "label": "manubes secret"
                },
                {
                    "name": "ACCEPT_EULA",
                    "label": "Accept EULA",
                    "select": [
                        {
                            "text": "Yes, I accept",
                            "value": "true",
                            "default": true
                        }
                    ]
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/portainer/templates/master/templates-2.0.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "MariaDB",
            "name": "MariaDB",
            "description": "Mariadb is one of the most popular database servers. Made by the original developers of MySQL.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://mariadb.org/' target='_blank' rel='noopener'>mariadb.org</a>",
            "categories": [
                "SelfHosted",
                "Database",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/mariadb.png",
            "repository": {
                "stackfile": "composes-files/mariadb.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "mariadb"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "TZ",
                    "label": "Time zone ",
                    "description": "Exemple: Europe/Paris",
                    "default": "Europe/Paris"
                },
                {
                    "name": "DB_USER",
                    "label": "Database user ",
                    "description": "No spaces or points",
                    "default": "chevereto"
                },
                {
                    "name": "DB_PASSWORD",
                    "label": "Database user password"
                },
                {
                    "name": "DB_ROOT",
                    "label": "Database root password"
                },
                {
                    "name": "DB_NAME",
                    "label": "Database name"
                }
            ]
        },
        {
            "type": 3,
            "title": "Matomo",
            "name": "Matomo",
            "description": "Google Analitycs alternative !",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://fr.matomo.org' target='_blank' rel='noopener'>Matomo.org</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/matomo.png",
            "repository": {
                "stackfile": "composes-files/matomo.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "matomo"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "DB_USER",
                    "label": "Database user ",
                    "description": "No spaces or points",
                    "default": "matomo"
                },
                {
                    "name": "DB_PASSWORD",
                    "label": "Database user password"
                }
            ]
        },
        {
            "type": 1,
            "title": "Mautic",
            "description": "Open-source marketing automation platform",
            "categories": [
                "marketing"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mautic.png",
            "image": "mautic/mautic:latest",
            "env": [
                {
                    "name": "MAUTIC_DB_HOST",
                    "label": "MySQL database host",
                    "type": "container"
                },
                {
                    "name": "MAUTIC_DB_PASSWORD",
                    "label": "Database password"
                }
            ],
            "ports": [
                "80/tcp"
            ],
            "volumes": [
                {
                    "container": "/var/www/html"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "name": "mayan",
            "title": "Mayan EDMS",
            "description": "Mayan EDMS is an electronic vault for your documents.",
            "logo": "https://mediadepot.github.io/templates/img/mayan-logo.png",
            "categories": [
                "Documents:",
                "Tools:"
            ],
            "repository": {
                "url": "https://github.com/mediadepot/templates",
                "stackfile": "stacks/mayan/docker-compose.yml"
            },
            "note": "<a href='https://raw.githubusercontent.com/mediadepot/templates/master/portainer.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Other"
            ],
            "description": "McMyAdmin 2 is the leading web control panel and administration console for Minecraft servers.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/mcmyadmin2:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/mcmyadmin-icon.png",
            "name": "mcmyadmin2",
            "platform": "linux",
            "ports": [
                "8080:8080/tcp",
                "25565:25565/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "McMyAdmin 2",
            "type": 1,
            "volumes": [
                {
                    "container": "/minecraft"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Other",
                "Downloaders"
            ],
            "description": "Web GUI for youtube-dl with playlist support. Allows you to download videos from YouTube and dozens of other sites (https://ytdl-org.github.io/youtube-dl/supportedsites.html).",
            "image": "alexta69/metube:latest",
            "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/ytdlm.png",
            "name": "metube-youtubedl",
            "platform": "linux",
            "ports": [
                "8081:8081/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "MeTube (YouTubeDL)",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/MeTube/Downloads",
                    "container": "/downloads"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Tools",
                "Media",
                "Other"
            ],
            "description": "Refer to https://github.com/OliverCullimore/media-grabber-worker for documentation.",
            "env": [
                {
                    "default": "redis",
                    "label": "REDIS_HOST",
                    "name": "REDIS_HOST"
                },
                {
                    "default": "6379",
                    "label": "REDIS_PORT",
                    "name": "REDIS_PORT"
                },
                {
                    "default": "1",
                    "label": "REDIS_DATABASE",
                    "name": "REDIS_DATABASE"
                },
                {
                    "label": "REDIS_PASSWORD",
                    "name": "REDIS_PASSWORD"
                },
                {
                    "default": "best",
                    "label": "YTDL_FORMAT",
                    "name": "YTDL_FORMAT"
                },
                {
                    "default": "%(title)s-%(id)s.%(ext)s",
                    "label": "YTDL_OUTPUT_TEMPLATE",
                    "name": "YTDL_OUTPUT_TEMPLATE"
                },
                {
                    "default": "socks5h://proxy:1080",
                    "label": "YTDL_PROXY",
                    "name": "YTDL_PROXY"
                },
                {
                    "default": true,
                    "label": "YTDL_WRITEINFOJSON",
                    "name": "YTDL_WRITEINFOJSON",
                    "select": [
                        {
                            "text": "Enabled",
                            "value": true,
                            "default": true
                        },
                        {
                            "text": "Disabled",
                            "value": false
                        }
                    ]
                },
                {
                    "default": false,
                    "label": "YTDL_VERBOSE",
                    "name": "YTDL_VERBOSE",
                    "select": [
                        {
                            "text": "Disabled",
                            "value": false,
                            "default": true
                        },
                        {
                            "text": "Enabled",
                            "value": true
                        }
                    ]
                },
                {
                    "default": "us-sfo.prod.surfshark.com",
                    "label": "PROXY_SERVER",
                    "name": "PROXY_SERVER"
                },
                {
                    "default": "",
                    "label": "PROXY_SERVER_PORT",
                    "name": "PROXY_SERVER_PORT"
                },
                {
                    "default": "",
                    "label": "PROXY_SERVER_PASSWORD",
                    "name": "PROXY_SERVER_PASSWORD"
                },
                {
                    "default": "1080",
                    "label": "PROXY_PORT",
                    "name": "PROXY_PORT"
                },
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/media-grabber-worker-proxy.yml",
                "url": "https://github.com/OliverCullimore/portainer-templates"
            },
            "title": "Media Grabber Worker with Proxy",
            "name": "Media Grabber Worker with Proxy",
            "type": 3,
            "note": "<a href='https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Tools",
                "Media",
                "Other"
            ],
            "description": "Refer to https://github.com/OliverCullimore/media-grabber-worker for documentation.",
            "env": [
                {
                    "default": "redis",
                    "label": "REDIS_HOST",
                    "name": "REDIS_HOST"
                },
                {
                    "default": "6379",
                    "label": "REDIS_PORT",
                    "name": "REDIS_PORT"
                },
                {
                    "default": "1",
                    "label": "REDIS_DATABASE",
                    "name": "REDIS_DATABASE"
                },
                {
                    "label": "REDIS_PASSWORD",
                    "name": "REDIS_PASSWORD"
                },
                {
                    "default": "best",
                    "label": "YTDL_FORMAT",
                    "name": "YTDL_FORMAT"
                },
                {
                    "default": "",
                    "label": "YTDL_PROXY",
                    "name": "YTDL_PROXY"
                },
                {
                    "default": true,
                    "label": "YTDL_WRITEINFOJSON",
                    "name": "YTDL_WRITEINFOJSON",
                    "select": [
                        {
                            "text": "Enabled",
                            "value": true,
                            "default": true
                        },
                        {
                            "text": "Disabled",
                            "value": false
                        }
                    ]
                },
                {
                    "default": false,
                    "label": "YTDL_VERBOSE",
                    "name": "YTDL_VERBOSE",
                    "select": [
                        {
                            "text": "Disabled",
                            "value": false,
                            "default": true
                        },
                        {
                            "text": "Enabled",
                            "value": true
                        }
                    ]
                },
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/media-grabber-worker-redis.yml",
                "url": "https://github.com/OliverCullimore/portainer-templates"
            },
            "title": "Media Grabber Worker with Redis",
            "name": "Media Grabber Worker with Redis",
            "type": 3,
            "note": "<a href='https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Downloaders",
                "Video"
            ],
            "description": "Medusa, automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/medusa:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/medusa-icon.png",
            "name": "medusa",
            "platform": "linux",
            "ports": [
                "8081:8081/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Medusa",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Medusa",
                    "container": "/config"
                },
                {
                    "bind": "/portainer/TV",
                    "container": "/tv"
                },
                {
                    "bind": "/portainer/Downloads",
                    "container": "/downloads"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 2,
            "title": "Microsoft OMS Agent",
            "description": "Microsoft Operations Management Suite Linux agent.",
            "categories": [
                "OPS"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
            "repository": {
                "url": "https://github.com/mikestraney/portainer-templates",
                "stackfile": "stacks/microsoft-oms/docker-stack.yml"
            },
            "env": [
                {
                    "name": "AZURE_WORKSPACE_ID",
                    "label": "Workspace ID",
                    "description": "Azure Workspace ID"
                },
                {
                    "name": "AZURE_PRIMARY_KEY",
                    "label": "Primary key",
                    "description": "Azure primary key"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Minecraft Java server",
            "name": "Minecraft Java server",
            "description": "Minecraft server for Java edition.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://github.com/itzg/docker-minecraft-server' target='_blank' rel='noopener'>Github.com</a>",
            "categories": [
                "SelfHosted",
                "Game",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/minecraft.png",
            "repository": {
                "stackfile": "composes-files/minecraft-java-server.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "minecraft-server"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "TYPE",
                    "label": "Type of server ",
                    "description": "VANILLA/FORGE/FABRIC/QUILT/SPIGOT/etc...",
                    "default": "VANILLA"
                },
                {
                    "name": "VERSION",
                    "label": "Version of server ",
                    "description": "LATEST/SNAPSHOT/1.7.8/x.x.x",
                    "default": "LATEST"
                },
                {
                    "name": "PORT",
                    "label": "Port of server ",
                    "description": "Default: 25565",
                    "default": "25565"
                },
                {
                    "name": "MOTD",
                    "label": "MOTD ",
                    "description": "Description",
                    "default": "Minecraft server powered by \u00a7l\u00a7cPAPAMICA\u00a7r"
                },
                {
                    "name": "MODE",
                    "label": "Game mode ",
                    "description": "creative/survival/adventure/spectator",
                    "default": "survival"
                },
                {
                    "name": "DIFFICULTY",
                    "label": "Difficulty ",
                    "description": "peaceful/easy/normal/hard",
                    "default": "normal"
                },
                {
                    "name": "OPS",
                    "label": "Admin users ",
                    "description": "OP",
                    "default": "PAPAMICA"
                },
                {
                    "name": "MAX_PLAYERS",
                    "label": "Max players ",
                    "description": "Number",
                    "default": "20"
                },
                {
                    "name": "ALLOW_NETHER",
                    "label": "Allow Nether ",
                    "description": "True/False",
                    "default": "True"
                },
                {
                    "name": "ENABLE_COMMAND_BLOCK",
                    "label": "Enable command blok ",
                    "description": "True/False",
                    "default": "True"
                },
                {
                    "name": "HARDCORE",
                    "label": "Enable hardcore ",
                    "description": "True/False",
                    "default": "False"
                },
                {
                    "name": "PVP",
                    "label": "Enable PVP ",
                    "description": "True/False",
                    "default": "True"
                },
                {
                    "name": "ONLINE_MODE",
                    "label": "Enable Online mode ",
                    "description": "True/False",
                    "default": "True"
                },
                {
                    "name": "ENABLE_AUTOPAUSE",
                    "label": "Enable autopause ",
                    "description": "True/False",
                    "default": "True"
                }
            ]
        },
        {
            "categories": [
                "Other"
            ],
            "description": "Server version of minetest, a free, open source alternative to minecraft.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/minetest:latest",
            "logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/minetest-icon.png",
            "name": "minetest",
            "platform": "linux",
            "ports": [
                "30000:30000/udp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Minetest",
            "type": 1,
            "volumes": [
                {
                    "container": "/config/.minetest"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Tools",
                "Productivity",
                "Web",
                "Other"
            ],
            "description": "Miniflux.",
            "env": [
                {
                    "default": "8080",
                    "label": "Miniflux Port",
                    "name": "MINIFLUX_PORT"
                },
                {
                    "default": "admin",
                    "label": "Miniflux Username",
                    "name": "MINIFLUX_USERNAME"
                },
                {
                    "label": "Miniflux Password",
                    "name": "MINIFLUX_PASSWORD"
                },
                {
                    "label": "Postgres Password",
                    "name": "POSTGRES_PASSWORD"
                }
            ],
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/miniflux.yml",
                "url": "https://github.com/OliverCullimore/portainer-templates"
            },
            "title": "Miniflux",
            "name": "miniflux",
            "type": 3,
            "note": "<a href='https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "title": "Minio",
            "description": "A distributed object storage server built for cloud applications and devops",
            "categories": [
                "storage"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/minio.png",
            "image": "minio/minio:latest",
            "ports": [
                "9000/tcp"
            ],
            "env": [
                {
                    "name": "MINIO_ACCESS_KEY",
                    "label": "Minio access key"
                },
                {
                    "name": "MINIO_SECRET_KEY",
                    "label": "Minio secret key"
                }
            ],
            "volumes": [
                {
                    "container": "/data"
                },
                {
                    "container": "/root/.minio"
                }
            ],
            "command": "server /data",
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Video",
                "Other",
                "Tools"
            ],
            "description": "Minisatip is a multi-threaded satip server version 1.2 that runs under Linux and it was tested with DVB-S, DVB-S2, DVB-T, DVB-T2, DVB-C, DVB-C2, ATSC and ISDB-T cards.\n\n  The application is designed to stream the requested data to multiple clients (even with one dvb card) at the same time while opening different pids.\n  ",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/minisatip:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/minisatip-icon.png",
            "name": "minisatip",
            "platform": "linux",
            "ports": [
                "8875:8875/tcp",
                "554:554/tcp",
                "1900:1900/udp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Minisatip",
            "type": 1,
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "title": "Mongo",
            "description": "Open-source document-oriented database",
            "categories": [
                "database"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mongo.png",
            "image": "mongo:latest",
            "ports": [
                "27017/tcp"
            ],
            "volumes": [
                {
                    "container": "/data/db"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "name": "syncserver",
            "title": "Mozilla Syncserver",
            "description": "Run-Your-Own Firefox Sync Server",
            "logo": "https://mediadepot.github.io/templates/img/firefox-logo.png",
            "image": "mozilla/syncserver:latest",
            "categories": [
                "Tools:"
            ],
            "ports": [
                "5000/tcp"
            ],
            "volumes": [
                {
                    "container": "/data",
                    "bind": "/opt/mediadepot/apps/syncserver"
                }
            ],
            "env": [
                {
                    "name": "SYNCSERVER_PUBLIC_URL",
                    "label": "SYNCSERVER_PUBLIC_URL",
                    "default": "https://syncserver.depot.lan"
                },
                {
                    "name": "SYNCSERVER_SECRET_FILE",
                    "label": "SYNCSERVER_SECRET_FILE",
                    "default": "/data/secret_key"
                },
                {
                    "name": "SYNCSERVER_SQLURI",
                    "label": "SYNCSERVER_SQLURI",
                    "default": "sqlite:////data/syncserver.db"
                },
                {
                    "name": "SYNCSERVER_BATCH_UPLOAD_ENABLED",
                    "label": "SYNCSERVER_BATCH_UPLOAD_ENABLED",
                    "default": "true"
                },
                {
                    "name": "SYNCSERVER_FORCE_WSGI_ENVIRON",
                    "label": "SYNCSERVER_FORCE_WSGI_ENVIRON",
                    "default": "false"
                },
                {
                    "name": "PORT",
                    "label": "PORT",
                    "default": "5000"
                }
            ],
            "labels": [
                {
                    "name": "traefik.enable",
                    "value": "true"
                },
                {
                    "name": "traefik.http.services.syncservere.loadbalancer.server.port",
                    "value": "5000"
                },
                {
                    "name": "traefik.http.routers.syncserver.entrypoints",
                    "value": "websecure"
                },
                {
                    "name": "traefik.http.routers.syncserver.tls.certresolver",
                    "value": "mydnschallenge"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mediadepot/templates/master/portainer.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Other",
                "Music"
            ],
            "description": "Mstream is a personal music streaming server. You can use mStream to stream your music from your home computer to any device, anywhere. There are mobile apps available for both Android and iPhone..",
            "image": "linuxserver/mstream:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/mstream.png",
            "name": "mstream",
            "platform": "linux",
            "ports": [
                "3000:3000/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Mstream",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Mstream",
                    "container": "/config"
                },
                {
                    "bind": "/portainer/Downloads",
                    "container": "/music"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Mumble Bot",
            "name": "Mumble Bot",
            "description": "Bot for Mumble server",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://github.com/matthieugrieger/mumbledj' target='_blank' rel='noopener'>Github.com</a></br>You need to create a conf file \"mumbledj.yaml\"",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/mumblebot.png",
            "repository": {
                "stackfile": "composes-files/mumble-bot.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "mumble-bot"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network",
                    "description": "Example: proxy"
                }
            ]
        },
        {
            "type": 3,
            "title": "Mumble Web",
            "name": "Mumble Web",
            "description": "Web client for Mumble",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://github.com/Rantanen/mumble-web' target='_blank' rel='noopener'>Github.com</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/mumble.png",
            "repository": {
                "stackfile": "composes-files/mumble-web.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "mumble-web"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "MUMBLE_SERVER",
                    "label": "Your mumble server"
                }
            ]
        },
        {
            "type": 3,
            "title": "Murmur",
            "name": "Murmur",
            "description": "Vocal server (Mumble)",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://www.mumble.com/' target='_blank' rel='noopener'>Mumble.com</a></br>Port to open:64738",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/mumble.png",
            "repository": {
                "stackfile": "composes-files/murmur.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "mumble-server"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                }
            ]
        },
        {
            "categories": [
                "Music",
                "Other",
                "Tools"
            ],
            "description": " MusicBrainz is an open music encyclopedia that collects music metadata and makes it available to the public.",
            "env": [
                {
                    "label": "BRAINZCODE",
                    "name": "BRAINZCODE",
                    "set": ""
                },
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/musicbrainz:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/musicbrainz-icon.png",
            "name": "musicbrainz",
            "platform": "linux",
            "ports": [
                "5000:5000/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "MusicBrainz",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/MusicBrainz",
                    "container": "/config"
                },
                {
                    "bind": "/portainer/Files/AppData/MusicBrainz",
                    "container": "/data"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Web",
                "Proxy",
                "Other",
                "Tools"
            ],
            "description": "A lightweight portal to view, manage your HTPC apps without having to run anything more than a PHP enabled webserver. With Muximux you don't need to keep multiple tabs open, or bookmark the URL to all of your apps.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/muximux:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/muximux-icon.png",
            "name": "muximux",
            "platform": "linux",
            "ports": [
                "80/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Muximux",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Muximux",
                    "container": "/config"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "title": "MySQL",
            "description": "The most popular open-source database",
            "categories": [
                "database"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mysql.png",
            "image": "mysql:latest",
            "env": [
                {
                    "name": "MYSQL_ROOT_PASSWORD",
                    "label": "Root password"
                }
            ],
            "ports": [
                "3306/tcp"
            ],
            "volumes": [
                {
                    "container": "/var/lib/mysql"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Downloaders",
                "Books"
            ],
            "description": "An automated Comic Book downloader (cbr/cbz) for use with SABnzbd, NZBGet and torrents.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/mylar:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/mylar-icon.png",
            "name": "mylar",
            "platform": "linux",
            "ports": [
                "8090:8090/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Mylar",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Mylar",
                    "container": "/config"
                },
                {
                    "bind": "/portainer/Downloads",
                    "container": "/downloads"
                },
                {
                    "bind": "/portainer/Comics",
                    "container": "/comics"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Downloaders",
                "Other",
                "Tools"
            ],
            "description": "NZBHydra is a meta search for NZB indexers and the \"spiritual successor\" to NZBmegasearcH. It provides easy access to a number of raw and newznab based indexers.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/nzbhydra2:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/hydra-icon.png",
            "name": "nzbhydra2",
            "platform": "linux",
            "ports": [
                "5076:5076/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "NZBHydra 2",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Nzbhydra2",
                    "container": "/config"
                },
                {
                    "bind": "/portainer/Downloads",
                    "container": "/downloads"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "name": "netbootxyz",
            "title": "Netboot.xyz",
            "description": "Netbootxyz is a way to PXE boot various operating system installers or utilities from one place within the BIOS without the need of having to go retrieve the media to run the tool",
            "logo": "https://mediadepot.github.io/templates/img/netbootxyz.jpg",
            "image": "linuxserver/netbootxyz:latest",
            "categories": [
                "Downloaders:",
                "Network:Other",
                "Tools:"
            ],
            "ports": [
                "3000/tcp",
                "69/udp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/opt/mediadepot/apps/netbootxyz"
                },
                {
                    "container": "/assets",
                    "bind": "/media/storage/software/netbootxyz"
                },
                {
                    "container": "/etc/localtime",
                    "bind": "/etc/localtime",
                    "readonly": true
                }
            ],
            "env": [
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "15000",
                    "preset": true
                },
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "15000",
                    "preset": true
                }
            ],
            "labels": [
                {
                    "name": "traefik.enable",
                    "value": "true"
                },
                {
                    "name": "traefik.http.services.netbootxyz.loadbalancer.server.port",
                    "value": "3000"
                },
                {
                    "name": "traefik.http.routers.netbootxyz.entrypoints",
                    "value": "websecure"
                },
                {
                    "name": "traefik.http.routers.netbootxyz.tls.certresolver",
                    "value": "mydnschallenge"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mediadepot/templates/master/portainer.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "NextCloud",
            "name": "NextCloud",
            "description": "A personnal cloud, alternative to Google Drive, etc...",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://nextcloud.com/' target='_blank' rel='noopener'>NextCloud.com</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/nextcloud.png",
            "repository": {
                "stackfile": "composes-files/nextcloud.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "nexcloud"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service link",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "DB_USER",
                    "label": "Database user ",
                    "description": "No spaces or points",
                    "default": "nexcloud"
                },
                {
                    "name": "DB_PASSWORD",
                    "label": "Password for database user"
                },
                {
                    "name": "DB_ROOT",
                    "label": "Password for database root"
                },
                {
                    "name": "DATA",
                    "label": "Folder of your data"
                }
            ]
        },
        {
            "type": 2,
            "title": "NextcloudStack",
            "description": "Nextcloud setup with a MySQL database",
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>\nDeploys a Nextcloud instance connected to a MySQL database.",
            "categories": [
                "Cloud"
            ],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/nextcloud-icon.png",
            "repository": {
                "url": "https://github.com/mikestraney/portainer-templates",
                "stackfile": "stacks/nextcloud/docker-stack.yml"
            },
            "env": [
                {
                    "label": "MYSQL_PASSWORD",
                    "name": "mypassword",
                    "description": "password for sql"
                },
                {
                    "label": "MYSQL_ROOT_PASSWORD",
                    "name": "myrpassword",
                    "description": "root password for sql"
                }
            ]
        },
        {
            "type": 1,
            "title": "Nginx",
            "description": "High performance web server",
            "categories": [
                "webserver"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/nginx.png",
            "image": "nginx:latest",
            "ports": [
                "80/tcp",
                "443/tcp"
            ],
            "volumes": [
                {
                    "container": "/etc/nginx"
                },
                {
                    "container": "/usr/share/nginx/html"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Web",
                "Proxy"
            ],
            "description": "Nginx is a web server with a strong focus on high concurrency, performance and low memory usage. It can also act as a reverse proxy server for HTTP, HTTPS, SMTP, POP3, and IMAP protocols, as well as a load balancer and an HTTP cache.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "nginx:latest",
            "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/nginx-icon.png",
            "name": "nginx-offical",
            "platform": "linux",
            "ports": [
                "80/tcp",
                "443/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Nginx Official",
            "type": 1,
            "note": "<a href='https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Proxy",
                "Tools"
            ],
            "description": "Nginx Proxy Manager enables you to easily forward to your websites running at home or otherwise, including free SSL, without having to know too much about Nginx or Letsencrypt.",
            "image": "jc21/nginx-proxy-manager",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/proxy_mgr.png",
            "name": "nginx-proxy-manager",
            "platform": "linux",
            "env": [
                {
                    "label": "DB_SQLITE_FILE",
                    "name": "DB_SQLITE_FILE",
                    "default": "/data/database.sqlite"
                }
            ],
            "ports": [
                "80:8080/tcp",
                "81:8181/tcp",
                "443:4443/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Nginx Proxy Manager",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Nginx-Proxy/data",
                    "container": "/data"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/Nginx-Proxy/letsencrypt",
                    "container": "/etc/letsencrypt"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "title": "NodeJS",
            "description": "JavaScript-based platform for server-side and networking applications",
            "categories": [
                "development"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/node.png",
            "image": "node:latest",
            "interactive": true,
            "command": "/bin/bash",
            "note": "<a href='https://raw.githubusercontent.com/portainer/templates/master/templates-2.0.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Nzbget",
            "name": "Nzbget",
            "description": "Nzbget is a usenet downloader, written in C++ and designed with performance in mind to achieve maximum download speed by using very little system resources.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='http://nzbget.net/' target='_blank' rel='noopener'>Nzbget.net</a>",
            "categories": [
                "SelfHosted",
                "Mediacenter",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/nzbget.png",
            "repository": {
                "stackfile": "composes-files/nzbget.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "nzbget"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "TZ",
                    "label": "Time zone ",
                    "description": "Exemple: Europe/Paris",
                    "default": "Europe/Paris"
                },
                {
                    "name": "NZBGET_USER",
                    "label": "User for application ",
                    "description": "Exemple: PAPAMICA",
                    "default": "PAPAMICA"
                },
                {
                    "name": "NZBGET_PASS",
                    "label": "Password for application"
                },
                {
                    "name": "FOLDER_DOWNLOAD",
                    "label": "Your download folder",
                    "description": "Exemple: /data/download"
                }
            ]
        },
        {
            "type": 1,
            "title": "OPC Router",
            "description": "No-code middleware for industrial applications. The OPC Router connects PLCs, PCS, SCADA, MES, SQL databases and servers, label printers, e-mail servers and erp-systems via OPC UA, MQTT, REST, CSV and many others without any programming effort",
            "note": "<a href='https://raw.githubusercontent.com/portainer/templates/master/templates-2.0.json' target='_blank'>Source</a>\nMore information about the <a href=\"https://www.opc-router.com/terms-of-use-and-eula/?utm_source=DockerHub_runtime&utm_medium=click&utm_campaign=TermsOfUseAndEula\" target=\"_blank\">EULA</a>.",
            "categories": [
                "edge"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/opc-router.png",
            "image": "opcrouter/runtime:latest",
            "ports": [
                "49429/tcp",
                "8080/tcp",
                "8081/tcp"
            ],
            "env": [
                {
                    "name": "INITIAL_USERNAME",
                    "label": "Initial Admin User user"
                },
                {
                    "name": "INITIAL_PASSWORD",
                    "label": "Inital Admin User Password"
                },
                {
                    "name": "OR_I_ACCEPT_EULA",
                    "label": "Accept EULA",
                    "select": [
                        {
                            "text": "Yes, I accept",
                            "value": "true",
                            "default": true
                        }
                    ]
                }
            ],
            "volumes": [
                {
                    "container": "/data/database"
                },
                {
                    "container": "/inray"
                },
                {
                    "container": "/var/log/opcrouter"
                }
            ]
        },
        {
            "categories": [
                "Other"
            ],
            "description": "OScam is a softcam, software to be used to decrypt digital television channels on a settopbox (receiver), as an alternative for a conditional access module\n  (CAM). OScam is, compared with other softcams (CCcam, mgcamd, etc.), open source. Hence, the name Open Source Conditional Access Module (OScam). OScam is based on the\n  not so well known softcam MpCS. The main features of OSCam are next to its softcam capabilities, that it is able to function as a cardserver.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/oscam:latest",
            "logo": "http://i.imgur.com/8LadrLg.png",
            "name": "oscam",
            "platform": "linux",
            "ports": [
                "8888:8888/tcp",
                "10000:10000/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "OScam",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/OScam",
                    "container": "/config"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "title": "Odoo",
            "description": "Open-source business apps",
            "categories": [
                "project-management"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/odoo.png",
            "image": "odoo:latest",
            "env": [
                {
                    "name": "HOST",
                    "label": "PostgreSQL database host",
                    "type": "container"
                },
                {
                    "name": "USER",
                    "label": "Database user"
                },
                {
                    "name": "PASSWORD",
                    "label": "Database password"
                }
            ],
            "ports": [
                "8069/tcp"
            ],
            "volumes": [
                {
                    "container": "/var/lib/odoo"
                },
                {
                    "container": "/mnt/extra-addons"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "OliveTin",
            "name": "OliveTin",
            "description": "Launch commands from web interface",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://www.olivetin.app/' target='_blank' rel='noopener'>OliveTin.app</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/olivetin.png",
            "repository": {
                "stackfile": "composes-files/olivetin.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "olivetin"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                }
            ]
        },
        {
            "type": 3,
            "title": "Ombi",
            "name": "Ombi",
            "description": "Ombi is a request management and media discovery tool built to work with your existing Plex ecosystem.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://ombi.io/' target='_blank' rel='noopener'>Ombi.io</a>",
            "categories": [
                "SelfHosted",
                "Mediacenter",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/ombi.png",
            "repository": {
                "stackfile": "composes-files/ombi.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "ombi"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "TZ",
                    "label": "Time zone ",
                    "description": "Exemple: Europe/Paris",
                    "default": "Europe/Paris"
                }
            ]
        },
        {
            "type": 3,
            "title": "OpenAMT",
            "description": "OpenAMT Cloud Toolkit",
            "note": "<a href='https://raw.githubusercontent.com/portainer/templates/master/templates-2.0.json' target='_blank'>Source</a>\nMPS password needs to be 8-32 characters including one uppercase, one lowercase letters, one base-10 digit and one special character.",
            "categories": [
                "Cloud"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/intel.png",
            "repository": {
                "url": "https://github.com/portainer/templates",
                "stackfile": "stacks/openamt/docker-compose.yml"
            },
            "env": [
                {
                    "name": "POSTGRES_USER",
                    "label": "Database user"
                },
                {
                    "name": "POSTGRES_PASSWORD",
                    "label": "Database password"
                },
                {
                    "name": "MPS_USER",
                    "label": "MPS user"
                },
                {
                    "name": "MPS_PASSWORD",
                    "label": "MPS password"
                },
                {
                    "name": "MPS_COMMON_NAME",
                    "label": "MPS URL",
                    "description": "Used to connect to the MPS API."
                },
                {
                    "name": "MPS_SECRET",
                    "label": "MPS Secret",
                    "description": "Strong secret key used to log into MPS."
                },
                {
                    "name": "VAULT_SECRET",
                    "label": "Vault secret",
                    "description": "Secret token used to log into Vault (don't include '.' character)."
                }
            ]
        },
        {
            "type": 2,
            "title": "OpenFaaS",
            "name": "func",
            "description": "Serverless functions made simple",
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>\nDeploys the API gateway and sample functions. You can access the UI on port 8080. <b>Warning</b>: the name of the stack must be 'func'.",
            "categories": [
                "serverless"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/openfaas.png",
            "repository": {
                "url": "https://github.com/openfaas/faas",
                "stackfile": "docker-compose.yml"
            }
        },
        {
            "type": 3,
            "title": "OpenSupports",
            "name": "OpenSupports",
            "description": "Ticketing solution",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://www.opensupports.com/' target='_blank' rel='noopener'>OpenSupports.com</a>",
            "categories": [
                "SelfHosted",
                "IT Management",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://avatars.githubusercontent.com/u/26804114?s=280&v=4",
            "repository": {
                "stackfile": "composes-files/opensupports.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "opensupport"
                },
                {
                    "name": "DB_PASSWORD",
                    "label": "Database user password"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "TIME_ZONE",
                    "label": "Time zone ",
                    "description": "Example : Europe/Paris",
                    "default": "Europe/Paris"
                }
            ]
        },
        {
            "categories": [
                "Other"
            ],
            "description": "OpenVPN Access Server is a full featured secure network tunneling VPN software solution that integrates OpenVPN server capabilities, enterprise management capabilities, simplified OpenVPN Connect UI, and OpenVPN Client software packages that accommodate Windows, MAC, Linux, Android, and iOS environments.",
            "env": [
                {
                    "label": "INTERFACE",
                    "name": "INTERFACE",
                    "set": "eth0"
                },
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/openvpn-as:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/openvpn-as-icon.png",
            "name": "openvpn-as",
            "platform": "linux",
            "ports": [
                "943:943/tcp",
                "9443:9443/tcp",
                "1194:1194/udp"
            ],
            "restart_policy": "unless-stopped",
            "title": "OpenVPN Access Server",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/OpenVPN-AS",
                    "container": "/config"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Openspeedtest",
            "name": "Openspeedtest",
            "description": "Speedtest for Home/Office LAN",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://openspeedtest.com/' target='_blank' rel='noopener'>Openspeedtest.com</a>",
            "categories": [
                "SelfHosted",
                "Drackorr"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/openspeedtest.png",
            "repository": {
                "stackfile": "composes-files/openspeedtest.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "Openspeedtest"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.drackorr.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                }
            ]
        },
        {
            "type": 3,
            "title": "Organizr",
            "name": "Organizr",
            "description": "Dashboard for your media server.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://organizr.app/' target='_blank' rel='noopener'>organizr.app</a>",
            "categories": [
                "SelfHosted",
                "Mediacenter",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/organizr.png",
            "repository": {
                "stackfile": "composes-files/organizr.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "organizr"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "TZ",
                    "label": "Time zone ",
                    "description": "Exemple: Europe/Paris",
                    "default": "Europe/Paris"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "Organizr allows you to setup Tabs that will be loaded all in one webpage. You can then work on your server with ease.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "organizrtools/organizr-v2:php-fpm",
            "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/organizr-icon.png",
            "name": "organizr-v2",
            "platform": "linux",
            "ports": [
                "80/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Organizr v2",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Organizr",
                    "container": "/config"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/portainer-2.0/Template/template.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Outline",
            "name": "Outline",
            "description": "A fast, collaborative, knowledge base for your team built using React and Node.js. (Like Notion)",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://www.getoutline.com/' target='_blank' rel='noopener'>GetOutline.com</a></br></br>After first run, comment line <code>188</code> and configure your authentification.",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/outline.webp",
            "repository": {
                "stackfile": "composes-files/outline.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "outline"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "DB_USER",
                    "label": "Database user ",
                    "description": "No spaces or points",
                    "default": "outline"
                },
                {
                    "name": "DB_PASSWORD",
                    "label": "Database user password"
                },
                {
                    "name": "SECRET_KEY",
                    "label": "Outline secret Key",
                    "description": "Use: openssl rand -hex 32"
                },
                {
                    "name": "UTILS_SECRET",
                    "label": "Outline utils secret",
                    "description": "Use: openssl rand -hex 32"
                },
                {
                    "name": "DEFAULT_LANGUAGE",
                    "label": "Default language ",
                    "description": "Example: fr_FR",
                    "default": "fr_FR"
                },
                {
                    "name": "URL_MINIO",
                    "label": "URL for your S2 storage API",
                    "description": "Example: s3.papamica.com"
                },
                {
                    "name": "MINIO_ACCESS_KEY",
                    "label": "Minio access key",
                    "description": "Use: openssl rand -hex 8"
                },
                {
                    "name": "MINIO_SECRET_KEY",
                    "label": "Minio secret key",
                    "description": "Use: openssl rand -hex 32"
                }
            ]
        },
        {
            "type": 3,
            "title": "Overseerr",
            "name": "Overseerr",
            "description": "Overseerr is a request management and media discovery tool built to work with your existing Plex ecosystem.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://overseerr.dev/' target='_blank' rel='noopener'>Overseerr.dev</a>",
            "categories": [
                "SelfHosted",
                "Mediacenter",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/overseerr.svg",
            "repository": {
                "stackfile": "composes-files/overseerr.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "overseerr"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "TZ",
                    "label": "Time zone ",
                    "description": "Exemple: Europe/Paris",
                    "default": "Europe/Paris"
                }
            ]
        },
        {
            "categories": [
                "Cloud",
                "Productivity",
                "Tools",
                "Other",
                "Web"
            ],
            "description": "ownCloud is a self-hosted file sync and share server. It provides access to your data through a web interface, sync clients or WebDAV while providing a platform to view, sync and share across devices easily\u2014all under your control. ownCloud\u2019s open architecture is extensible via a simple but powerful API for applications and plugins and it works with any storage.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "label": "TZ",
                    "name": "TZ"
                },
                {
                    "label": "OWNCLOUD_DOMAIN",
                    "name": "OWNCLOUD_DOMAIN"
                },
                {
                    "label": "DB_PASSWORD",
                    "name": "DB_PASSWORD"
                },
                {
                    "label": "ADMIN_USERNAME",
                    "name": "ADMIN_USERNAME"
                },
                {
                    "label": "ADMIN_PASSWORD",
                    "name": "ADMIN_PASSWORD"
                },
                {
                    "label": "PORT",
                    "name": "PORT"
                }
            ],
            "logo": "https://raw.githubusercontent.com/docker-library/docs/9d36b4ed7cabc35dbd3849272ba2bd7abe482172/owncloud/logo.png",
            "name": "Owncloud",
            "note": "<a href='https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Template/template.json' target='_blank'>Source</a>\nThe database user is owncloud and the database is owncloud.",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/owncloud.yml",
                "url": "https://github.com/Qballjos/portainer_templates"
            },
            "title": "Owncloud",
            "type": 3
        },
        {
            "type": 3,
            "title": "Paperless-ngx",
            "name": "Paperless-ngx",
            "description": "Paperless-ngx is an application that indexes your scanned documents and allows you to easily search for documents and store metadata alongside your documents.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://github.com/paperless-ngx/paperless-ngx' target='_blank' rel='noopener'>Github.com</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/paperless.png",
            "repository": {
                "stackfile": "composes-files/paperless-ngx.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "paperless"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "TZ",
                    "label": "Timezone ",
                    "description": "Example: Europe/Paris",
                    "default": "Europe/Paris"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "Passky is a simple, modern, lightweight, open-source and secure password manager.",
            "image": "rabbitcompany/passky-client:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/passky-icon.png",
            "name": "passky-client",
            "platform": "linux",
            "ports": [
                "8081:80/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Passky Client",
            "type": 1,
            "note": "<a href='https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Template/template.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "Passky is a simple, modern, lightweight, open-source and secure password manager.",
            "env": [
                {
                    "default": "admin",
                    "label": "ADMIN_USERNAME",
                    "name": "ADMIN_USERNAME"
                },
                {
                    "label": "ADMIN_PASSWORD",
                    "name": "ADMIN_PASSWORD"
                }
            ],
            "image": "rabbitcompany/passky-server:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/passky-icon.png",
            "name": "passky-server",
            "note": "<a href='https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Template/template.json' target='_blank'>Source</a>\nDo not forget to perform regular backups, especially before each update.",
            "platform": "linux",
            "ports": [
                "8080:80/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Passky Server",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Passky-Server",
                    "container": "/var/www/html/databases"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "Petio is a third party companion app available to Plex server owners to allow their users to request, review and discover content.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "label": "TZ",
                    "name": "TZ"
                },
                {
                    "label": "PORT",
                    "name": "PORT"
                }
            ],
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/petio-icon.png",
            "name": "Petio",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/petio.yml",
                "url": "https://github.com/Qballjos/portainer_templates"
            },
            "title": "Petio",
            "type": 3,
            "note": "<a href='https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Template/template.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Photos"
            ],
            "description": "A simple, easy way to turn a photo album into a webgallery",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/photoshow:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/photoshow-icon.png",
            "name": "photoshow",
            "platform": "linux",
            "ports": [
                "80/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "PhotoShow",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Pictures",
                    "container": "/Pictures"
                },
                {
                    "bind": "/portainer/Files/AppData/Photoshow/Thumbs",
                    "container": "/Thumbs"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/PhotoShow",
                    "container": "/config"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "A Linux network-level advertisement and Internet tracker blocking application which acts as a DNS sinkhole.",
            "image": "pihole/pihole:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/pihole.png",
            "name": "pihole",
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>\nWhen the installation is complete, navigate to your.ip.goes.here:1010/admin. Follow the article <a href='https://medium.com/@niktrix/getting-rid-of-systemd-resolved-consuming-port-53-605f0234f32f'>here</a> if you run into issues binding to port 53.",
            "platform": "linux",
            "ports": [
                "53:53/tcp",
                "53:53/udp",
                "67:67/udp",
                "1010:80/tcp",
                "4443:443/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Pi-Hole",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/PiHole",
                    "container": "/etc/pihole"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/PiHole/DNS",
                    "container": "/etc/dnsmasq.d"
                }
            ]
        },
        {
            "type": 3,
            "title": "Pigvin Share",
            "name": "Pigvin Share",
            "description": "Pingvin Share is self-hosted file sharing platform and an alternative for WeTransfer.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://github.com/stonith404/pingvin-share' target='_blank' rel='noopener'>Github.com</a>",
            "categories": [
                "SelfHosted",
                "Transfer",
                "Drackorr"
            ],
            "platform": "linux",
            "logo": "https://user-images.githubusercontent.com/58886915/166198400-c2134044-1198-4647-a8b6-da9c4a204c68.svg",
            "repository": {
                "stackfile": "composes-files/pigvin-share.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "pingvin"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                }
            ]
        },
        {
            "categories": [
                "Photos"
            ],
            "description": "Piwigo is photo gallery software for the web, built by an active community of users and developers.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/piwigo:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/piwigo-icon.png",
            "name": "piwigo",
            "platform": "linux",
            "ports": [
                "80/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Piwigo",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/PiWigo",
                    "container": "/config"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "title": "Plesk",
            "description": "WebOps platform and hosting control panel",
            "categories": [
                "CMS"
            ],
            "platform": "linux",
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>\nDefault credentials: admin / changeme",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/plesk.png",
            "image": "plesk/plesk:latest",
            "ports": [
                "21/tcp",
                "80/tcp",
                "443/tcp",
                "8880/tcp",
                "8443/tcp",
                "8447/tcp"
            ]
        },
        {
            "type": 3,
            "title": "Plex",
            "name": "Plex",
            "description": "Media server",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://www.plex.tv' target='_blank' rel='noopener'>Plex.tv</a></br>Check ports to open in compose !",
            "categories": [
                "SelfHosted",
                "Mediacenter",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/plex.png",
            "repository": {
                "stackfile": "composes-files/plex.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "plex"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "LIBRARY",
                    "label": "Your folder with movies and series",
                    "description": "Example: /data/multimedia"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "PLEX_CLAIM",
                    "label": "Plex claim code",
                    "description": "Optionnel"
                },
                {
                    "name": "TZ",
                    "label": "Time zone ",
                    "description": "Exemple: Europe/Paris",
                    "default": "Europe/Paris"
                }
            ]
        },
        {
            "type": 1,
            "name": "plex",
            "title": "Plex Media Server",
            "description": "Plex organizes your video, music, and photo collections and streams them to all of your screens.",
            "logo": "https://mediadepot.github.io/templates/img/plex-icon.png",
            "image": "linuxserver/plex:latest",
            "network": "host",
            "categories": [
                "MediaServer:Video",
                "MediaServer:Music",
                "MediaServer:Photos"
            ],
            "privileged": true,
            "ports": [],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/opt/mediadepot/apps/plex"
                },
                {
                    "container": "/data/tvshows",
                    "bind": "/media/storage/tvshows"
                },
                {
                    "container": "/data/movies",
                    "bind": "/media/storage/movies"
                },
                {
                    "container": "/data/music",
                    "bind": "/media/storage/music"
                },
                {
                    "container": "/transcode"
                }
            ],
            "env": [
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "15000",
                    "preset": true
                },
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "15000",
                    "preset": true
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "America/Los_Angeles"
                },
                {
                    "name": "VERSION",
                    "label": "VERSION",
                    "default": "latest"
                }
            ],
            "labels": [
                {
                    "name": "traefik.enable",
                    "value": "true"
                },
                {
                    "name": "traefik.http.services.plex.loadbalancer.server.port",
                    "value": "32400"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mediadepot/templates/master/portainer.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Downloaders",
                "Other",
                "Video",
                "Tools"
            ],
            "description": "Simple automated way for users to request new content for Plex.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "label": "URL_BASE",
                    "name": "URL_BASE",
                    "set": ""
                }
            ],
            "image": "linuxserver/plexrequests:latest",
            "logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/plexrequests-icon.png",
            "name": "plexrequests",
            "platform": "linux",
            "ports": [
                "3000:3000/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Plex Requests",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/PlexRequests",
                    "container": "/config"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "name": "plextraktsync",
            "title": "PlexTraktSync",
            "description": "A python script that syncs the movies, shows and ratings between trakt and Plex",
            "logo": "https://mediadepot.github.io/templates/img/plex-icon.png",
            "categories": [
                "Documents:",
                "Tools:"
            ],
            "repository": {
                "url": "https://github.com/mediadepot/templates",
                "stackfile": "stacks/plextraktsync/docker-compose.yml"
            },
            "note": "<a href='https://raw.githubusercontent.com/mediadepot/templates/master/portainer.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "title": "Plone",
            "description": "A free and open-source CMS built on top of Zope",
            "categories": [
                "CMS"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/plone.png",
            "image": "plone:latest",
            "ports": [
                "8080/tcp"
            ],
            "volumes": [
                {
                    "container": "/data"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 2,
            "title": "Portainer Agent",
            "description": "Manage all the resources in your Swarm cluster",
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>\nThe agent will be deployed globally inside your cluster and available on port 9001.",
            "categories": [
                "portainer"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/portainer.png",
            "repository": {
                "url": "https://github.com/mikestraney/portainer-templates",
                "stackfile": "stacks/portainer-agent/docker-stack.yml"
            }
        },
        {
            "type": 1,
            "title": "PostgreSQL",
            "description": "The most advanced open-source database",
            "categories": [
                "database"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/postgres.png",
            "image": "postgres:latest",
            "env": [
                {
                    "name": "POSTGRES_USER",
                    "label": "Superuser"
                },
                {
                    "name": "POSTGRES_PASSWORD",
                    "label": "Superuser password"
                }
            ],
            "ports": [
                "5432/tcp"
            ],
            "volumes": [
                {
                    "container": "/var/lib/postgresql/data"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "VPN",
                "Tools",
                "Other",
                "Web"
            ],
            "description": "Pritunl container built on Alpine Linux. Supports IPv6 and running behind a reverse proxy. This container requires an external Mongo DB and should be run via Docker Compose or other orchestration.",
            "env": [
                {
                    "default": "false",
                    "label": "REVERSE_PROXY",
                    "name": "REVERSE_PROXY"
                },
                {
                    "label": "PRITUNL_OPTS",
                    "name": "PRITUNL_OPTS"
                },
                {
                    "default": "mongodb://mongo:27017/pritunl",
                    "label": "MONGODB_URI",
                    "name": "MONGODB_URI"
                },
                {
                    "default": "false",
                    "label": "WIREGUARD",
                    "name": "WIREGUARD"
                }
            ],
            "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/pritunl/Images/pritunl.png",
            "name": "pritunl",
            "note": "<a href='https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/portainer-2.0/Template/template.json' target='_blank'>Source</a>\nDocumentation on this containier can be found here: <a href=https://hub.docker.com/r/goofball222/pritunl>https://hub.docker.com/r/goofball222/pritunl</a>",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/pritunl.yml",
                "url": "https://github.com/SelfhostedPro/selfhosted_templates"
            },
            "title": "Pritunl",
            "type": 3
        },
        {
            "type": 3,
            "title": "Pro Mosquitto with Management Center",
            "description": "Commercial-grade Mosquitto MQTT broker with Management Center",
            "note": "<a href='https://raw.githubusercontent.com/portainer/templates/master/templates-2.0.json' target='_blank'>Source</a>\nThe Mosquitto broker password must be at least 12 characters.",
            "categories": [
                "edge"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/cedalo.png",
            "repository": {
                "url": "https://github.com/portainer/templates",
                "stackfile": "edge/cedalo-mosquitto-mc/docker-compose.yml"
            },
            "env": [
                {
                    "name": "CEDALO_LICENSE_KEY",
                    "label": "License key"
                },
                {
                    "name": "CEDALO_MOSQUITTO_PASSWORD",
                    "label": "Mosquitto password"
                },
                {
                    "name": "CEDALO_MC_USER",
                    "label": "Management Center username",
                    "default": "cedalo"
                },
                {
                    "name": "CEDALO_MC_PASSWORD",
                    "label": "Management Center password"
                }
            ]
        },
        {
            "categories": [
                "Cloud",
                "Productivity",
                "Tools",
                "Other"
            ],
            "description": "ProjectSend is a self-hosted application that lets you upload files and assign them to specific clients that you create yourself! Secure, private and easy. No more depending on external services or e-mail to send those files!\n  ",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/projectsend:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/projectsend-logo.png",
            "name": "projectsend",
            "platform": "linux",
            "ports": [
                "80/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "ProjectSend",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/ProjectSend",
                    "container": "/data"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/ProjectSend",
                    "container": "/config"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Prometheus",
            "name": "Prometheus",
            "description": "From heatmaps to histograms, graphs to geomaps: fast and furious visualizations any way you want.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://prometheus.io/' target='_blank' rel='noopener'>Prometheus.io</a>",
            "categories": [
                "SelfHosted",
                "Monitoring",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/prometheus.png",
            "repository": {
                "stackfile": "composes-files/prometheus_server.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "prometheus"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "PLUGINS",
                    "label": "Plugins to install ",
                    "description": "Example: prometheus-singlestat-panel",
                    "default": "alexanderzobnin-zabbix-app,prometheus-singlestat-panel"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                }
            ]
        },
        {
            "categories": [
                "Email",
                "Productivity",
                "Tools",
                "Other"
            ],
            "description": "This is an unofficial Docker container of the ProtonMail Bridge. Some of the scripts are based on Hendrik Meyer's work.",
            "image": "shenxn/protonmail-bridge:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/protonmail-bridge.png",
            "name": "protonmail-bridge",
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>\nPlease refer to the documentation <a href='https://hub.docker.com/r/shenxn/protonmail-bridge'/>here</a> to set this up.",
            "platform": "linux",
            "ports": [
                "143/tcp",
                "25/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "ProtonMail Bridge",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/ProtonMail-Bridge",
                    "container": "/root"
                }
            ]
        },
        {
            "type": 3,
            "title": "Prowlarr",
            "name": "Prowlarr",
            "description": "Indexer for torrents and usenets.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://github.com/Prowlarr/Prowlarr' target='_blank' rel='noopener'>Gitub.com</a>",
            "categories": [
                "SelfHosted",
                "Mediacenter",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/prowlarr.png",
            "repository": {
                "stackfile": "composes-files/prowlarr.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "prowlarr"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "TZ",
                    "label": "Time zone ",
                    "description": "Exemple: Europe/Paris",
                    "default": "Europe/Paris"
                }
            ]
        },
        {
            "type": 1,
            "name": "pureftp",
            "title": "Pure-FTP Server",
            "description": "Pure-FTPd is a free (BSD), secure, production-quality and standard-conformant FTP server. ",
            "logo": "https://mediadepot.github.io/templates/img/pureftpd-icon.jpg",
            "image": "stilliard/pure-ftpd:hardened",
            "network": "host",
            "categories": [
                "Network:Other",
                "Utilities:"
            ],
            "ports": [
                "21/tcp",
                "30000/tcp",
                "30001/tcp",
                "30002/tcp",
                "30003/tcp",
                "30004/tcp",
                "30005/tcp",
                "30006/tcp",
                "30007/tcp",
                "30008/tcp",
                "30009/tcp"
            ],
            "volumes": [
                {
                    "container": "/etc/pure-ftpd/passwd",
                    "bind": "/opt/mediadepot/apps/pureftp"
                },
                {
                    "container": "/data/tvshows",
                    "bind": "/media/storage/tvshows"
                },
                {
                    "container": "/data/movies",
                    "bind": "/media/storage/movies"
                },
                {
                    "container": "/data/music",
                    "bind": "/media/storage/music"
                },
                {
                    "container": "/data/ebooks",
                    "bind": "/media/storage/ebooks"
                },
                {
                    "container": "/data/photos",
                    "bind": "/media/storage/photos"
                },
                {
                    "container": "/data/documents",
                    "bind": "/media/storage/documents"
                },
                {
                    "container": "/data/downloads",
                    "bind": "/media/storage/downloads"
                },
                {
                    "container": "/data/software",
                    "bind": "/media/storage/software"
                },
                {
                    "container": "/data/blackhole",
                    "bind": "/media/temp/blackhole"
                },
                {
                    "container": "/data/processing",
                    "bind": "/media/temp/processing"
                }
            ],
            "env": [
                {
                    "name": "FTP_USER_NAME",
                    "label": "FTP_USER_NAME",
                    "default": "depot",
                    "preset": true
                },
                {
                    "name": "FTP_USER_PASS",
                    "label": "FTP_USER_PASS",
                    "default": "badpass"
                },
                {
                    "name": "FTP_USER_HOME",
                    "label": "FTP_USER_HOME",
                    "default": "/data",
                    "preset": true
                },
                {
                    "name": "FTP_USER_GID",
                    "label": "FTP_USER_GID",
                    "default": "15000",
                    "preset": true
                },
                {
                    "name": "FTP_USER_UID",
                    "label": "FTP_USER_UID",
                    "default": "15000",
                    "preset": true
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "America/Los_Angeles"
                },
                {
                    "name": "PUBLICHOST",
                    "label": "PUBLICHOST",
                    "default": "localhost"
                }
            ],
            "labels": [],
            "note": "<a href='https://raw.githubusercontent.com/mediadepot/templates/master/portainer.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Cloud",
                "Other"
            ],
            "description": "Pydio (formerly AjaXplorer) is a mature open source software solution for file sharing and synchronization. With intuitive user interfaces (web / mobile / desktop), Pydio provides enterprise-grade features to gain back control and privacy of your data: user directory connectors, legacy filesystems drivers, comprehensive admin interface, and much more.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/pydio:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/pydio-icon.png",
            "name": "pydio",
            "platform": "linux",
            "ports": [
                "443/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Pydio",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Pydio",
                    "container": "/config"
                },
                {
                    "bind": "/portainer/Files/AppData/Pydio",
                    "container": "/data"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Messenger"
            ],
            "description": "Quassel IRC is a modern, cross-platform, distributed IRC client, meaning that one (or multiple) client(s) can attach to and detach from a central core -- much like the popular combination of screen and a text-based IRC client such as WeeChat, but graphical. Blowfish support and optional web-ui included.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/quassel-core:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/quassel-core-icon.png",
            "name": "quassel-core",
            "platform": "linux",
            "ports": [
                "4242:4242/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Quassel IRC",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Quassel-core",
                    "container": "/config"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "title": "RabbitMQ",
            "description": "Highly reliable enterprise messaging system",
            "categories": [
                "messaging"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/rabbitmq.png",
            "image": "rabbitmq:latest",
            "ports": [
                "5671/tcp",
                "5672/tcp"
            ],
            "volumes": [
                {
                    "container": "/var/lib/rabbitmq"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Radarr",
            "name": "Radarr",
            "description": "Monitor multiple RSS feeds for new movies and will grab, sort and rename them.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://radarr.video/' target='_blank' rel='noopener'>Radarr.video</a>",
            "categories": [
                "SelfHosted",
                "Mediacenter",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/radarr.png",
            "repository": {
                "stackfile": "composes-files/radarr.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "radarr"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "TZ",
                    "label": "Time zone ",
                    "description": "Exemple: Europe/Paris",
                    "default": "Europe/Paris"
                },
                {
                    "name": "FOLDER_DOWNLOAD",
                    "label": "Your download folder",
                    "description": "Exemple: /data/download"
                },
                {
                    "name": "FOLDER_MOVIES",
                    "label": "Your movies folder",
                    "description": "Exemple: /data/movies"
                }
            ]
        },
        {
            "type": 1,
            "name": "rclone",
            "title": "Rclone Config Backup",
            "description": "Rclone is a command line program to sync files and directories to and from cloud providers (Dropbox, GDrive, Box, etc)",
            "logo": "https://mediadepot.github.io/templates/img/rclone.png",
            "image": "mediadepot/rclone:latest",
            "categories": [
                "Backup:",
                "Cloud:",
                "Network:Other",
                "Tools:"
            ],
            "ports": [],
            "volumes": [
                {
                    "container": "/srv/rclone/config",
                    "bind": "/opt/mediadepot/apps/rclone"
                },
                {
                    "container": "/mnt/data",
                    "bind": "/opt/mediadepot/apps"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mediadepot/templates/master/portainer.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "A one-of-a-kind resume builder that's not out to get your data. Completely secure, customizable, portable, open-source and free forever.",
            "image": "amruthpillai/reactive-resume:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/reactiveresume.png",
            "name": "reactive-resume",
            "platform": "linux",
            "ports": [
                "80/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Reactive-Resume",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/ReactiveResume",
                    "container": "/usr/src/app"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Readarr",
            "name": "Readarr",
            "description": "Monitor multiple RSS feeds for new ebooks and audiobook and will grab, sort and rename them.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://github.com/Readarr/Readarr' target='_blank' rel='noopener'>Github.com</a>",
            "categories": [
                "SelfHosted",
                "Mediacenter",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/readarr.png",
            "repository": {
                "stackfile": "composes-files/readarr.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "readarr"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "TZ",
                    "label": "Time zone ",
                    "description": "Exemple: Europe/Paris",
                    "default": "Europe/Paris"
                },
                {
                    "name": "FOLDER_DOWNLOAD",
                    "label": "Your download folder",
                    "description": "Exemple: /data/download"
                },
                {
                    "name": "FOLDER_BOOKS",
                    "label": "Your movies folder",
                    "description": "Exemple: /data/books"
                }
            ]
        },
        {
            "type": 1,
            "title": "Redis",
            "description": "Open-source in-memory data structure store",
            "categories": [
                "database"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/redis.png",
            "image": "redis:latest",
            "ports": [
                "6379/tcp"
            ],
            "volumes": [
                {
                    "container": "/data"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 2,
            "title": "Redis Cluster",
            "description": "Open-source in-memory data structure store - Cluster mode",
            "categories": [
                "database"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/redis.png",
            "repository": {
                "url": "https://github.com/portainer/templates",
                "stackfile": "stacks/redis-cluster/docker-stack.yaml"
            },
            "env": [
                {
                    "name": "REDIS_PASSWD",
                    "label": "Redis password"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/portainer/templates/master/templates-2.0.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "title": "Redmine",
            "description": "Open-source project management tool",
            "categories": [
                "project-management"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/redmine.png",
            "image": "redmine:latest",
            "ports": [
                "3000/tcp"
            ],
            "volumes": [
                {
                    "container": "/usr/src/redmine/files"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "title": "Registry",
            "description": "Docker image registry",
            "categories": [
                "docker"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/registry.png",
            "image": "registry:latest",
            "ports": [
                "5000/tcp"
            ],
            "volumes": [
                {
                    "container": "/var/lib/registry"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "title": "Registry (cache)",
            "description": "Docker image registry configured as a DockerHub pull through cache",
            "categories": [
                "docker"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/registry.png",
            "image": "registry:latest",
            "ports": [
                "5000/tcp"
            ],
            "volumes": [
                {
                    "container": "/var/lib/registry"
                }
            ],
            "env": [
                {
                    "name": "REGISTRY_PROXY_REMOTEURL",
                    "default": "https://registry-1.docker.io",
                    "preset": true
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/portainer/templates/master/templates-2.0.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Requestrr",
            "name": "Requestrr",
            "description": "Ombi is a request management and media discovery tool built to work with your existing Plex ecosystem.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://github.com/darkalfx/requestrr' target='_blank' rel='noopener'>Github.com</a>",
            "categories": [
                "SelfHosted",
                "Mediacenter",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/requestrr.png",
            "repository": {
                "stackfile": "composes-files/requestrr.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "requestrr"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "TZ",
                    "label": "Time zone ",
                    "description": "Exemple: Europe/Paris",
                    "default": "Europe/Paris"
                }
            ]
        },
        {
            "categories": [
                "Backup",
                "Cloud",
                "Other",
                "Tools"
            ],
            "description": "Resilio Sync (formerly BitTorrent Sync) uses the BitTorrent protocol to sync files and folders between all of your devices. There are both free and paid versions, this container supports both.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/resilio-sync:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/resilio.png",
            "name": "resilio-sync",
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "title": "Resilio Sync",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Resilio-Sync",
                    "container": "/config"
                },
                {
                    "container": "/sync"
                },
                {
                    "bind": "/portainer/Downloads",
                    "container": "/downloads"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "RunDeck",
            "name": "RunDeck",
            "description": "Rundeck is a free software that allows the automation of server administration via the creation of jobs or tasks.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://www.rundeck.com/open-source' target='_blank' rel='noopener'>RunDeck.com</a></br>Don't forget to copy the data from <code>/home/rundeck</code> outside the container with <code>docker cp</code> and to uncomment the volume lines.</br>The default credentials are: <code>admin</code> / <code>admin</code>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/rundeck.png",
            "repository": {
                "stackfile": "composes-files/rundeck.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "rundeck"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "DB_USER",
                    "label": "Database user ",
                    "description": "No spaces or points",
                    "default": "rundeck"
                },
                {
                    "name": "DB_PASSWORD",
                    "label": "Database user password"
                }
            ]
        },
        {
            "type": 3,
            "title": "RustDesk",
            "name": "RustDesk",
            "description": "A remote desktop software, the open source TeamViewer alternative, works out of the box, no configuration required.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://rustdesk.com/' target='_blank' rel='noopener'>rustdesk.com</a>",
            "categories": [
                "SelfHosted"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/rustdesk.png",
            "repository": {
                "stackfile": "composes-files/rustdesk.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "rustdesk"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.domain.tld or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                }
            ]
        },
        {
            "type": 3,
            "title": "Rutorrent-Flood",
            "name": "Rutorrent-Flood",
            "description": "Webclient for download your torrents.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://github.com/Novik/ruTorrent' target='_blank' rel='noopener'>Github.com</a></br></br>Ports to open: <code>51415</code> & <code>6881</code>",
            "categories": [
                "SelfHosted",
                "Mediacenter",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/flood.png",
            "repository": {
                "stackfile": "composes-files/rutorrent.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "rutorrent"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "TZ",
                    "label": "Time zone ",
                    "description": "Exemple: Europe/Paris",
                    "default": "Europe/Paris"
                },
                {
                    "name": "FOLDER_DOWNLOAD",
                    "label": "Your download folder",
                    "description": "Exemple: /data/download"
                },
                {
                    "name": "FOLDER_SERIES",
                    "label": "Your series folder",
                    "description": "Exemple: /data/series"
                },
                {
                    "name": "FOLDER_MOVIES",
                    "label": "Your movies folder",
                    "description": "Exemple: /data/movies"
                }
            ]
        },
        {
            "categories": [
                "Downloaders"
            ],
            "description": "SABnzbd makes Usenet as simple and streamlined as possible by automating everything we can. All you have to do is add an .nzb. SABnzbd takes over from there, where it will be automatically downloaded, verified, repaired, extracted and filed away with zero human interaction.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/sabnzbd:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/sabnzbd-icon.png",
            "name": "sabnzbd",
            "platform": "linux",
            "ports": [
                "8080:8080/tcp",
                "9090:9090/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "SABnzbd",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Sabnzbd",
                    "container": "/config"
                },
                {
                    "bind": "/portainer/Downloads",
                    "container": "/downloads"
                },
                {
                    "bind": "/portainer/Downloads/incomplete",
                    "container": "/incomplete-downloads"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "title": "SQL Server",
            "description": "Microsoft SQL Server on Linux",
            "categories": [
                "database"
            ],
            "platform": "linux",
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>\nPassword needs to include at least 8 characters including uppercase, lowercase letters, base-10 digits and/or non-alphanumeric symbols.",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
            "image": "microsoft/mssql-server-linux:2017-GA",
            "ports": [
                "1433/tcp"
            ],
            "env": [
                {
                    "name": "ACCEPT_EULA",
                    "set": "Y"
                },
                {
                    "name": "SA_PASSWORD",
                    "label": "SA password"
                }
            ]
        },
        {
            "type": 1,
            "title": "SQL Server Express",
            "description": "Microsoft SQL Server Express for Windows containers",
            "categories": [
                "database"
            ],
            "platform": "windows",
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>\nPassword needs to include at least 8 characters including uppercase, lowercase letters, base-10 digits and/or non-alphanumeric symbols.",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
            "image": "microsoft/mssql-server-windows-express:latest",
            "ports": [
                "1433/tcp"
            ],
            "env": [
                {
                    "name": "ACCEPT_EULA",
                    "set": "Y"
                },
                {
                    "name": "sa_password",
                    "label": "SA password"
                }
            ],
            "volumes": [
                {
                    "container": "C:/temp/"
                }
            ]
        },
        {
            "type": 1,
            "title": "Scality S3",
            "description": "Standalone AWS S3 protocol server",
            "categories": [
                "storage"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/scality-s3.png",
            "image": "scality/s3server",
            "ports": [
                "8000/tcp"
            ],
            "env": [
                {
                    "name": "SCALITY_ACCESS_KEY",
                    "label": "Scality S3 access key"
                },
                {
                    "name": "SCALITY_SECRET_KEY",
                    "label": "Scality S3 secret key"
                }
            ],
            "volumes": [
                {
                    "container": "/usr/src/app/localData"
                },
                {
                    "container": "/usr/src/app/localMetadata"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "name": "scrutiny",
            "title": "Scrutiny",
            "description": "WebUI for smartd S.M.A.R.T monitoring",
            "logo": "https://mediadepot.github.io/templates/img/scrutiny.png",
            "image": "analogj/scrutiny:latest",
            "categories": [
                "Monitoring:"
            ],
            "ports": [
                "8080/tcp"
            ],
            "volumes": [
                {
                    "container": "/scrutiny/config/",
                    "bind": "/opt/mediadepot/apps/scrutiny"
                },
                {
                    "container": "/run/udev",
                    "bind": "/run/udev",
                    "readonly": true
                }
            ],
            "env": [],
            "labels": [
                {
                    "name": "traefik.enable",
                    "value": "true"
                },
                {
                    "name": "traefik.http.services.scrutiny.loadbalancer.server.port",
                    "value": "8080"
                },
                {
                    "name": "traefik.http.routers.scrutiny.entrypoints",
                    "value": "websecure"
                },
                {
                    "name": "traefik.http.routers.scrutiny.tls.certresolver",
                    "value": "mydnschallenge"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mediadepot/templates/master/portainer.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Scrypted",
            "name": "Scrypted",
            "description": "Open source home automation for cameras",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://www.scrypted.app' target='_blank' rel='noopener'>Scrypted.app</a></br></br>Warning: network mode host used ! </br>Accessible with port: <code>10443</code>",
            "categories": [
                "SelfHosted",
                "Domotic",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/scrypted.png",
            "repository": {
                "stackfile": "composes-files/scrypted.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "scrypted"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                }
            ]
        },
        {
            "categories": [
                "Cloud",
                "Other"
            ],
            "description": "Seafile is an open-source, cross-platform file-hosting software system. Files are stored on a central server and can be synchronized with personal computers and mobile devices through apps. Files on the Seafile server can also be accessed directly via the server's web interface.",
            "env": [
                {
                    "default": "Etc/UTC",
                    "label": "Time Zone",
                    "name": "TIME_ZONE"
                },
                {
                    "default": "password",
                    "label": "Database Password",
                    "name": "MYSQL_ROOT_PASSWORD"
                },
                {
                    "default": "me@example.com",
                    "label": "Administrator Email",
                    "name": "ADMIN_EMAIL"
                },
                {
                    "default": "asecret",
                    "label": "Administrator Password",
                    "name": "ADMIN_PASSWORD"
                },
                {
                    "default": "docs.seafile.com",
                    "label": "Domain Name",
                    "name": "SERVER_HOSTNAME"
                },
                {
                    "label": "Enable HTTPS?",
                    "name": "ENABLE_HTTPS",
                    "select": [
                        {
                            "default": true,
                            "text": "Yes",
                            "value": "true"
                        },
                        {
                            "text": "No",
                            "value": "false"
                        }
                    ]
                }
            ],
            "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/seafile.png",
            "name": "seafile",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/seafile.yml",
                "url": "https://github.com/SelfhostedPro/selfhosted_templates"
            },
            "title": "Seafile",
            "type": 3,
            "note": "<a href='https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "title": "Sematext Docker Agent",
            "description": "Collect logs, metrics and docker events",
            "categories": [
                "Log Management",
                "Monitoring"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/sematext_agent.png",
            "image": "sematext/sematext-agent-docker:latest",
            "name": "sematext-agent",
            "privileged": true,
            "env": [
                {
                    "name": "LOGSENE_TOKEN",
                    "label": "Logs token"
                },
                {
                    "name": "SPM_TOKEN",
                    "label": "SPM monitoring token"
                }
            ],
            "volumes": [
                {
                    "container": "/var/run/docker.sock",
                    "bind": "/var/run/docker.sock"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "Shiori is a simple bookmarks manager written in Go language. Intended as a simple clone of Pocket. You can use it as command line application or as web application.",
            "image": "radhifadlillah/shiori:latest",
            "logo": "https://raw.githubusercontent.com/robocopAlpha/selfhosted_templates/master/Images/shiori-icon.png",
            "name": "shiori",
            "platform": "linux",
            "ports": [
                "8080/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Shiori",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Shiori",
                    "container": "/srv/shiori"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Downloaders",
                "Video"
            ],
            "description": "Automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/sickchill:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/sickchill-icon.png",
            "name": "sickchill",
            "platform": "linux",
            "ports": [
                "8081:8081/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "SickChill",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/SickChill",
                    "container": "/config"
                },
                {
                    "bind": "/portainer/Downloads",
                    "container": "/downloads"
                },
                {
                    "bind": "/portainer/TV",
                    "container": "/tv"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Downloaders",
                "Video"
            ],
            "description": "SickGear provides management of TV shows and/or Anime, it detects new episodes, links downloader apps, and more.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/sickgear:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/sickgear-icon.png",
            "name": "sickgear",
            "platform": "linux",
            "ports": [
                "8081:8081/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "SickGear",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/SickGear",
                    "container": "/config"
                },
                {
                    "bind": "/portainer/TV",
                    "container": "/tv"
                },
                {
                    "bind": "/portainer/Downloads",
                    "container": "/downloads"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "name": "sickrage",
            "title": "SickRage",
            "description": "Automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic.",
            "logo": "https://mediadepot.github.io/templates/img/sickrage-icon.png",
            "image": "linuxserver/sickrage:latest",
            "categories": [
                "Downloaders:",
                "MediaApp:Video"
            ],
            "ports": [
                "8081/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/opt/mediadepot/apps/sickrage"
                },
                {
                    "container": "/downloads",
                    "bind": "/media/storage/downloads/tvshows"
                },
                {
                    "container": "/tv",
                    "bind": "/media/storage/tvshows"
                },
                {
                    "container": "/blackhole",
                    "bind": "/media/temp/blackhole/tvshows"
                }
            ],
            "env": [
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "15000",
                    "preset": true
                },
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "15000",
                    "preset": true
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "America/Los_Angeles"
                }
            ],
            "labels": [
                {
                    "name": "traefik.enable",
                    "value": "true"
                },
                {
                    "name": "traefik.http.services.sickrage.loadbalancer.server.port",
                    "value": "8081"
                },
                {
                    "name": "traefik.http.routers.sickrage.entrypoints",
                    "value": "websecure"
                },
                {
                    "name": "traefik.http.routers.sickrage.tls.certresolver",
                    "value": "mydnschallenge"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mediadepot/templates/master/portainer.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Sinusbot",
            "name": "Sinusbot",
            "description": "Bot for TeamSpeak and Discord",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://www.sinusbot.com/' target='_blank' rel='noopener'>Sinusbot.com</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/sinusbot.png",
            "repository": {
                "stackfile": "composes-files/sinusbot.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "sinusbot"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                }
            ]
        },
        {
            "categories": [
                "Management"
            ],
            "description": null,
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/smokeping:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/smokeping-icon.png",
            "name": "smokeping",
            "platform": "linux",
            "ports": [
                "80/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "SmokePing",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Smokeping",
                    "container": "/config"
                },
                {
                    "bind": "/portainer/Files/AppData/Smokeping",
                    "container": "/data"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "Self-hosted snippet manager.",
            "image": "snowmean/snibox-sqlite:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/snibox.png",
            "name": "Snibox",
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>\nLabel-oriented interface with search. Supports various programming languages, markdown, plain text.",
            "platform": "linux",
            "ports": [
                "3010:3000/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Snibox",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Snibox",
                    "container": "/app/db/database"
                }
            ]
        },
        {
            "type": 4,
            "title": "Softing EdgeConnector 840D",
            "description": "Access Siemens SINUMERIK 840D sl/pl controllers and provide data via OPC UA and MQTT",
            "stackfile": "https://raw.githubusercontent.com/portainer/templates/master/edge/softing-edgeconnector-840d/docker-compose.yml",
            "note": "<a href='https://raw.githubusercontent.com/portainer/templates/master/templates-2.0.json' target='_blank'>Source</a>"
        },
        {
            "type": 4,
            "title": "Softing EdgeConnector Aggregator",
            "description": "Offers a powerful OPC UA aggregation service which provides data via OPC UA, as well as MQTT",
            "stackfile": "https://raw.githubusercontent.com/portainer/templates/master/edge/softing-edgeconnector-aggregator/docker-compose.yml",
            "note": "<a href='https://raw.githubusercontent.com/portainer/templates/master/templates-2.0.json' target='_blank'>Source</a>"
        },
        {
            "type": 4,
            "title": "Softing EdgeConnector FANUC CNC",
            "description": "Connect FANUC CNCs and provide the data via OPC UA and MQTT",
            "stackfile": "https://raw.githubusercontent.com/portainer/templates/master/edge/softing-edgeconnector-fanuc-cnc/docker-compose.yml",
            "note": "<a href='https://raw.githubusercontent.com/portainer/templates/master/templates-2.0.json' target='_blank'>Source</a>"
        },
        {
            "type": 4,
            "title": "Softing EdgeConnector Siemens",
            "description": "Connect Siemens SIMATIC S7-300/400/1200/1500 PLCs and provide the data via OPC UA and MQTT",
            "stackfile": "https://raw.githubusercontent.com/portainer/templates/master/edge/softing-edgeconnector-siemens/docker-compose.yml",
            "note": "<a href='https://raw.githubusercontent.com/portainer/templates/master/templates-2.0.json' target='_blank'>Source</a>"
        },
        {
            "type": 4,
            "title": "Softing EdgeConnector modbus",
            "description": "Connect Modbus TCP Sensors/PLCs and provide the data via OPC UA and MQTT",
            "stackfile": "https://raw.githubusercontent.com/portainer/templates/master/edge/softing-edgeconnector-modbus/docker-compose.yml",
            "note": "<a href='https://raw.githubusercontent.com/portainer/templates/master/templates-2.0.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "title": "Solr",
            "description": "Open-source enterprise search platform",
            "categories": [
                "search-engine"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/solr.png",
            "image": "solr:latest",
            "ports": [
                "8983/tcp"
            ],
            "volumes": [
                {
                    "container": "/opt/solr/mydata"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Sonarr",
            "name": "Sonarr",
            "description": "Monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://sonarr.tv/' target='_blank' rel='noopener'>Sonarr.tv</a>",
            "categories": [
                "SelfHosted",
                "Mediacenter",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/sonarr.png",
            "repository": {
                "stackfile": "composes-files/sonarr.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "sonarr"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "TZ",
                    "label": "Time zone ",
                    "description": "Exemple: Europe/Paris",
                    "default": "Europe/Paris"
                },
                {
                    "name": "FOLDER_DOWNLOAD",
                    "label": "Your download folder",
                    "description": "Exemple: /data/download"
                },
                {
                    "name": "FOLDER_SERIES",
                    "label": "Your series folder",
                    "description": "Exemple: /data/series"
                }
            ]
        },
        {
            "categories": [
                "Tools",
                "Productivity",
                "Web",
                "Other"
            ],
            "description": "Strapi CMS.",
            "env": [
                {
                    "default": "1337",
                    "label": "Strapi Port",
                    "name": "STRAPI_PORT"
                },
                {
                    "label": "Strapi JWT Secret",
                    "name": "STRAPI_JWT_SECRET"
                },
                {
                    "default": "27017",
                    "label": "MongoDB Port",
                    "name": "MONGODB_PORT"
                },
                {
                    "default": "strapi",
                    "label": "MongoDB Root Username",
                    "name": "MONGODB_USER"
                },
                {
                    "label": "MongoDB Root Password",
                    "name": "MONGODB_PASS"
                },
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/strapi.yml",
                "url": "https://github.com/OliverCullimore/portainer-templates"
            },
            "title": "Strapi",
            "name": "strapi",
            "type": 3,
            "note": "<a href='https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Super WordPress by PAPAMICA",
            "name": "Super WordPress by PAPAMICA",
            "description": "WordPress with some plugins and options for my deployement.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://github.com/PAPAMICA/SuperWordPress' target='_blank' rel='noopener'>Github.com</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/wordpress.png",
            "repository": {
                "stackfile": "composes-files/superwordpress.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "superwordpress"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service link",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "DB_USER",
                    "label": "Database user ",
                    "description": "No spaces or points",
                    "default": "wordpress"
                },
                {
                    "name": "DB_PASSWORD",
                    "label": "Password for database user"
                },
                {
                    "name": "DB_ROOT",
                    "label": "Password for database root"
                },
                {
                    "name": "WORDPRESS_ADMIN_USERNAME",
                    "label": "Admin username for WordPress"
                },
                {
                    "name": "WORDPRESS_ADMIN_PASSWORD",
                    "label": "Password for WordPress admin"
                },
                {
                    "name": "WORDPRESS_ADMIN_EMAIL",
                    "label": "Email for WordPress admin"
                },
                {
                    "name": "WORDPRESS_LANGUAGE",
                    "label": "WordPress language ",
                    "description": "Example: en_US",
                    "default": "fr_FR"
                },
                {
                    "name": "PLUGINS_TO_INSTALL",
                    "label": "Plugins to install ",
                    "description": "Example: elementor jetpac",
                    "default": "mainwp-child elementor updraftplus header-footer-elementor envato-elements include-matomo jetpack wp-mail-smtp wordpress-seo duplicate-post autoptimize contact-form-7"
                },
                {
                    "name": "PLUGINS_TO_REMOVE",
                    "label": "Plugins to remove ",
                    "description": "Example: hello-dolly akismet",
                    "default": "hello-dolly akismet"
                },
                {
                    "name": "THEMES_TO_INSTALL",
                    "label": "Themes to install ",
                    "description": "Example: hello-elementor",
                    "default": "hello-elementor"
                },
                {
                    "name": "THEMES_TO_REMOVE",
                    "label": "Themes to remove ",
                    "description": "Example: twentytwenty",
                    "default": "twentytwenty twentytwentytwo twentytwentyone"
                },
                {
                    "name": "WORDPRESS_TITLE",
                    "label": "WordPress Title"
                },
                {
                    "name": "PLUGINS_AUTOUPDATE",
                    "label": "Activate autoupdate option for plugins ",
                    "description": "true / false",
                    "default": "true"
                },
                {
                    "name": "UPDATE_AT_START",
                    "label": "Activate update at start for core, themes and plugins ",
                    "description": "true / false",
                    "default": "true"
                }
            ]
        },
        {
            "type": 3,
            "title": "Swagger",
            "name": "Swagger",
            "description": "Simplify API development for users, teams, and enterprises with our open source and professional toolset.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://swagger.io/' target='_blank' rel='noopener'>Swagger.io</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/swagger.png",
            "repository": {
                "stackfile": "composes-files/swagger.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "swagger"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "API_URL",
                    "label": "Link to your API",
                    "description": "openapi.yaml"
                }
            ]
        },
        {
            "type": 2,
            "title": "Swarm monitoring",
            "description": "Monitor your cluster performances with Prometheus & Grafana",
            "note": "<a href='https://raw.githubusercontent.com/portainer/templates/master/templates-2.0.json' target='_blank'>Source</a>\nRequires Docker version 19.03.0+. <b>Make sure to add the <code>monitoring == true</code> one of your Swarm manager node before deploying this stack.</b>",
            "categories": [
                "Monitoring"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/portainer.png",
            "repository": {
                "url": "https://github.com/portainer/templates",
                "stackfile": "swarm/monitoring/docker-compose.yml"
            },
            "env": [
                {
                    "name": "GRAFANA_USER",
                    "label": "Grafana admin user",
                    "default": "admin"
                },
                {
                    "name": "GRAFANA_PASSWORD",
                    "label": "Grafana admin password"
                }
            ]
        },
        {
            "categories": [
                "Backup",
                "Cloud",
                "Other",
                "Tools"
            ],
            "description": null,
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/syncthing:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/syncthing-icon.png",
            "name": "syncthing",
            "platform": "linux",
            "ports": [
                "8384:8384/tcp",
                "21027:21027/udp",
                "22000:22000/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "SyncThing",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Syncthing",
                    "container": "/config"
                },
                {
                    "container": "/sync"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "TOSIBOX Lock for Container",
            "description": "Lock for Container brings secure connectivity inside your industrial IoT devices",
            "categories": [
                "edge"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/tosibox.png",
            "repository": {
                "url": "https://github.com/portainer/templates",
                "stackfile": "stacks/tosibox/docker-compose.yml"
            },
            "env": [
                {
                    "name": "LICENSE_KEY",
                    "label": "License key"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/portainer/templates/master/templates-2.0.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "TS-Website",
            "name": "TS-Website",
            "description": "Web interface for your TeamSpeak",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://github.com/Wruczek/ts-website' target='_blank' rel='noopener'>Github.com</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/teamspeak_alt.png",
            "repository": {
                "stackfile": "composes-files/ts3viewer.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "ts3viewer"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "DB_USER",
                    "label": "Database user ",
                    "description": "No spaces or points",
                    "default": "ts3viewer"
                },
                {
                    "name": "DB_PASSWORD",
                    "label": "Database user password"
                },
                {
                    "name": "DB_ROOT",
                    "label": "Database root password"
                }
            ]
        },
        {
            "type": 3,
            "title": "TSN Ranksystem",
            "name": "TSN Ranksystem",
            "description": "Web interface with rank for TeamSpeak",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://ts-ranksystem.com/' target='_blank' rel='noopener'>TS-Ranksystem.com</a></br>You need to comment \"INSTALL_MODE=1\" after install.",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/tsnranksystem.png",
            "repository": {
                "stackfile": "composes-files/ts3rank.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "ts3rank"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "DB_USER",
                    "label": "Database user ",
                    "description": "No spaces or points",
                    "default": "ts3rank"
                },
                {
                    "name": "DB_PASSWORD",
                    "label": "Database user password"
                },
                {
                    "name": "DB_ROOT",
                    "label": "Database root password"
                }
            ]
        },
        {
            "type": 3,
            "title": "Tautulli",
            "name": "Tautulli",
            "description": "Tautulli is a 3rd party application that you can run alongside your Plex Media Server to monitor activity and track various statistics.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://tautulli.com/' target='_blank' rel='noopener'>Tautulli.com</a>",
            "categories": [
                "SelfHosted",
                "Mediacenter",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/tautulli.png",
            "repository": {
                "stackfile": "composes-files/tautulli.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "tautulli"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "TZ",
                    "label": "Time zone ",
                    "description": "Exemple: Europe/Paris",
                    "default": "Europe/Paris"
                }
            ]
        },
        {
            "type": 3,
            "title": "TeamSpeak",
            "name": "TeamSpeak",
            "description": "Vocal server perfect for teamplay",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://teamspeak.com/en/' target='_blank' rel='noopener'>TeamSpeak.com</a></br>Ports to open: 9987, 10011, 30033 & 10022",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/teamspeak.png",
            "repository": {
                "stackfile": "composes-files/teamspeak.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "teamspeak"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "ADMIN_PASS",
                    "label": "Admin password"
                }
            ]
        },
        {
            "type": 3,
            "title": "Teedy",
            "name": "Teedy",
            "description": "Document management",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://teedy.io/#!/' target='_blank' rel='noopener'>Teedy.io</a></br>Default identifiants: admin/admin",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/teedy.png",
            "repository": {
                "stackfile": "composes-files/teedy.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "teedy"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "DB_USER",
                    "label": "Database user ",
                    "description": "No spaces or points",
                    "default": "teedy"
                }
            ]
        },
        {
            "categories": [
                "Tools",
                "Other"
            ],
            "description": "TestProject Agent with headless Chrome & Firefox browsers.",
            "env": [
                {
                    "label": "TestProject API Key",
                    "name": "TP_API_KEY"
                },
                {
                    "default": "docker-agent-1",
                    "label": "TestProject Agent Alias",
                    "name": "TP_AGENT_ALIAS"
                },
                {
                    "label": "Chrome SMH Size",
                    "name": "CHROME_SMH_SIZE",
                    "default": "1g"
                },
                {
                    "label": "Firefox SMH Size",
                    "name": "FIREFOX_SMH_SIZE",
                    "default": "1g"
                }
            ],
            "logo": "https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/images/testproject.png",
            "name": "testproject-chrome-firefox",
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/testproject-chrome-firefox.yml",
                "url": "https://github.com/OliverCullimore/portainer-templates"
            },
            "title": "TestProject Agent Browser Stack",
            "type": 3,
            "note": "<a href='https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "title": "The templates created by Technorabilia have been moved",
            "description": "The new location is https://raw.githubusercontent.com/technorabilia/portainer-templates/main/lsio/templates/templates.json",
            "platform": "linux",
            "note": "<a href='https://raw.githubusercontent.com/technorabilia/portainer-templates/main/lsio/templates/templates-2.0.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Messenger"
            ],
            "description": "A self-hosted web IRC client",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/thelounge:latest",
            "logo": "https://raw.githubusercontent.com/linuxserver/community-templates/master/lsiocommunity/img/shout-icon.png",
            "name": "thelounge",
            "platform": "linux",
            "ports": [
                "9000:9000/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "TheLounge",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/TheLounge",
                    "container": "/config"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "A unique, non-linear notebook wiki.",
            "image": "mazzolino/tiddlywiki:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/tiddlywiki.png",
            "name": "tiddlywiki",
            "platform": "linux",
            "ports": [
                "8080:8080/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "TiddlyWiki",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/TiddlyWiki",
                    "container": "/var/lib/tiddlywiki"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Other"
            ],
            "description": "Tiny Tiny RSS is an open source web-based news feed (RSS/Atom) reader and aggregator, designed to allow you to read news from any location, while feeling as close to a real desktop application as possible.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "lunik1/tt-rss:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/tt-rss-icon.png",
            "name": "tt-rss",
            "platform": "linux",
            "ports": [
                "80/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Tiny Tiny RSS",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/tt-rss",
                    "container": "/config"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Traefik",
            "name": "Traefik",
            "description": "Perfect proxy for Docker environment",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://traefik.io/traefik/' target='_blank' rel='noopener'>Traefik.io</a></br>Ports to open: 80, 443</br>You need to create these files: traefik.yml, config.yml, acme.json</br>Check my repo <a href='https://github.com/PAPAMICA/docker-environment' target='_blank' rel='noopener'>PAPAMICA/docker-environment</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/traefik.png",
            "repository": {
                "stackfile": "composes-files/traefik.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "traefik"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy, you need to create it before",
                    "default": "proxy"
                },
                {
                    "name": "ADMIN_PASS",
                    "label": "Admin user and password",
                    "description": "Format: USER:{SHA}XXXXXXXXXXXXXXXX"
                }
            ]
        },
        {
            "type": 3,
            "title": "Transmission",
            "name": "Transmission",
            "description": "Webinterface for download torrents.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://transmissionbt.com/' target='_blank' rel='noopener'>Transmissionbt.com</a></br></br>Port to open: <code>51413</code>",
            "categories": [
                "SelfHosted",
                "Mediacenter",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/transmission.png",
            "repository": {
                "stackfile": "composes-files/transmission.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "transmission"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "TZ",
                    "label": "Time zone ",
                    "description": "Exemple: Europe/Paris",
                    "default": "Europe/Paris"
                },
                {
                    "name": "FOLDER_DOWNLOAD",
                    "label": "Your download folder",
                    "description": "Exemple: /data/download"
                },
                {
                    "name": "FOLDER_SERIES",
                    "label": "Your series folder",
                    "description": "Exemple: /data/series"
                },
                {
                    "name": "FOLDER_MOVIES",
                    "label": "Your movies folder",
                    "description": "Exemple: /data/movies"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "VPN",
                "Tools"
            ],
            "description": "This container contains OpenVPN and Transmission with a configuration\nwhere Transmission is running only when OpenVPN has an active tunnel.\nIt bundles configuration files for many popular VPN providers to make the setup easier.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "default": "MULLVAD",
                    "description": "https://haugene.github.io/docker-transmission-openvpn/supported-providers/",
                    "label": "OPENVPN_PROVIDER",
                    "name": "OPENVPN_PROVIDER"
                },
                {
                    "default": "",
                    "label": "OPENVPN_USERNAME",
                    "name": "OPENVPN_USERNAME"
                },
                {
                    "default": "",
                    "label": "OPENVPN_PASSWORD",
                    "name": "OPENVPN_PASSWORD"
                },
                {
                    "default": "192.168.0.0/24",
                    "label": "LOCAL_NETWORK",
                    "name": "LOCAL_NETWORK"
                }
            ],
            "image": "haugene/transmission-openvpn:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/transmission-icon.png",
            "name": "transmission-openvpn",
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>\nList of supported providers available <a href='https://haugene.github.io/docker-transmission-openvpn/supported-providers'/>here</a>.",
            "platform": "linux",
            "ports": [
                "9091:9091/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Transmission-OpenVPN",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Downloads",
                    "container": "/data"
                },
                {
                    "bind": "/etc/localtime",
                    "container": "/etc/localtime"
                }
            ]
        },
        {
            "type": 3,
            "title": "Trilium",
            "name": "Trilium",
            "description": "Trilium Notes is a hierarchical note taking application",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://github.com/zadam/trilium/' target='_blank' rel='noopener'>Github Project</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/zadam/trilium/master/images/app-icons/png/128x128.png",
            "repository": {
                "stackfile": "composes-files/trilium.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "trilium"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                }
            ]
        },
        {
            "categories": [
                "Video",
                "Other"
            ],
            "description": "Tvheadend is a TV streaming server and recorder for Linux, FreeBSD and Android supporting DVB-S, DVB-S2, DVB-C, DVB-T, ATSC, ISDB-T, IPTV, SAT&gt;IP and HDHomeRun as input sources.\r\nTvheadend offers the HTTP (VLC, MPlayer), HTSP (Kodi, Movian) and SAT&gt;IP streaming.\r\nMultiple EPG sources are supported (over-the-air DVB and ATSC including OpenTV DVB extensions, XMLTV, PyXML).",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/tvheadend:latest",
            "logo": "http://i.imgur.com/zGSUAT4.png",
            "name": "tvheadend",
            "platform": "linux",
            "ports": [
                "9981:9981/tcp",
                "9982:9982/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Tvheadend",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/TVHeadend",
                    "container": "/config"
                },
                {
                    "container": "/recordings"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Video",
                "Other"
            ],
            "description": "Tvheadend is a small flask app to proxy requests between Plex Media Server and Tvheadend.",
            "env": [
                {
                    "default": "",
                    "label": "TVH_BINDADDR",
                    "name": "TVH_BINDADDR"
                },
                {
                    "default": "http://test:test@localhost:9981",
                    "label": "TVH_URL",
                    "name": "TVH_URL"
                },
                {
                    "default": "http://localhost",
                    "label": "TVH_PROXY_URL",
                    "name": "TVH_PROXY_URL"
                },
                {
                    "default": "6",
                    "description": "Number of tuners in TVHeadend",
                    "label": "TVH_TUNER_COUNT",
                    "name": "TVH_TUNER_COUNT"
                },
                {
                    "default": "300",
                    "description": "Subscription priority",
                    "label": "TVH_WEIGHT",
                    "name": "TVH_WEIGHT"
                },
                {
                    "default": "pass",
                    "description": "Stream profile for adhoc transcoding in TVHeadend, e.g. mp4",
                    "label": "TVH_PROFILE",
                    "name": "TVH_PROFILE"
                },
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "christoefar/tvhproxy:latest",
            "name": "tvhproxy",
            "platform": "linux",
            "ports": [
                "5004:5004/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Tvhproxy",
            "type": 1,
            "note": "<a href='https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Tools",
                "Other"
            ],
            "description": "A simple script that will watch a stream for you and earn the channel points.",
            "image": "rdavidoff/twitch-channel-points-miner-v2:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/twitchpointsminer.png",
            "name": "twitch-points-miner",
            "note": "<a href='https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Template/template.json' target='_blank'>Source</a>\nRequires run.py, this is your starter script with your configuration. Please copy and modify accordingly <a href='https://github.com/rdavydov/Twitch-Channel-Points-Miner-v2/tree/master?tab=readme-ov-file#how-to-use'/>Here</a>",
            "platform": "linux",
            "ports": [
                "5000:5000/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Twitch Points Miner",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/TwitchPointsMiner/run.py",
                    "container": "/usr/src/app/run.py"
                },
                {
                    "bind": "/portainer/Files/AppData/TwitchPointsMiner/cookies",
                    "container": "/usr/src/app/cookies"
                },
                {
                    "bind": "/portainer/Files/AppData/TwitchPointsMiner/logs",
                    "container": "/usr/src/app/logs"
                },
                {
                    "bind": "/portainer/Files/AppData/TwitchPointsMiner/analytics",
                    "container": "/usr/src/app/analytics"
                }
            ]
        },
        {
            "categories": [
                "Cloud",
                "Books"
            ],
            "description": "Ubooquity is a free, lightweight and easy-to-use home server for your comics and ebooks. Use it to access your files from anywhere, with a tablet, an e-reader, a phone or a computer.",
            "env": [
                {
                    "label": "MAXMEM",
                    "name": "MAXMEM",
                    "set": "512"
                },
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/ubooquity:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/ubooquity-icon.png",
            "name": "ubooquity",
            "platform": "linux",
            "ports": [
                "2202:2202/tcp",
                "2203:2203/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Ubooquity",
            "type": 1,
            "volumes": [
                {
                    "container": "/books"
                },
                {
                    "container": "/comics"
                },
                {
                    "container": "/config"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "title": "Ubuntu",
            "description": "Debian-based Linux operating system",
            "categories": [
                "operating-system"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ubuntu.png",
            "image": "ubuntu:latest",
            "interactive": true,
            "command": "/bin/bash",
            "note": "<a href='https://raw.githubusercontent.com/portainer/templates/master/templates-2.0.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Management",
                "Tools"
            ],
            "description": null,
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/unifi-controller:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/unifi-icon.png",
            "name": "unifi-controller",
            "platform": "linux",
            "ports": [
                "3478:3478/udp",
                "10001:10001/udp",
                "8080:8080/tcp",
                "8081:8081/tcp",
                "8443:8443/tcp",
                "8843:8843/tcp",
                "8880:8880/tcp",
                "6789:6789/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "UniFi Controller",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Unifi",
                    "container": "/config"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "CCTV"
            ],
            "description": "UniFi Video is a powerful and flexible, integrated IP video management surveillance system designed to work with Ubiquiti\u2019s UniFi Video Camera product line. UniFi Video has an intuitive, configurable, and feature\u2011packed user interface with advanced features such as motion detection, auto\u2011discovery, user\u2011level security, storage management, reporting, and mobile device support.",
            "env": [
                {
                    "default": "99",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "default": "002",
                    "label": "UMASK",
                    "name": "UMASK"
                },
                {
                    "label": "CONTEXT_PATH",
                    "name": "CONTEXT_PATH",
                    "set": "UniFi Video"
                }
            ],
            "image": "pducharme/unifi-video-controller:latest",
            "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/UniFiVideo-logo.png",
            "name": "UniFi Video",
            "platform": "linux",
            "ports": [
                "1935:1935/tcp",
                "7444:7444/tcp",
                "7447:7447/tcp",
                "6666:6666/tcp",
                "7442:7442/tcp",
                "7080:7080/tcp",
                "7443:7443/tcp",
                "7445:7445/tcp",
                "7446:7446/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "UniFi Video",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/UnifFiVideo/Recordings/",
                    "container": "/recordings"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/UniFiVideo/",
                    "container": "/config"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/portainer-2.0/Template/template.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Uptime Kuma",
            "name": "Uptime Kuma",
            "description": "Alternative to Uptime Robot",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://github.com/louislam/uptime-kuma' target='_blank' rel='noopener'>Github.com</a>",
            "categories": [
                "SelfHosted",
                "Monitoring",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/uptimekuma.svg",
            "repository": {
                "stackfile": "composes-files/uptime-kuma.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "uptime"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                }
            ]
        },
        {
            "type": 1,
            "title": "Urbackup",
            "description": "Open-source network backup",
            "categories": [
                "backup"
            ],
            "platform": "linux",
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>\nThis application web interface is exposed on the port 55414 inside the container.",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/urbackup.png",
            "image": "cfstras/urbackup",
            "ports": [
                "55413/tcp",
                "55414/tcp",
                "55415/tcp",
                "35622/tcp"
            ],
            "volumes": [
                {
                    "container": "/var/urbackup"
                }
            ]
        },
        {
            "type": 1,
            "name": "urlwatch",
            "title": "UrlWatch",
            "description": "A tool for monitoring webpages for updates",
            "logo": "https://mediadepot.github.io/templates/img/urlwatch.png",
            "image": "mediadepot/urlwatch:master",
            "categories": [
                "Tools:"
            ],
            "ports": [
                "8081/tcp"
            ],
            "volumes": [
                {
                    "container": "/srv/urlwatch/config",
                    "bind": "/opt/mediadepot/apps/urlwatch"
                },
                {
                    "container": "/etc/localtime",
                    "bind": "/etc/localtime",
                    "readonly": true
                }
            ],
            "env": [],
            "labels": [
                {
                    "name": "traefik.enable",
                    "value": "true"
                },
                {
                    "name": "traefik.http.services.urlwatch.loadbalancer.server.port",
                    "value": "8081"
                },
                {
                    "name": "traefik.http.routers.urlwatch.entrypoints",
                    "value": "websecure"
                },
                {
                    "name": "traefik.http.routers.urlwatch.tls.certresolver",
                    "value": "mydnschallenge"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mediadepot/templates/master/portainer.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "VSCode Online",
            "name": "VSCode Online",
            "description": "Web interface for VSCode",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://github.com/coder/code-server' target='_blank' rel='noopener'>Github.com</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/vscode.png",
            "repository": {
                "stackfile": "composes-files/vscode.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "name of the service ",
                    "description": "No spaces or points",
                    "default": "vscode"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "PASSWORD",
                    "label": "Password to acces web interface"
                }
            ]
        },
        {
            "type": 3,
            "title": "Vaultwarden",
            "name": "Vaultwarden",
            "description": "Password manager",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://github.com/dani-garcia/vaultwarden' target='_blank' rel='noopener'>Github.com</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/bitwarden.png",
            "repository": {
                "stackfile": "composes-files/vaultwarden.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "vaultwarden"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service link",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "SIGNUPS_ALLOWED",
                    "label": "Autorize signup ? ",
                    "description": "True or False",
                    "default": "True"
                },
                {
                    "name": "TIME_ZONE",
                    "label": "Time zone ",
                    "description": "Example : Europe/Paris",
                    "default": "Europe/Paris"
                },
                {
                    "name": "ADMIN_TOKEN",
                    "label": "Admin token",
                    "description": "For manage with url/admin"
                }
            ]
        },
        {
            "type": 3,
            "title": "Vikunja",
            "name": "Vikunja",
            "description": "The to-do app to organize your life.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://vikunja.io/' target='_blank' rel='noopener'>Vikunja.io</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/vikunja.png",
            "repository": {
                "stackfile": "composes-files/vikunja.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "vikunja"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "DB_USER",
                    "label": "Database user ",
                    "description": "No spaces or points",
                    "default": "vikunja"
                },
                {
                    "name": "DB_PASSWORD",
                    "label": "Database user password"
                },
                {
                    "name": "DB_ROOT",
                    "label": "Database root password"
                }
            ]
        },
        {
            "categories": [
                "Tools",
                "Productivity",
                "Web",
                "Other"
            ],
            "description": "wallabag is a self hostable application for saving web pages: Save and classify articles. Read them later. Freely.",
            "env": [
                {
                    "default": "ovmpmAWXRCabNlMgzlzFXDYmCFfzGv",
                    "description": "This should be set to a random string of characters.",
                    "label": "Secret",
                    "name": "SYMFONY__ENV__SECRET"
                },
                {
                    "default": "https://wallabag.example.com",
                    "label": "Domain Name",
                    "name": "SYMFONY__ENV__DOMAIN_NAME"
                },
                {
                    "default": "127.0.0.1",
                    "label": "SMTP Host",
                    "name": "SYMFONY__ENV__MAILER_HOST"
                },
                {
                    "default": "~",
                    "label": "SMTP Username",
                    "name": "SYMFONY__ENV__MAILER_USER"
                },
                {
                    "default": "~",
                    "label": "SMTP Password",
                    "name": "SYMFONY__ENV__MAILER_PASSWORD"
                },
                {
                    "default": "wallabag@example.com",
                    "label": "SMTP From Email",
                    "name": "SYMFONY__ENV__FROM_EMAIL"
                },
                {
                    "label": "Enable public user registration?",
                    "name": "SYMFONY__ENV__FOSUSER_REGISTRATION",
                    "select": [
                        {
                            "default": true,
                            "text": "Yes",
                            "value": "true"
                        },
                        {
                            "text": "No",
                            "value": "false"
                        }
                    ]
                },
                {
                    "label": "Require registration confirmation?",
                    "name": "SYMFONY__ENV__FOSUSER_CONFIRMATION",
                    "select": [
                        {
                            "default": true,
                            "text": "Yes",
                            "value": "true"
                        },
                        {
                            "text": "No",
                            "value": "false"
                        }
                    ]
                }
            ],
            "image": "wallabag/wallabag:latest",
            "logo": "https://raw.githubusercontent.com/jake-walker/selfhosted_templates/wallabag/Images/wallabag.png",
            "name": "wallabag",
            "platform": "linux",
            "ports": [
                "80:80/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Wallbag",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Wallabag/data",
                    "container": "/var/www/wallabag/data"
                },
                {
                    "bind": "/portainer/Files/AppData/Wallabag/images",
                    "container": "/var/www/wallabag/web/assets/images"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Other",
                "Tools",
                "Maintenance"
            ],
            "description": "With watchtower you can update the running version of your containerized app simply by pushing a new image to the Docker Hub or your own image registry. Watchtower will pull down your new image, gracefully shut down your existing container and restart it with the same options that were used when it was deployed initially.",
            "image": "containrrr/watchtower:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/watchtower.png",
            "name": "watchtower",
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>\nIt is recommended to manually update your containers but we're including this for those of you that don't care",
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "title": "Watchtower",
            "type": 1,
            "volumes": [
                {
                    "bind": "/var/run/docker.sock",
                    "container": "/var/run/docker.sock"
                }
            ]
        },
        {
            "categories": [
                "Downloaders"
            ],
            "description": "WebGrab+Plus is a multi-site incremental xmltv epg grabber. It collects tv-program guide data from selected tvguide sites for your favourite channels.[br]\r\n\t\tOptional postprocessors to add IMDb data or to customize your xmltv listing.[br]\r\n\t\thttp://www.webgrabplus.com/[br]\r\n\t\t[b][span style='color: #E80000;']Directions:[/span][/b][br]\r\n\t\t[b]/config[/b] : This is where WebGrab+Plus will store it's configuration.[br][br]\r\n\t\t[b]/data[/b] : This is where tv_grab_wg script in the Tvheadend container looks for the guide.xml file.[br][br]",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/webgrabplus:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/webgrabplus.png",
            "name": "webgrabplus",
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "title": "WebGrab+Plus",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/WebGrabPlus",
                    "container": "/config"
                },
                {
                    "bind": "/portainer/Files/AppData/WebGrabPlus",
                    "container": "/data"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Website HTML PHP",
            "name": "Website HTML PHP",
            "description": "Simple HTML website under PHP 7.4",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://github.com/LavoWeb/Docker' target='_blank' rel='noopener'>Github.com</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/html.png",
            "repository": {
                "stackfile": "composes-files/website-html.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "name of the service ",
                    "description": "No spaces or points",
                    "default": "website"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "Self-hosted, ad-free, privacy-respecting Google metasearch engine.",
            "image": "benbusby/whoogle-search:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/whoogle.png",
            "name": "whoogle",
            "platform": "linux",
            "ports": [
                "5001:5000/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Whoogle",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Whoogle",
                    "container": "/config"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Wiki.js",
            "name": "Wiki.js",
            "description": "The most powerful and extensible open source Wiki software",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://js.wiki/' target='_blank' rel='noopener'>js.wiki</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/wikijs.png",
            "repository": {
                "stackfile": "composes-files/wikijs.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "wikijs"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service link",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "DB_USER",
                    "label": "Database user ",
                    "description": "No spaces or points",
                    "default": "wikijs"
                },
                {
                    "name": "DB_PASSWORD",
                    "label": "Password for database user"
                },
                {
                    "name": "DB_ROOT",
                    "label": "Password for database root"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "VPN"
            ],
            "description": "Wireguard Server is a full featured secure network tunneling VPN software solution that integrates OpenVPN server capabilities, enterprise management capabilities, simplified OpenVPN Connect UI, and OpenVPN Client software packages that accommodate Windows, MAC, Linux, Android, and iOS environments.",
            "env": [
                {
                    "default": "wireguard.domain.com",
                    "label": "Server URL",
                    "name": "SERVERURL"
                },
                {
                    "default": "51820",
                    "label": "Server Port",
                    "name": "SERVERPORT"
                },
                {
                    "default": "1",
                    "label": "Peers",
                    "name": "PEERS"
                },
                {
                    "default": "auto",
                    "label": "Peer DNS",
                    "name": "PEERDNS"
                },
                {
                    "default": "10.64.1.0",
                    "label": "Internal Subnet",
                    "name": "INTERNAL_SUBNET"
                },
                {
                    "default": "0.0.0.0/0",
                    "label": "Allowed IPs",
                    "name": "ALLOWEDIPS"
                },
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "default": "Europe/London",
                    "label": "Timezone",
                    "name": "TZ"
                }
            ],
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/wireguard.yml",
                "url": "https://github.com/OliverCullimore/portainer-templates"
            },
            "title": "WireGuard",
            "name": "wireguard",
            "type": 3,
            "note": "<a href='https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "name": "wizarr",
            "title": "Wizarr",
            "description": " Wizarr is an advanced user invitation and management system for Jellyfin, Plex, Emby etc. ",
            "logo": "https://mediadepot.github.io/templates/img/wizarr-logo.png",
            "image": "ghcr.io/wizarrrr/wizarr",
            "categories": [
                "Tools:"
            ],
            "ports": [
                "5690/tcp"
            ],
            "volumes": [
                {
                    "container": "/data/database",
                    "bind": "/opt/mediadepot/apps/wizarr"
                },
                {
                    "container": "/etc/localtime",
                    "bind": "/etc/localtime",
                    "readonly": true
                }
            ],
            "env": [
                {
                    "name": "APP_URL",
                    "label": "APP_URL",
                    "default": "https://wizarr.domain.com"
                }
            ],
            "labels": [
                {
                    "name": "traefik.enable",
                    "value": "true"
                },
                {
                    "name": "traefik.http.services.wizarr.loadbalancer.server.port",
                    "value": "5690"
                },
                {
                    "name": "traefik.http.routers.wizarr.entrypoints",
                    "value": "websecure"
                },
                {
                    "name": "traefik.http.routers.wizarr.tls.certresolver",
                    "value": "mydnschallenge"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mediadepot/templates/master/portainer.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "WordPress",
            "name": "WordPress",
            "description": "WordPress is open source software you can use to create a beautiful website, blog, or app.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://wordpress.org/' target='_blank' rel='noopener'>WordPress.org</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/wordpress.png",
            "repository": {
                "stackfile": "composes-files/wordpress.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "wordpress"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service link",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "DB_USER",
                    "label": "Database user ",
                    "description": "No spaces or points",
                    "default": "wordpress"
                },
                {
                    "name": "DB_PASSWORD",
                    "label": "Password for database user"
                },
                {
                    "name": "DB_ROOT",
                    "label": "Password for database root"
                }
            ]
        },
        {
            "type": 1,
            "title": "Wowza",
            "description": "Streaming media server",
            "categories": [
                "streaming"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/wowza.png",
            "image": "sameersbn/wowza:4.1.2-8",
            "env": [
                {
                    "name": "WOWZA_ACCEPT_LICENSE",
                    "label": "Agree to Wowza EULA",
                    "set": "yes"
                },
                {
                    "name": "WOWZA_KEY",
                    "label": "License key"
                }
            ],
            "ports": [
                "1935/tcp",
                "8086/tcp",
                "8087/tcp",
                "8088/tcp"
            ],
            "volumes": [
                {
                    "container": "/var/lib/wowza"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Yacht",
            "name": "Yacht",
            "description": "web interface for managing docker containers.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://yacht.sh/' target='_blank' rel='noopener'>Yacht.sh</a>",
            "categories": [
                "SelfHosted",
                "Orchestrator",
                "Drackorr"
            ],
            "platform": "linux",
            "logo": "https://yacht.sh/img/logo-light.svg",
            "repository": {
                "stackfile": "composes-files/yacht.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "yacht"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Downloaders"
            ],
            "description": "YoutubeDL-Material is a Material Design frontend for youtube-dl. It's coded using Angular 9 for the frontend, and Node.js on the backend.",
            "image": "tzahi12345/youtubedl-material:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/ytdlm.png",
            "name": "youtubedl-material",
            "platform": "linux",
            "ports": [
                "17442:17442/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "YouTubeDL-Material",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/YTDLM",
                    "container": "/app/appdata"
                },
                {
                    "bind": "/portainer/Files/AppData/Youtube/Video",
                    "container": "/app/video"
                },
                {
                    "bind": "/portainer/Files/AppData/Youtube/Subscriptions",
                    "container": "/app/subscriptions"
                },
                {
                    "bind": "/portainer/Files/AppData/Youtube/Users",
                    "container": "/app/users"
                },
                {
                    "bind": "/portainer/Files/AppData/Youtube/Audio",
                    "container": "/app/audio"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "YourLS",
            "name": "YourLS",
            "description": "Link shorter",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://yourls.org/' target='_blank' rel='noopener'>YourLS.org</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/yourls.png",
            "repository": {
                "stackfile": "composes-files/yourls.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "yourls"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "DB_USER",
                    "label": "Database user ",
                    "description": "No spaces or points",
                    "default": "yourls"
                },
                {
                    "name": "DB_PASSWORD",
                    "label": "Database user password"
                },
                {
                    "name": "DB_ROOT",
                    "label": "Database root password"
                },
                {
                    "name": "ADMIN_USER",
                    "label": "Admin user for YourLS ",
                    "description": "No spaces or points",
                    "default": "admin"
                },
                {
                    "name": "ADMIN_PASSWORD",
                    "label": "Admin password for YourLS"
                }
            ]
        },
        {
            "categories": [
                "Messenger"
            ],
            "description": "ZNC is an IRC network bouncer or BNC. It can detach the client from the actual IRC server, and also from selected channels. Multiple clients from different locations can connect to a single ZNC account simultaneously and therefore appear under the same nickname on IRC.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/znc:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/znc-icon.png",
            "name": "znc",
            "platform": "linux",
            "ports": [
                "6501:6501/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "ZNC",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/ZNC",
                    "container": "/config"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "Zabbix",
            "name": "Zabbix",
            "description": "Best monitoring tools",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://www.zabbix.com/' target='_blank' rel='noopener'>Zabbix.com</a>",
            "categories": [
                "SelfHosted",
                "Monitoring",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/zabbix.png",
            "repository": {
                "stackfile": "composes-files/zabbix.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "zabbix"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "DB_USER",
                    "label": "Database user ",
                    "description": "No spaces or points",
                    "default": "zabbix"
                },
                {
                    "name": "DB_PASSWORD",
                    "label": "Database user password"
                },
                {
                    "name": "TIME_ZONE",
                    "label": "Time zone ",
                    "description": "Example : Europe/Paris",
                    "default": "Europe/Paris"
                }
            ]
        },
        {
            "type": 3,
            "title": "Zabbix Proxy",
            "name": "Zabbix Proxy",
            "description": "Proxy server for Zabbix",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://www.zabbix.com/' target='_blank' rel='noopener'>Zabbix.com</a></br>Port to open: 10051",
            "categories": [
                "SelfHosted",
                "Monitoring",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/zabbix.png",
            "repository": {
                "stackfile": "composes-files/zabbix-proxy.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "zabbix-proxy"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "PROXY_HOSTNAME",
                    "label": "name of zabbix proxy",
                    "description": "Example: zabbix-proxy"
                },
                {
                    "name": "ZABBIX_SERVER",
                    "label": "FQDN of zabbix server",
                    "description": "Example: zabbic.domain.tld"
                }
            ]
        },
        {
            "type": 3,
            "title": "email2pdf",
            "name": "email2pdf",
            "description": "Any unread email that does not have an attachment will be converted to a pdf and then emailed to the address you specify.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://github.com/rob-luke/emails-html-to-pdf' target='_blank' rel='noopener'>Github.com</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/email2pdf.png",
            "repository": {
                "stackfile": "composes-files/email2pdf.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "email2pdf"
                },
                {
                    "name": "IMAP_SERVER",
                    "label": "IMAP server ",
                    "description": "Exemple: mail.infomaniak.com",
                    "default": "mail.infomaniak.com"
                },
                {
                    "name": "IMAP_USERNAME",
                    "label": "IMAP Username"
                },
                {
                    "name": "IMAP_PASSWORD",
                    "label": "IMAP Password"
                },
                {
                    "name": "IMAP_FOLDER",
                    "label": "Mail folder to inspect ",
                    "description": "Exemple: PAPERLESS",
                    "default": "PAPERLESS"
                },
                {
                    "name": "SMTP_SERVER",
                    "label": "SMTP server ",
                    "description": "Exemple: mail.infomaniak.com",
                    "default": "mail.infomaniak.com"
                },
                {
                    "name": "SMTP_PORT",
                    "label": "SMTP port ",
                    "description": "Exemple: 587",
                    "default": "587"
                },
                {
                    "name": "SMTP_TLS",
                    "label": "SMTP TLS ",
                    "description": "True/False",
                    "default": "True"
                },
                {
                    "name": "MAIL_SENDER",
                    "label": "Mail sender"
                },
                {
                    "name": "MAIL_DESTINATION",
                    "label": "Mail destination"
                },
                {
                    "name": "INTER_RUN_INTERVAL",
                    "label": "Run interval ",
                    "description": "in seconde",
                    "default": "300"
                },
                {
                    "name": "HOSTS",
                    "label": "List of hosts added to /etc/hosts ",
                    "description": "Semicolon separated",
                    "default": "127.0.0.1 tracking.paypal.com"
                }
            ]
        },
        {
            "categories": [
                "Tools",
                "Other"
            ],
            "description": "An app that periodically gets energy data from the geotogether.com API and stores it in an InfluxDB database.",
            "env": [
                {
                    "default": "10",
                    "description": "Specify the fetch interval for live meter data",
                    "label": "Live Meter Data Fetch Interval (seconds)",
                    "name": "LIVE_DATA_FETCH_INTERVAL"
                },
                {
                    "default": "300",
                    "description": "Specify the fetch interval for periodic meter data",
                    "label": "Periodic Meter Data Fetch Interval (seconds)",
                    "name": "PERIODIC_DATA_FETCH_INTERVAL"
                },
                {
                    "description": "Specify the geo Home username",
                    "label": "geo User",
                    "name": "GEO_USER"
                },
                {
                    "description": "Specify the geo Home password",
                    "label": "geo Pass",
                    "name": "GEO_PASS"
                },
                {
                    "description": "Specify the InfluxDB host",
                    "label": "InfluxDB Host",
                    "name": "INFLUXDB_HOST"
                },
                {
                    "default": "8086",
                    "description": "Specify the InfluxDB port",
                    "label": "InfluxDB Port",
                    "name": "INFLUXDB_PORT"
                },
                {
                    "description": "Specify the InfluxDB organization",
                    "label": "InfluxDB Organization",
                    "name": "INFLUXDB_ORG"
                },
                {
                    "description": "Specify the InfluxDB Bucket",
                    "label": "InfluxDB Bucket",
                    "name": "INFLUXDB_BUCKET"
                },
                {
                    "description": "Specify the InfluxDB Token",
                    "label": "InfluxDB Token",
                    "name": "INFLUXDB_TOKEN"
                },
                {
                    "default": "/config/config.json",
                    "description": "Specify the config filepath",
                    "label": "Config Filepath",
                    "name": "CONFIG_FILE"
                },
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "olivercullimore/geo-energy-data:v2.0.0",
            "logo": "https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/images/geo-energy-data.png",
            "name": "geo-energy-data",
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "title": "geo Energy Data",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/geoEnergyData",
                    "container": "/config"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "homer",
            "name": "homer",
            "description": "A dead simple static HOMepage for your servER to keep your services on hand, from a simple yaml configuration file.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://github.com/bastienwirtz/homer' target='_blank' rel='noopener'>Github.com</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com//bastienwirtz/homer/main/public/logo.png",
            "repository": {
                "stackfile": "composes-files/homer.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "homer"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                }
            ]
        },
        {
            "category": [
                "Downloaders",
                "Other",
                "Tools"
            ],
            "description": "NZBHydra is a meta search for NZB indexers and the \"spiritual successor\" to NZBmegasearcH. It provides easy access to a number of raw and newznab based indexers.",
            "env": [
                {
                    "label": "PUID",
                    "name": "PUID",
                    "set": "1000"
                },
                {
                    "label": "PGID",
                    "name": "PGID",
                    "set": "1000"
                },
                {
                    "label": "TZ",
                    "name": "TZ",
                    "set": "America/Chicago"
                }
            ],
            "image": "linuxserver/hydra2:latest",
            "logo": "https://raw.githubusercontent.com/thesugarat/portainer_templates-1/master/Images/hydra-icon.png",
            "platform": "linux",
            "ports": [
                "5076/tcp"
            ],
            "title": "hydra2",
            "type": 1,
            "volumes": [
                {
                    "container": "/config"
                },
                {
                    "container": "/downloads"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/dnburgess/self-hosted-template/master/template.json' target='_blank'>Source</a>"
        },
        {
            "category": [
                "Tools",
                "Web"
            ],
            "description": "This container sets up an Nginx webserver and reverse proxy with php support and a built-in letsencrypt client that automates free SSL server certificate generation and renewal processes. It also contains fail2ban for intrusion prevention.\r\n  \r\n  Before running this container, make sure that the url and subdomains are properly forwarded to this container's host.\r\n  \r\n  - Port 443 on the internet side of the router should be forwarded to this container's port 443.\r\n  - If you need a dynamic dns provider, you can use the free provider duckdns.org where the url will be yoursubdomain.duckdns.org and the subdomains    can be www,ftp,cloud\r\n  - The container detects changes to url and subdomains, revokes existing certs and generates new ones during start. \r\n  - It also detects changes to the DHLEVEL parameter and replaces the dhparams file.\r\n  \r\n  - If you'd like to password protect your sites, you can use htpasswd. Run the following command on your host to generate the htpasswd file docker exec -it letsencrypt htpasswd -c /config/nginx/.htpasswd &lt;username&gt;",
            "env": [
                {
                    "label": "EMAIL",
                    "name": "EMAIL",
                    "set": "-Xms256m -Xmx512m"
                },
                {
                    "label": "URL",
                    "name": "URL",
                    "set": "-Xms256m -Xmx512m"
                },
                {
                    "label": "SUBDOMAINS",
                    "name": "SUBDOMAINS",
                    "set": "www,"
                },
                {
                    "label": "ONLY_SUBDOMAINS",
                    "name": "ONLY_SUBDOMAINS",
                    "set": "false"
                },
                {
                    "label": "DHLEVEL",
                    "name": "DHLEVEL",
                    "set": "2048"
                },
                {
                    "label": "PUID",
                    "name": "PUID",
                    "set": "1000"
                },
                {
                    "label": "PGID",
                    "name": "PGID",
                    "set": "1000"
                },
                {
                    "label": "VALIDATION",
                    "name": "VALIDATION",
                    "set": "http"
                },
                {
                    "label": "DNSPLUGIN",
                    "name": "DNSPLUGIN",
                    "set": "http"
                },
                {
                    "label": "TZ",
                    "name": "TZ",
                    "set": "America/Chicago"
                }
            ],
            "image": "linuxserver/letsencrypt:latest",
            "logo": "https://raw.githubusercontent.com/thesugarat/portainer_templates-1/master/Images/letsencrypt.png",
            "platform": "linux",
            "ports": [
                "80/tcp",
                "443/tcp"
            ],
            "title": "letsencrypt",
            "type": 1,
            "volumes": [
                {
                    "container": "/config"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/dnburgess/self-hosted-template/master/template.json' target='_blank'>Source</a>"
        },
        {
            "category": [
                "Music"
            ],
            "description": "Libresonic is a free, web-based media streamer, providing ubiqutious access to your music. Use it to share your music with friends, or to listen to your own music while at work. You can stream to multiple players simultaneously, for instance to one player in your kitchen and another in your living room. /music = Location of music. /media = Location of other media. /podcasts = Location of podcasts. /playlists = Location for playlists storage. CONTEXT_PATH is for setting url-base in reverse proxy setups - (optional) Default user/pass is admin/admin",
            "env": [
                {
                    "label": "CONTEXT_PATH",
                    "name": "CONTEXT_PATH",
                    "set": ""
                },
                {
                    "label": "PUID",
                    "name": "PUID",
                    "set": "1000"
                },
                {
                    "label": "PGID",
                    "name": "PGID",
                    "set": "1000"
                },
                {
                    "label": "TZ",
                    "name": "TZ",
                    "set": "America/Chicago"
                }
            ],
            "image": "linuxserver/libresonic:latest",
            "logo": "https://raw.githubusercontent.com/thesugarat/portainer_templates-1/master/Images/libresonic.png",
            "platform": "linux",
            "ports": [
                "4040/tcp"
            ],
            "title": "libresonic",
            "type": 1,
            "volumes": [
                {
                    "container": "/music"
                },
                {
                    "container": "/playlists"
                },
                {
                    "container": "/podcasts"
                },
                {
                    "container": "/media"
                },
                {
                    "container": "/config"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/dnburgess/self-hosted-template/master/template.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "n8n",
            "name": "n8n",
            "description": "Automatisation (Zapier alternative)",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://github.com/n8n-io/n8n' target='_blank' rel='noopener'>Github.com</a></br>Port to open:5678",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://avatars.githubusercontent.com/u/45487711?s=200&v=4",
            "repository": {
                "stackfile": "composes-files/n8m.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "n8n"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                }
            ]
        },
        {
            "category": [
                "Other"
            ],
            "description": "OpenVPN Access Server is a full featured secure network tunneling VPN software solution that integrates OpenVPN server capabilities, enterprise management capabilities, simplified OpenVPN Connect UI, and OpenVPN Client software packages that accommodate Windows, MAC, Linux, Android, and iOS environments.",
            "env": [
                {
                    "label": "INTERFACE",
                    "name": "INTERFACE",
                    "set": "eth0"
                },
                {
                    "label": "PGID",
                    "name": "PGID",
                    "set": "1000"
                },
                {
                    "label": "PUID",
                    "name": "PUID",
                    "set": "1000"
                },
                {
                    "label": "TZ",
                    "name": "TZ",
                    "set": "America/Chicago"
                }
            ],
            "image": "linuxserver/openvpn-as:latest",
            "logo": "https://raw.githubusercontent.com/thesugarat/portainer_templates-1/master/Images/openvpn-as-icon.png",
            "platform": "linux",
            "ports": [
                "943/tcp",
                "9443/tcp",
                "1194/udp"
            ],
            "title": "openvpn-as",
            "type": 1,
            "volumes": [
                {
                    "container": "/config"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/dnburgess/self-hosted-template/master/template.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "phpmyadmin",
            "name": "phpmyadmin",
            "description": "A web interface for MySQL and MariaDB",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://github.com/phpmyadmin/phpmyadmin' target='_blank' rel='noopener'>Github.com</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://www.phpmyadmin.net/static/images/logo-og.png",
            "repository": {
                "stackfile": "composes-files/phpmyadmin.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "phpmyadmin"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                }
            ]
        },
        {
            "categories": [
                "Downloaders"
            ],
            "description": "The qBittorrent project aims to provide an open-source software alternative to \u00b5Torrent. qBittorrent is based on the Qt toolkit and libtorrent-rasterbar library.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/qbittorrent:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/qbittorrent-icon.png",
            "name": "qbittorrent",
            "platform": "linux",
            "ports": [
                "6881:6881/tcp",
                "6881:6881/udp",
                "8080:8080/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "qBittorrent",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/qBittorrent",
                    "container": "/config"
                },
                {
                    "bind": "/portainer/Downloads",
                    "container": "/downloads"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 1,
            "name": "qdirstat",
            "title": "qdirstat",
            "description": "QDirStat is a graphical application to show where your disk space has gone and to help you to clean it up.",
            "logo": "https://mediadepot.github.io/templates/img/cardigann.png",
            "image": "jlesage/qdirstat:latest",
            "categories": [
                "Utilities:"
            ],
            "ports": [
                "5800/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/opt/mediadepot/apps/qdirstat"
                },
                {
                    "container": "/storage/opt",
                    "bind": "/opt"
                },
                {
                    "container": "/storage/mnt",
                    "bind": "/mnt"
                }
            ],
            "env": [
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "15000",
                    "preset": true
                },
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "15000",
                    "preset": true
                }
            ],
            "labels": [
                {
                    "name": "traefik.enable",
                    "value": "true"
                },
                {
                    "name": "traefik.http.services.qdirstat.loadbalancer.server.port",
                    "value": "5800"
                },
                {
                    "name": "traefik.http.routers.qdirstat.entrypoints",
                    "value": "websecure"
                },
                {
                    "name": "traefik.http.routers.qdirstat.tls.certresolver",
                    "value": "mydnschallenge"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mediadepot/templates/master/portainer.json' target='_blank'>Source</a>"
        },
        {
            "category": [
                "Messenger"
            ],
            "description": "Quassel IRC is a modern, cross-platform, distributed IRC client, meaning that one (or multiple) client(s) can attach to and detach from a central core -- much like the popular combination of screen and a text-based IRC client such as WeeChat, but graphical. Blowfish support and optional web-ui included.",
            "env": [
                {
                    "label": "PGID",
                    "name": "PGID",
                    "set": "1000"
                },
                {
                    "label": "PUID",
                    "name": "PUID",
                    "set": "1000"
                },
                {
                    "label": "TZ",
                    "name": "TZ",
                    "set": "America/Chicago"
                }
            ],
            "image": "linuxserver/quassel-core:latest",
            "logo": "https://raw.githubusercontent.com/thesugarat/portainer_templates-1/master/Images/quassel-core-icon.png",
            "platform": "linux",
            "ports": [
                "4242/tcp"
            ],
            "title": "quassel-core",
            "type": 1,
            "volumes": [
                {
                    "container": "/config"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/dnburgess/self-hosted-template/master/template.json' target='_blank'>Source</a>"
        },
        {
            "categories": [
                "Downloaders"
            ],
            "description": "Popular torrent client with a webui for ease of use.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/rutorrent:latest",
            "logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/rutorrent-icon.png",
            "name": "rutorrent",
            "platform": "linux",
            "ports": [
                "80/tcp",
                "51413:51413/tcp",
                "6881:6881/udp"
            ],
            "restart_policy": "unless-stopped",
            "title": "ruTorrent",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/ruTorrent",
                    "container": "/config"
                },
                {
                    "bind": "/portainer/Downloads",
                    "container": "/downloads"
                }
            ],
            "note": "<a href='https://raw.githubusercontent.com/mikestraney/portainer-templates/master/templates.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "umami",
            "name": "umami",
            "description": "Light alternative to Google Analitycs",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://umami.is/' target='_blank' rel='noopener'>Umami.is</a></br></br>Warning: RTFM ! You need to add one file and restart !",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/umami.png",
            "repository": {
                "stackfile": "composes-files/umami.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "umami"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "HASH_SALT",
                    "label": "Generate encryption"
                }
            ]
        },
        {
            "type": 1,
            "name": "vsftpd",
            "title": "vsftpd FTP Server",
            "description": "Secure, fast FTP server for UNIX-like systems",
            "logo": "https://mediadepot.github.io/templates/img/pureftpd-icon.jpg",
            "image": "delfer/alpine-ftp-server",
            "network": "host",
            "categories": [
                "Network:Other",
                "Utilities:"
            ],
            "ports": [
                "21/tcp",
                "21000/tcp",
                "21001/tcp",
                "21002/tcp",
                "21003/tcp",
                "21004/tcp",
                "21005/tcp",
                "21006/tcp",
                "21007/tcp",
                "21008/tcp",
                "21009/tcp",
                "21010/tcp"
            ],
            "volumes": [
                {
                    "container": "/home/depot/tvshows",
                    "bind": "/media/storage/tvshows"
                },
                {
                    "container": "/home/depot/movies",
                    "bind": "/media/storage/movies"
                },
                {
                    "container": "/home/depot/music",
                    "bind": "/media/storage/music"
                },
                {
                    "container": "/home/depot/ebooks",
                    "bind": "/media/storage/ebooks"
                },
                {
                    "container": "/home/depot/photos",
                    "bind": "/media/storage/photos"
                },
                {
                    "container": "/home/depot/documents",
                    "bind": "/media/storage/documents"
                },
                {
                    "container": "/home/depot/downloads",
                    "bind": "/media/storage/downloads"
                },
                {
                    "container": "/home/depot/software",
                    "bind": "/media/storage/software"
                },
                {
                    "container": "/home/depot/blackhole",
                    "bind": "/media/temp/blackhole"
                },
                {
                    "container": "/home/depot/processing",
                    "bind": "/media/temp/processing"
                }
            ],
            "env": [
                {
                    "name": "ADDRESS",
                    "label": "ADDRESS"
                },
                {
                    "name": "USERS",
                    "label": "USERS",
                    "default": "depot|badpass|/home/depot|15000"
                }
            ],
            "labels": [],
            "note": "<a href='https://raw.githubusercontent.com/mediadepot/templates/master/portainer.json' target='_blank'>Source</a>"
        },
        {
            "type": 3,
            "title": "xBrowserSync",
            "name": "xBrowserSync",
            "description": "xBrowserSync is a free and open-source alternative to browser syncing tools.",
            "note": "<a href='https://raw.githubusercontent.com/PAPAMICA/docker-compose-collection/master/templates-portainer.json' target='_blank'>Source</a>\nWebsite: <a href='https://www.xbrowsersync.org/' target='_blank' rel='noopener'>xbrowsersync.org</a></br></br>Warning! You need to clone this repo before: <a href='https://github.com/xbrowsersync/api-docker/' target='_blank' rel='noopener'>Github.com</a>",
            "categories": [
                "SelfHosted",
                "PAPAMICA"
            ],
            "platform": "linux",
            "logo": "https://img.papamica.com/logo/xbrowsersync.png",
            "repository": {
                "stackfile": "composes-files/xbrowsersync.yml",
                "url": "https://github.com/PAPAMICA/docker-compose-collection"
            },
            "env": [
                {
                    "name": "SERVICE",
                    "label": "Name of the service ",
                    "description": "No spaces or points",
                    "default": "xBrowserSync"
                },
                {
                    "name": "DATA_LOCATION",
                    "label": "Data localization ",
                    "description": "Example: /apps/service",
                    "default": "/_data/apps"
                },
                {
                    "name": "URL",
                    "label": "Service URL",
                    "description": "Example: service.papamica.fr or service.com"
                },
                {
                    "name": "NETWORK",
                    "label": "Your Traefik network ",
                    "description": "Example: proxy",
                    "default": "proxy"
                },
                {
                    "name": "DB_USER",
                    "label": "Database user ",
                    "description": "No spaces or points",
                    "default": "xBrowserSync"
                },
                {
                    "name": "DB_PASSWORD",
                    "label": "Database user password"
                }
            ]
        }
    ]
}